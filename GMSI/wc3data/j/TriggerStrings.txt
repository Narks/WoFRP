[TriggerEventStrings]
MapInitializationEvent="Map Initialization"
MapInitializationEvent="Map initialization"
MapInitializationEventHint=
TriggerRegisterDeathEvent="Destructible Dies"
TriggerRegisterDeathEvent=~Destructible," dies"
TriggerRegisterDeathEventHint="Use 'Event Response - Dying Destructible' to refer to the destructible that is dying."
TriggerRegisterDestDeathInRegionEvent="Destructible Within Rect Dies"
TriggerRegisterDestDeathInRegionEvent="A destructible within ",~Rect," dies"
TriggerRegisterDestDeathInRegionEventHint="Only the first 64 destructibles within the rect when this event is registered are monitored for death. It is best to use this event for rects containing only a few destructibles."
TriggerRegisterDialogEventBJ="Dialog Button Click"
TriggerRegisterDialogEventBJ="A dialog button is clicked for ",~Dialog
TriggerRegisterDialogEventBJHint=
TriggerRegisterGameStateEventTimeOfDay="Time Of Day"
TriggerRegisterGameStateEventTimeOfDay="The in-game time of day becomes ",~Operation," ",~Time
TriggerRegisterGameStateEventTimeOfDayHint="A game day is 24 hours long. Six a.m. is 6.00, and six p.m. is 18.00."
TriggerRegisterVariableEvent="Value Of Real Variable"
TriggerRegisterVariableEvent=~Variable," becomes ",~Operation," ",~Value
TriggerRegisterVariableEventHint="This only works for non-array variables of type 'Real'."
TriggerRegisterGameLoadedEventBJ="Game Load"
TriggerRegisterGameLoadedEventBJ="A saved game is loaded"
TriggerRegisterGameLoadedEventBJHint="This fires immediately after the saved game is finished loading."
TriggerRegisterGameSavedEventBJ="Game Save"
TriggerRegisterGameSavedEventBJ="The game is about to be saved"
TriggerRegisterGameSavedEventBJHint="This fires immediately before the game is saved."
TriggerRegisterShowSkillEventBJ="Hero Abilities Button Clicked"
TriggerRegisterShowSkillEventBJ="The 'Hero Abilities' button is clicked"
TriggerRegisterShowSkillEventBJHint="This event should only be used in single-player maps."
TriggerRegisterBuildSubmenuEventBJ="Build Structure Button Clicked"
TriggerRegisterBuildSubmenuEventBJ="The 'Build Structure' button is clicked"
TriggerRegisterBuildSubmenuEventBJHint="This event should only be used in single-player maps."
TriggerRegisterGameEvent="Tournament Event"
TriggerRegisterGameEvent="The tournament game must end ",~Event Type
TriggerRegisterGameEventHint="This event only occurs during automated tournament games on Battle.net."
TriggerRegisterPlayerChatEvent="Chat Message"
TriggerRegisterPlayerChatEvent=~Player," types a chat message containing ",~Text," as ",~Match Type
TriggerRegisterPlayerChatEventHint="Use 'Event Response - Entered/Matched Chat Message' to refer to the chat message that was entered/matched. Use 'Event Response - Triggering Player' to refer to the player who typed the message."
TriggerRegisterPlayerEventEndCinematic="Cinematic Skipped"
TriggerRegisterPlayerEventEndCinematic=~Player," skips a cinematic sequence"
TriggerRegisterPlayerEventEndCinematicHint="This event occurs whenever the player presses the 'Escape' key (regardless of whether or not they are viewing a cinematic)."
TriggerRegisterPlayerSelectionEventBJ="Selection Event"
TriggerRegisterPlayerSelectionEventBJ=~Player," ",~Selects/Deselects," a unit"
TriggerRegisterPlayerSelectionEventBJHint="Use 'Event Response - Triggering Unit' to refer to the unit being selected or deselected."
TriggerRegisterPlayerKeyEventBJ="Keyboard Event"
TriggerRegisterPlayerKeyEventBJ=~Player," ",~Presses/Releases," the ",~Key," key"
TriggerRegisterPlayerKeyEventBJHint=
TriggerRegisterPlayerStateEvent="Properties"
TriggerRegisterPlayerStateEvent=~Player,"'s ",~Property," becomes ",~Operation," ",~Value
TriggerRegisterPlayerStateEventHint=
TriggerRegisterPlayerEventAllianceChanged="Alliance Change (Any)"
TriggerRegisterPlayerEventAllianceChanged=~Player," changes alliance settings"
TriggerRegisterPlayerEventAllianceChangedHint=
TriggerRegisterPlayerAllianceChange="Alliance Change (Specific)"
TriggerRegisterPlayerAllianceChange=~Player," changes ",~Alliance Type," settings"
TriggerRegisterPlayerAllianceChangeHint=
TriggerRegisterPlayerEventVictory="Victory"
TriggerRegisterPlayerEventVictory=~Player," leaves the game with a victory"
TriggerRegisterPlayerEventVictoryHint=
TriggerRegisterPlayerEventDefeat="Defeat"
TriggerRegisterPlayerEventDefeat=~Player," leaves the game with a defeat"
TriggerRegisterPlayerEventDefeatHint=
TriggerRegisterPlayerEventLeave="Leaves Game"
TriggerRegisterPlayerEventLeave=~Player," leaves the game"
TriggerRegisterPlayerEventLeaveHint="This event occurs regardless of how the player left the game."
TriggerRegisterTimerEventSingle="Time Elapsed"
TriggerRegisterTimerEventSingle="Elapsed game time is ",~Time," seconds"
TriggerRegisterTimerEventSingleHint=
TriggerRegisterTimerEventPeriodic="Periodic Event"
TriggerRegisterTimerEventPeriodic="Every ",~Time," seconds of game time"
TriggerRegisterTimerEventPeriodicHint=
TriggerRegisterTimerExpireEventBJ="Timer Expires"
TriggerRegisterTimerExpireEventBJ=~Timer," expires"
TriggerRegisterTimerExpireEventBJHint="A timer expires when it reaches 0. Repeating timers expire every time they reach 0. Use 'Event Response - Expiring Timer' to refer to the timer that is expiring."
TriggerRegisterUnitEvent="Specific Unit Event"
TriggerRegisterUnitEvent=~Unit," ",~Event
TriggerRegisterUnitEventHint=
TriggerRegisterPlayerUnitEventSimple="Player-Owned Unit Event"
TriggerRegisterPlayerUnitEventSimple="A unit owned by ",~Player," ",~Event
TriggerRegisterPlayerUnitEventSimpleHint=
TriggerRegisterAnyUnitEventBJ="Generic Unit Event"
TriggerRegisterAnyUnitEventBJ="A unit ",~Event
TriggerRegisterAnyUnitEventBJHint=
TriggerRegisterEnterRectSimple="Unit Enters Rect"
TriggerRegisterEnterRectSimple="A unit enters ",~Rect
TriggerRegisterEnterRectSimpleHint="Use 'Event Response - Entering Unit' to refer to the unit entering the rect."
TriggerRegisterLeaveRectSimple="Unit Leaves Rect"
TriggerRegisterLeaveRectSimple="A unit leaves ",~Rect
TriggerRegisterLeaveRectSimpleHint="Use 'Event Response - Leaving Unit' to refer to the unit leaving the rect."
TriggerRegisterUnitInRangeSimple="Unit Within Range"
TriggerRegisterUnitInRangeSimple="A unit comes within ",~Range," of ",~Unit
TriggerRegisterUnitInRangeSimpleHint="Use 'Event Response - Triggering Unit' to refer to the unit that is entering within range."
TriggerRegisterUnitLifeEvent="Life"
TriggerRegisterUnitLifeEvent=~Unit,"'s life becomes ",~Operation," ",~Value
TriggerRegisterUnitLifeEventHint=
TriggerRegisterUnitManaEvent="Mana"
TriggerRegisterUnitManaEvent=~Unit,"'s mana becomes ",~Operation," ",~Value
TriggerRegisterUnitManaEventHint=
TriggerRegisterTrackableHitEvent="Trackable is Clicked"
TriggerRegisterTrackableHitEvent=~Trackable," is clicked"
TriggerRegisterTrackableHitEventHint="[WEU ADD-IN]"
TriggerRegisterTrackableTrackEvent="Cursor is Moved over Trackable"
TriggerRegisterTrackableTrackEvent="The cursor is moved over ",~Trackable
TriggerRegisterTrackableTrackEventHint="[WEU ADD-IN]"
TriggerRegisterPlayerEvent="Advanced Events"
TriggerRegisterPlayerEvent=~Player," ",~PlayerOptionEvent
TriggerRegisterPlayerEventHint="[WEU ADD-IN]"
TriggerRegisterPlayerUnitEvent="Player-Owned Unit Event (Conditional)"
TriggerRegisterPlayerUnitEvent="A unit owned by ",~Player," ",~Event," Matching: ",~Condition
TriggerRegisterPlayerUnitEventHint="Adds a condtion to the event [WEU ADD-IN]"
TriggerRegisterEnterRegionSimple="Unit Enters Region"
TriggerRegisterEnterRegionSimple="A unit enters ",~Region,
TriggerRegisterEnterRegionSimpleHint="Use 'Event Response - Entering Unit' to refer to the unit entering the region [WEU ADD-IN]"
TriggerRegisterLeaveRegionSimple="Unit Leaves Region"
TriggerRegisterLeaveRegionSimple="A unit leaves ",~Region,
TriggerRegisterLeaveRegionSimpleHint="Use 'Event Response - Leaving Unit' to refer to the unit leaving the region [WEU ADD-IN]"
TriggerRegisterEnterRegion="A Unit Enters Region (Conditional)"
TriggerRegisterEnterRegion="A unit enters ",~Region," and matches ",~Condition
TriggerRegisterEnterRegionHint="Better than 'Unit Enters Rect' because you can get the Triggering Region. Use Entering Unit to match [WEU ADD-IN]"
TriggerRegisterLeaveRegion="A Unit Leaves Region (Conditional)"
TriggerRegisterLeaveRegion="A unit leaves ",~Region," and matches ",~Condition
TriggerRegisterLeaveRegionHint="Better than 'Unit Leaves Rect' because you can get the Triggering Region. Use Leaving Unit to match [WEU ADD-IN]"
TriggerRegisterGameStateEvent="Game State Event"
TriggerRegisterGameStateEvent=~Gamestate," becomes ",~Operation," ",~Value
TriggerRegisterGameStateEventHint="[WEU ADD-IN]"
TriggerRegisterUnitStateEvent="Unit State Event"
TriggerRegisterUnitStateEvent=~Unit,"'s "~UnitState," ",~Operator," ",~Real
TriggerRegisterUnitStateEventHint="[WEU ADD-IN]"
AddMoveSlotEvent="A Item is Moved to Inventory Slot"
AddMoveSlotEvent="Any unit moves any item to inventory slot ",~Nr
AddMoveSlotEventHint="Slot numbers range from 1 to 6"
AddAnyUnitIssuedAnyOrderEvent="Any Unit is Issued Any Order"
AddAnyUnitIssuedAnyOrderEvent="Any Unit is Issued Any Order"
AddAnyUnitIssuedAnyOrderEventHint=
AnyDamageEvent="Any Unit Takes Damage"
AnyDamageEvent="Any unit takes damage"
AnyDamageEventHint=
AUnitIsTargetedByASpell="A Unit is Targeted by a Spell"
AUnitIsTargetedByASpell="A unit is targeted by a spell"
AUnitIsTargetedByASpellHint="You can't use 'Triggering Unit' with this event"
AddSelectSpecificHeroEvent="A Hero is Selected (Specific)"
AddSelectSpecificHeroEvent="One of the offered heros is selected by a player"
AddSelectSpecificHeroEventHint="(SEL) Requires Hero Selection files. Use 'Triggering Unit' and 'Owner of Triggering Unit' to get the selected unit and the player that selected it"
AddSelectRandomHeroEvent="A Hero is Selected (Random)"
AddSelectRandomHeroEvent="A player clicks the random hero button"
AddSelectRandomHeroEventHint="(SEL) Requires Hero Selection files. Use 'Owner of Triggering Unit' to get the Triggering Player"
AddTownPortalEvent="A Unit Uses a Town Portal"
AddTownPortalEvent="A unit uses a town portal to ",~Enter/Leave," the town"
AddTownPortalEventHint="(ITEMS) (ABIL) Requries advanced items and abilities. Use 'Triggering Unit' to access the unit"
[TriggerConditionStrings]
OperatorCompareBoolean="Boolean Comparison"
OperatorCompareBoolean=~Value," ",~Operator," ",~Value
OperatorCompareBooleanHint=
OperatorCompareAbilityId="Ability Comparison"
OperatorCompareAbilityId=~Value," ",~Operator," ",~Value
OperatorCompareAbilityIdHint=
OperatorCompareBuffId="Buff Comparison"
OperatorCompareBuffId=~Value," ",~Operator," ",~Value
OperatorCompareBuffIdHint=
OperatorCompareDestructible="Destructible Comparison"
OperatorCompareDestructible=~Value," ",~Operator," ",~Value
OperatorCompareDestructibleHint=
OperatorCompareDestructableCode="Destructible-Type Comparison"
OperatorCompareDestructableCode=~Value," ",~Operator," ",~Value
OperatorCompareDestructableCodeHint=
OperatorCompareButton="Dialog Button Comparison"
OperatorCompareButton=~Value," ",~Operator," ",~Value
OperatorCompareButtonHint=
OperatorCompareGameDifficulty="Game Difficulty Comparison"
OperatorCompareGameDifficulty=~Value," ",~Operator," ",~Value
OperatorCompareGameDifficultyHint=
OperatorCompareGameSpeed="Game Speed Comparison"
OperatorCompareGameSpeed=~Value," ",~Operator," ",~Value
OperatorCompareGameSpeedHint=
OperatorCompareHeroSkill="Hero Skill Comparison"
OperatorCompareHeroSkill=~Value," ",~Operator," ",~Value
OperatorCompareHeroSkillHint=
OperatorCompareInteger="Integer Comparison"
OperatorCompareInteger=~Value," ",~Operator," ",~Value
OperatorCompareIntegerHint=
OperatorCompareItem="Item Comparison"
OperatorCompareItem=~Value," ",~Operator," ",~Value
OperatorCompareItemHint=
OperatorCompareItemType="Item-Class Comparison"
OperatorCompareItemType=~Value," ",~Operator," ",~Value
OperatorCompareItemTypeHint=
OperatorCompareItemCode="Item-Type Comparison"
OperatorCompareItemCode=~Value," ",~Operator," ",~Value
OperatorCompareItemCodeHint=
OperatorCompareMeleeDifficulty="Melee AI Comparison"
OperatorCompareMeleeDifficulty=~Value," ",~Operator," ",~Value
OperatorCompareMeleeDifficultyHint=
OperatorCompareOrderCode="Order Comparison"
OperatorCompareOrderCode=~Value," ",~Operator," ",~Value
OperatorCompareOrderCodeHint=
OperatorComparePlayer="Player Comparison"
OperatorComparePlayer=~Value," ",~Operator," ",~Value
OperatorComparePlayerHint=
OperatorComparePlayerColor="Player Color Comparison"
OperatorComparePlayerColor=~Value," ",~Operator," ",~Value
OperatorComparePlayerColorHint=
OperatorComparePlayerControl="Player Controller Comparison"
OperatorComparePlayerControl=~Value," ",~Operator," ",~Value
OperatorComparePlayerControlHint=
OperatorComparePlayerSlotStatus="Player Slot Status Comparison"
OperatorComparePlayerSlotStatus=~Value," ",~Operator," ",~Value
OperatorComparePlayerSlotStatusHint=
OperatorCompareRace="Race Comparison"
OperatorCompareRace=~Value," ",~Operator," ",~Value
OperatorCompareRaceHint=
OperatorCompareReal="Real Comparison"
OperatorCompareReal=~Value," ",~Operator," ",~Value
OperatorCompareRealHint=
OperatorCompareString="String Comparison"
OperatorCompareString=~Value," ",~Operator," ",~Value
OperatorCompareStringHint="For two strings to be equal, they must be of equal length and content."
OperatorCompareTechCode="Tech-Type Comparison"
OperatorCompareTechCode=~Value," ",~Operator," ",~Value
OperatorCompareTechCodeHint=
OperatorCompareTrigger="Trigger Comparison"
OperatorCompareTrigger=~Value," ",~Operator," ",~Value
OperatorCompareTriggerHint=
OperatorCompareUnit="Unit Comparison"
OperatorCompareUnit=~Value," ",~Operator," ",~Value
OperatorCompareUnitHint=
OperatorCompareUnitCode="Unit-Type Comparison"
OperatorCompareUnitCode=~Value," ",~Operator," ",~Value
OperatorCompareUnitCodeHint=
OperatorCompareTerrainType="Terrain Type Comparison"
OperatorCompareTerrainType=~Value," ",~Operator," ",~Value
OperatorCompareTerrainTypeHint=
GetBooleanAnd="And"
GetBooleanAnd=~Condition 1," and ",~Condition 2
GetBooleanAndHint=
GetBooleanOr="Or"
GetBooleanOr=~Condition 1," or ",~Condition 2
GetBooleanOrHint=
AndMultiple="And, Multiple Conditions"
AndMultiple="And - All (Conditions) are true"
AndMultipleHint="Add conditions to this function in the main display."
OrMultiple="Or, Multiple Conditions"
OrMultiple="Or - Any (Conditions) are true"
OrMultipleHint="Add conditions to this function in the main display."
OperatorCompareEventId="Trigger Event Id Comparison"
OperatorCompareEventId=~Value," ",~Operator," ",~Value
OperatorCompareEventIdHint="[WEU ADD-IN]"
OperatorCompareTrackable="Trackable Comparison"
OperatorCompareTrackable=~Value," ",~Operator," ",~Value
OperatorCompareTrackableHint="[WEU ADD-IN]"
OperatorCompareUbersplat="Ubersplat Comparison"
OperatorCompareUbersplat=~Value," ",~Operator," ",~Value
OperatorCompareUbersplatHint="[WEU ADD-IN]"
OperatorCompareImage="Image Comparison"
OperatorCompareImage=~Value," ",~Operator," ",~Value
OperatorCompareImageHint="[WEU ADD-IN]"
OperatorCompareLightning="Lightning Comparison"
OperatorCompareLightning=~Value," ",~Operator," ",~Value
OperatorCompareLightningHint="[WEU ADD-IN]"
OperatorCompareTriggerAction="Trigger Action Comparison"
OperatorCompareTriggerAction=~Value," ",~Operator," ",~Value
OperatorCompareTriggerActionHint="[WEU ADD-IN]"
OperatorCompareTriggerCondition="Trigger Condition Comparison"
OperatorCompareTriggerCondition=~Value," ",~Operator," ",~Value
OperatorCompareTriggerConditionHint="[WEU ADD-IN]"
OperatorCompareUnitState="Unitstate Comparison"
OperatorCompareUnitState=~Value," ",~Operator," ",~Value
OperatorCompareUnitStateHint=""[WEU ADD-IN]"
OperatorComparePlayerState="Playerstate Comparison"
OperatorComparePlayerState=~Value," ",~Operator," ",~Value
OperatorComparePlayerStateHint="[WEU ADD-IN]"
OperatorCompareRegion="Region Comparison"
OperatorCompareRegion=~Value," ",~Operator," ",~Value
OperatorCompareRegionHint="[WEU ADD-IN]"
OperatorCompareGameState="Gamestate Comparison"
OperatorCompareGameState=~Value," ",~Operator," ",~Value
OperatorCompareGameStateHint="[WEU ADD-IN]"
 ="Custom Script"
 ="(",~Script Code,")"
 Hint="[WEU ADD-IN]"
[TriggerActionStrings]
DoNothing="Do Nothing"
DoNothing="Do nothing"
DoNothingHint=
CommentString="Comment"
CommentString="-------- ",~Comment Text," --------"
CommentStringHint=
CustomScriptCode="Custom Script"
CustomScriptCode="Custom script: ",~Script Code
CustomScriptCodeHint="Enter one line of script code. Example: 'call my_func(udg_my_var)'"
TriggerSleepAction="Wait"
TriggerSleepAction="Wait ",~Time," seconds"
TriggerSleepActionHint="The duration of this wait is specified in real-time seconds."
PolledWait="Wait (Game-Time)"
PolledWait="Wait ",~Time," game-time seconds"
PolledWaitHint="The duration of this wait is specified in game-time seconds. This is a polled wait, so it may last slightly longer than requested."
WaitForCondition="Wait For Condition"
WaitForCondition="Wait until ",~Condition,", checking every ",~Interval," seconds"
WaitForConditionHint=
WaitForSoundBJ="Wait For Sound"
WaitForSoundBJ="Wait for ",~Sound," to be ",~Time," seconds from finished playing"
WaitForSoundBJHint="This action only waits if the sound is currently playing. If the sound has not yet started, or has already finished, this action does nothing."
SetVariable="Set Variable"
SetVariable="Set ",~Variable," = ",~Value
SetVariableHint=
ReturnAction="Skip Remaining Actions"
ReturnAction="Skip remaining actions"
ReturnActionHint="This causes all remaining actions in the trigger to be skipped."
IfThenElseMultiple="If / Then / Else, Multiple Functions"
IfThenElseMultiple="If (All Conditions are True) then do (Then Actions) else do (Else Actions)"
IfThenElseMultipleHint="Add conditions and actions to this function in the main display."
IfThenElse="If / Then / Else"
IfThenElse="If ",~Condition," then do ",~Action," else do ",~Action
IfThenElseHint=
ForLoopAMultiple="For Each Integer A, Do Multiple Actions
ForLoopAMultiple="For each (Integer A) from ",~Start," to ",~End,", do (Actions)"
ForLoopAMultipleHint="Add actions to this function in the main display. The end value is assumed to be larger than the start value."
ForLoopBMultiple="For Each Integer B, Do Multiple Actions
ForLoopBMultiple="For each (Integer B) from ",~Start," to ",~End,", do (Actions)"
ForLoopBMultipleHint="Add actions to this function in the main display. The end value is assumed to be larger than the start value."
ForLoopVarMultiple="For Each Integer Variable, Do Multiple Actions
ForLoopVarMultiple="For each (Integer ",~Variable,") from ",~Start," to ",~End,", do (Actions)"
ForLoopVarMultipleHint="Add actions to this function in the main display. The end value is assumed to be larger than the start value."
ForLoopA="For Each Integer A, Do Action"
ForLoopA="For each (Integer A) from ",~Start," to ",~End,", do ",~Action
ForLoopAHint="The end value is assumed to be larger than the start value."
ForLoopB="For Each Integer B, Do Action"
ForLoopB="For each (Integer B) from ",~Start," to ",~End,", do ",~Action
ForLoopBHint="The end value is assumed to be larger than the start value."
ForLoopVar="For Each Integer Variable, Do Action"
ForLoopVar="For each (Integer ",~Variable,") from ",~Start," to ",~End,", do ",~Action
ForLoopVarHint="The end value is assumed to be larger than the start value."
StartMeleeAI="Start Melee AI Script"
StartMeleeAI="Start melee AI script for ",~Player,": ",~Script
StartMeleeAIHint="This should only only be used for computer-controlled player slots. When using this action, it is advised that you enable the 'Fixed Player Settings' force property."
StartCampaignAI="Start Campaign AI Script"
StartCampaignAI="Start campaign AI script for ",~Player,": ",~Script
StartCampaignAIHint="This should only only be used for computer-controlled player slots. When using this action, it is advised that you enable the 'Fixed Player Settings' force property."
CommandAI="Send AI Command"
CommandAI="Send ",~Player," the AI Command (",~Command,", ",~Data,")"
CommandAIHint="This action is for internal use in AI scripts."
RemoveGuardPosition="Ignore Unit Guard Position"
RemoveGuardPosition="Ignore ",~Unit,"'s guard position"
RemoveGuardPositionHint="This action tells the AI to neither use nor replace a given preplaced unit. This has no effect on Heroes and peon-type units."
RemoveAllGuardPositions="Ignore All Unit Guard Positions"
RemoveAllGuardPositions="Ignore the guard positions of all ",~Player," units"
RemoveAllGuardPositionsHint="This action tells the AI for the given player to neither use nor replace any of its preplaced units. This has no effect on Heroes and peon-type units."
RecycleGuardPosition="Recycle Unit Guard Position"
RecycleGuardPosition="Recycle ",~Unit,"'s guard position"
RecycleGuardPositionHint="This action requests that the AI recycle the guard position that once belonged to the specified unit."
LockGuardPosition="Lock Guard Position"
LockGuardPosition="Lock guard position of ",~Unit
LockGuardPositionHint="This action prevents the AI from changing the guard position of a unit."
SetUnitAnimation="Play Unit Animation"
SetUnitAnimation="Play ",~Unit,"'s ",~Animation Name," animation"
SetUnitAnimationHint="Use 'Reset Unit Animation' to revert to a unit's normal animation."
SetUnitAnimationWithRarity="Play Unit Animation (Specify Rarity)"
SetUnitAnimationWithRarity="Play ",~Unit,"'s ",~Animation Name," animation, using only ",~Rarity," animations"
SetUnitAnimationWithRarityHint="This animation will repeat until reset with 'Reset Unit Animation'."
QueueUnitAnimationBJ="Queue Unit Animation"
QueueUnitAnimationBJ="Queue ",~Unit,"'s ",~Animation Name," animation"
QueueUnitAnimationBJHint=
ResetUnitAnimation="Reset Unit Animation"
ResetUnitAnimation="Reset ",~Unit,"'s animation"
ResetUnitAnimationHint="Sets the unit's animation back to whatever the unit is doing."
AddUnitAnimationPropertiesBJ="Add/Remove Unit Animation Tag"
AddUnitAnimationPropertiesBJ=~Add/Remove," the ",~Tag," animation tag to ",~Unit
AddUnitAnimationPropertiesBJHint=
SetUnitLookAt="Lock Body-Part Facing"
SetUnitLookAt="Lock ",~Unit,"'s ",~Source," to face ",~Unit,", offset by (",~X,", ",~Y,", ",~Z,")"
SetUnitLookAtHint="The unit's body-part will continue to face the target until 'Reset Body-Part Facing' is used. The offset is taken as (X, Y, Z) from the target's feet."
ResetUnitLookAt="Reset Body-Part Facing"
ResetUnitLookAt="Reset ",~Unit,"'s body-part facing"
ResetUnitLookAtHint="Returns a unit's body-part facing to normal."
SetUnitScalePercent="Change Unit Size"
SetUnitScalePercent="Change ",~Unit,"'s size to (",~X,"%, ",~Y,"%, ",~Z,"%) of its original size"
SetUnitScalePercentHint="The scaling values apply to (Length, Width, Height) when viewing a unit head-on."
SetUnitVertexColorBJ="Change Unit Vertex Coloring"
SetUnitVertexColorBJ="Change ",~Unit,"'s vertex coloring to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetUnitVertexColorBJHint="The color values are (Red, Green, Blue). Most units default to 100% red, green, and blue, with 0% transparency. A 100% transparent unit is completely invisible."
SetUnitTimeScalePercent="Change Unit Animation Speed"
SetUnitTimeScalePercent="Change ",~Unit,"'s animation speed to ",~Percent,"% of its original speed"
SetUnitTimeScalePercentHint="To revert a unit's animation speed to default, set its animation speed to 100%."
SetUnitTurnSpeedBJ="Change Unit Turn Speed"
SetUnitTurnSpeedBJ="Change ",~Unit," turn speed to ",~Value
SetUnitTurnSpeedBJHint="A unit's turn speed determines how quickly the unit changes direction. Turn speed values are expected to be between 0 and 1, with smaller numbers indicating slower turning rates."
SetUnitBlendTimeBJ="Change Unit Blend Time"
SetUnitBlendTimeBJ="Change ",~Unit," blend time to ",~Value
SetUnitBlendTimeBJHint="A unit's blend time determines how quickly the unit's body parts turn to face a direction."
SetUnitFlyHeightBJ="Change Unit Flying Height"
SetUnitFlyHeightBJ="Change ",~Unit," flying height to ",~Height," at ",~Rate
SetUnitFlyHeightBJHint="Only flying units use flying heights."
SetUnitPropWindowBJ="Change Unit Prop Window Angle"
SetUnitPropWindowBJ="Change ",~Unit," prop window angle to ",~Angle
SetUnitPropWindowBJHint=
SetDestructableAnimationBJ="Play Destructible Animation"
SetDestructableAnimationBJ="Play ",~Destructible,"'s ",~Animation Name," animation"
SetDestructableAnimationBJHint=
QueueDestructableAnimationBJ="Queue Destructible Animation"
QueueDestructableAnimationBJ="Queue ",~Destructible,"'s ",~Animation Name," animation"
QueueDestructableAnimationBJHint=
SetDestAnimationSpeedPercent="Change Destructible Animation Speed"
SetDestAnimationSpeedPercent="Change ",~Destructible,"'s animation speed to ",~Percent,"% of its original speed"
SetDestAnimationSpeedPercentHint="To revert a destructible's animation speed to default, set its animation speed to 100%."
SetDoodadAnimationRectBJ="Play Animation For Doodads In Rect"
SetDoodadAnimationRectBJ="Play the ",~Animation Name," animation for all doodads of type ",~Doodad Type," within ",~Rect
SetDoodadAnimationRectBJHint="Special animation names: 'show', 'hide', 'soundon', 'soundoff'"
SetDoodadAnimationBJ="Play Animation For Doodads In Circle"
SetDoodadAnimationBJ="Play the ",~Animation Name," animation for all doodads of type ",~Doodad Type," within ",~Radius," of ",~Point
SetDoodadAnimationBJHint="Special animation names: 'show', 'hide', 'soundon', 'soundoff'"
CameraSetupApplyForPlayer="Apply Camera Object (Timed)"
CameraSetupApplyForPlayer="",~Apply Method," ",~Camera Object," for ",~Player," over ",~Time," seconds"
CameraSetupApplyForPlayerHint=
PanCameraToTimedLocForPlayer="Pan Camera (Timed)"
PanCameraToTimedLocForPlayer="Pan camera for ",~Player," to ",~Point," over ",~Time," seconds"
PanCameraToTimedLocForPlayerHint=
PanCameraToTimedLocWithZForPlayer="Pan Camera With Interpolated Height (Timed)"
PanCameraToTimedLocWithZForPlayer="Pan camera for ",~Player," to ",~Point," with height ",~Z," above the terrain over ",~Time," seconds"
PanCameraToTimedLocWithZForPlayerHint="The camera will not drop below the terrain height during its camera path."
SmartCameraPanBJ="Pan Camera As Necessary (Timed)"
SmartCameraPanBJ="Pan camera as necessary for ",~Player," to ",~Point," over ",~Time," seconds"
SmartCameraPanBJHint="If the camera is very far from the destination, it will snap instead of pan. If the camera is very close to the destination, the pan request will be skipped."
SetCameraFieldForPlayer="Set Camera Field (Timed)"
SetCameraFieldForPlayer="Set ",~Player,"'s camera ",~Field," to ",~Value," over ",~Time," seconds"
SetCameraFieldForPlayerHint=
RotateCameraAroundLocBJ="Rotate Camera Around Point"
RotateCameraAroundLocBJ="Rotate camera ",~Angle," degrees around ",~Point," for ",~Player," over ",~Time," seconds"
RotateCameraAroundLocBJHint=
SetCameraTargetControllerNoZForPlayer="Lock Camera Target To Unit"
SetCameraTargetControllerNoZForPlayer="Lock camera target for ",~Player," to ",~Unit,", offset by (",~X,", ",~Y,") using ",~Rotation Source
SetCameraTargetControllerNoZForPlayerHint="The camera target is offset by (X, Y) from the center of the unit's feet."
SetCameraOrientControllerForPlayerBJ="Lock Camera Orientation To Unit"
SetCameraOrientControllerForPlayerBJ="Lock camera orientation for ",~Player," to ",~Unit,", offset by (",~X,", ",~Y,")"
SetCameraOrientControllerForPlayerBJHint=
SetCinematicCameraForPlayer="Play Cinematic Camera"
SetCinematicCameraForPlayer="Run camera for ",~Player," through ",~Camera File," cinematic camera"
SetCinematicCameraForPlayerHint=
StopCameraForPlayerBJ="Stop Camera"
StopCameraForPlayerBJ="Stop the camera for ",~Player
StopCameraForPlayerBJHint=
ResetToGameCameraForPlayer="Reset Game Camera"
ResetToGameCameraForPlayer="Reset camera for ",~Player," to standard game-view over ",~Time," seconds"
ResetToGameCameraForPlayerHint=
CameraSetSmoothingFactorBJ="Change Camera Smoothing Factor"
CameraSetSmoothingFactorBJ="Change camera smoothing factor to ",~Factor
CameraSetSmoothingFactorBJHint=
CameraResetSmoothingFactorBJ="Reset Camera Smoothing Factor"
CameraResetSmoothingFactorBJ="Reset camera smoothing factor"
CameraResetSmoothingFactorBJHint=
CameraSetSourceNoiseForPlayer="Sway Camera Source"
CameraSetSourceNoiseForPlayer="Sway the camera source for ",~Player," with magnitude ",~Magnitude," and velocity ",~Velocity
CameraSetSourceNoiseForPlayerHint="This constantly sways the camera source until it is reset with 'Camera - Reset Game Camera' or 'Camera - Stop Swaying Camera'."
CameraSetTargetNoiseForPlayer="Sway Camera Target"
CameraSetTargetNoiseForPlayer="Sway the camera target for ",~Player," with magnitude ",~Magnitude," and velocity ",~Velocity
CameraSetTargetNoiseForPlayerHint="This constantly sways the camera target until it is reset with 'Camera - Reset Game Camera' or 'Camera - Stop Swaying Camera'."
CameraSetEQNoiseForPlayer="Shake Camera"
CameraSetEQNoiseForPlayer="Shake the camera for ",~Player," with magnitude ",~Magnitude
CameraSetEQNoiseForPlayerHint="This constantly shakes the camera until it is reset with 'Camera - Reset Game Camera' or 'Camera - Stop Swaying/Shaking Camera'."
CameraClearNoiseForPlayer="Stop Swaying/Shaking Camera"
CameraClearNoiseForPlayer="Stop swaying/shaking the camera for ",~Player
CameraClearNoiseForPlayerHint="This stops the camera from swaying after a 'Camera - Sway Camera' or 'Camera - Shake Camera' action is used."
AdjustCameraBoundsForPlayerBJ="Extend/Shrink Camera Bounds"
AdjustCameraBoundsForPlayerBJ=~Extend/Shrink," the camera bounds for ",~Player," west by ",~West,", east by ",~East,", north by ",~North,", and south by ",~South
AdjustCameraBoundsForPlayerBJHint=
SetCameraBoundsToRectForPlayerBJ="Set Camera Bounds"
SetCameraBoundsToRectForPlayerBJ="Set the camera bounds for ",~Player," to ",~Rect
SetCameraBoundsToRectForPlayerBJHint="This restricts the game camera to the specified rect. Changing the camera bounds does not change the scale of the minimap. This should only be called while the camera is facing north."
SetCameraQuickPositionLocForPlayer="Set Spacebar-Point"
SetCameraQuickPositionLocForPlayer="Set a spacebar-point for ",~Player," at ",~Point
SetCameraQuickPositionLocForPlayerHint="A spacebar-point is a location that the game camera jumps to when the player presses the spacebar."
TransmissionFromUnitWithNameBJ="Transmission From Unit"
TransmissionFromUnitWithNameBJ="Send transmission to ",~Player Group," from ",~Unit," named ",~Name,": Play ",~Sound," and display ",~Message,". Modify duration: ",~Method," ",~Time," seconds and ",~Wait/Don't Wait
TransmissionFromUnitWithNameBJHint="The duration of 'No sound' is 5 seconds."
TransmissionFromUnitTypeWithNameBJ="Transmission From Unit-Type"
TransmissionFromUnitTypeWithNameBJ="Send transmission to ",~Player Group," from a ",~Player," ",~Unit-Type," named ",~Name," at ",~Point,": Play ",~Sound," and display ",~Message,". Modify duration: ",~Method," ",~Time," seconds and ",~Wait/Don't Wait
TransmissionFromUnitTypeWithNameBJHint="The duration of 'No sound' is 5 seconds."
ForceCinematicSubtitlesBJ="Subtitle Display Override"
ForceCinematicSubtitlesBJ="Turn subtitle display override ",~On/Off
ForceCinematicSubtitlesBJHint="Turning this on will cause transmission text to be displayed on the screen even if the user normally has subtitles turned off."
CinematicModeBJ="Cinematic Mode"
CinematicModeBJ="Turn cinematic mode ",~On/Off," for ",~Player Group
CinematicModeBJHint=
CinematicModeExBJ="Cinematic Mode (Timed)"
CinematicModeExBJ="Turn cinematic mode ",~On/Off," for ",~Player Group," over ",~Time," seconds"
CinematicModeExBJHint=
CinematicFadeBJ="Fade Filter"
CinematicFadeBJ=~Fade Type," over ",~Duration," seconds using texture ",~Texture," and color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
CinematicFadeBJHint="The color values are (Red, Green, Blue). A 100% transparent color is completely invisible."
CinematicFilterGenericBJ="Advanced Filter"
CinematicFilterGenericBJ="Apply a filter over ",~Duration," seconds using ",~Blending Method," on texture ",~Texture,", starting with color (",~Red,"%, ",~Green,"%, ",~Blue,"%) and ",~Transparency,"% transparency and ending with color (",~Red,"%, ",~Green,"%, ",~Blue,"%) and ",~Transparency,"% transparency"
CinematicFilterGenericBJHint="The color values are (Red, Green, Blue). A 100% transparent color is completely invisible."
DisplayCineFilterBJ="Show/Hide Filter"
DisplayCineFilterBJ=~Show/Hide," filter"
DisplayCineFilterBJHint=
PingMinimapLocForForce="Ping Minimap"
PingMinimapLocForForce="Ping minimap for ",~Player Group," at ",~Point," for ",~Duration," seconds"
PingMinimapLocForForceHint=
PingMinimapLocForForceEx="Ping Minimap With Color"
PingMinimapLocForForceEx="Ping minimap for ",~Player Group," at ",~Point," for ",~Duration," seconds, using a ",~Style," ping of color ("~Red,"%, ",~Green,"%, ",~Blue,"%)"
PingMinimapLocForForceExHint="The color values are (Red, Green, Blue). Warning pings are always red."
UnitAddIndicatorBJ="Flash Speech Indicator For Unit"
UnitAddIndicatorBJ="Flash a speech indicator for ",~Unit," of color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
UnitAddIndicatorBJHint="The color values are (Red, Green, Blue). A 100% transparent color is completely invisible."
DestructableAddIndicatorBJ="Flash Speech Indicator For Destructible"
DestructableAddIndicatorBJ="Flash a speech indicator for ",~Destructible," of color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
DestructableAddIndicatorBJHint="The color values are (Red, Green, Blue). A 100% transparent color is completely invisible."
ItemAddIndicatorBJ="Flash Speech Indicator For Item"
ItemAddIndicatorBJ="Flash a speech indicator for ",~Item," of color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
ItemAddIndicatorBJHint="The color values are (Red, Green, Blue). A 100% transparent color is completely invisible."
ClearTextMessagesBJ="Clear Text Messages"
ClearTextMessagesBJ="Clear the screen of text messages for ",~Player Group
ClearTextMessagesBJHint=
ShowInterfaceForceOff="Letterbox Mode On"
ShowInterfaceForceOff="Turn on letterbox mode (hide interface) for ",~Player Group,": fade out over ",~Duration," seconds"
ShowInterfaceForceOffHint="Puts the camera into letterbox mode, hiding the game interface."
ShowInterfaceForceOn="Letterbox Mode Off"
ShowInterfaceForceOn="Turn off letterbox mode (show interface) for ",~Player Group,": fade in over ",~Duration," seconds"
ShowInterfaceForceOnHint="Puts the camera into normal (non-letterbox) mode, displaying the game interface."
SetUserControlForceOff="Disable User Control"
SetUserControlForceOff="Disable user control for ",~Player Group
SetUserControlForceOffHint=
SetUserControlForceOn="Enable User Control"
SetUserControlForceOn="Enable user control for ",~Player Group
SetUserControlForceOnHint=
EnableOcclusionBJ="Enable/Disable Occlusion"
EnableOcclusionBJ=~Enable/Disable," occlusion for ",~Player Group
EnableOcclusionBJHint="When occlusion is enabled, trees that block vision of units become transparent."
EnableWorldFogBoundaryBJ="Enable/Disable Boundary Tinting"
EnableWorldFogBoundaryBJ=~Enable/Disable," boundary tinting for ",~Player Group
EnableWorldFogBoundaryBJHint=
StartTimerBJ="Start Timer"
StartTimerBJ="Start ",~Timer," as a ",~One-Shot/Repeating," timer that will expire in ",~Time," seconds"
StartTimerBJHint=
PauseTimerBJ="Pause Timer"
PauseTimerBJ=~Pause/Resume," ",~Timer
PauseTimerBJHint=
CreateTimerDialogBJ="Create Timer Window"
CreateTimerDialogBJ="Create a timer window for ",~Timer," with title ",~Title
CreateTimerDialogBJHint="Timer Windows cannot be displayed at map initialization."
DestroyTimerDialogBJ="Destroy Timer Window"
DestroyTimerDialogBJ="Destroy ",~Timer Window
DestroyTimerDialogBJHint=
TimerDialogDisplayForPlayerBJ="Show/Hide Timer Window For Player"
TimerDialogDisplayForPlayerBJ=~Show/Hide," ",~Timer Window," for ",~Player
TimerDialogDisplayForPlayerBJHint="Timer Windows cannot be displayed at map initialization."
TimerDialogDisplayBJ="Show/Hide Timer Window"
TimerDialogDisplayBJ=~Show/Hide," ",~Timer Window
TimerDialogDisplayBJHint="Timer Windows cannot be displayed at map initialization."
TimerDialogSetTitleBJ="Change Timer Window Title"
TimerDialogSetTitleBJ="Change the title of ",~Timer Window," to ",~Title
TimerDialogSetTitleBJHint=
TimerDialogSetTitleColorBJ="Change Timer Window Title Color"
TimerDialogSetTitleColorBJ="Change the color of the title for ",~Timer Window," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
TimerDialogSetTitleColorBJHint="The color values are (Red, Green, Blue). A 100% transparent color is completely invisible."
TimerDialogSetTimeColorBJ="Change Timer Window Time Color"
TimerDialogSetTimeColorBJ="Change the color of the time for ",~Timer Window," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
TimerDialogSetTimeColorBJHint="The color values are (Red, Green, Blue). A 100% transparent color is completely invisible."
CreateDestructableLoc="Create"
CreateDestructableLoc="Create a ",~Destructible-Type," at ",~Point," facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDestructableLocHint="The facing angle is expected in degrees, with 0 being east and 90 being north. Use 'Last Created Destructible' to refer to this destructible."
CreateDeadDestructableLocBJ="Create (Dead)"
CreateDeadDestructableLocBJ="Create a dead ",~Destructible-Type," at ",~Point," facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDeadDestructableLocBJHint="The facing angle is expected in degrees, with 0 being east and 90 being north. Use 'Last Created Destructible' to refer to this destructible."
KillDestructable="Kill"
KillDestructable="Kill ",~Destructible
KillDestructableHint=
RemoveDestructable="Remove"
RemoveDestructable="Remove ",~Destructible
RemoveDestructableHint=
DestructableRestoreLife="Resurrect"
DestructableRestoreLife="Resurrect ",~Destructible," with ",~Value," life and ",~Show/Hide," birth animation"
DestructableRestoreLifeHint=
ShowDestructableBJ="Show/Hide"
ShowDestructableBJ=~Show/Hide," ",~Destructible
ShowDestructableBJHint="Hidden destructibles are not displayed, but still affect pathing and visibility."
SetDestructableLifePercentBJ="Set Life (To Percentage)"
SetDestructableLifePercentBJ="Set life of ",~Destructible," to ",~Percent,"%"
SetDestructableLifePercentBJHint=
SetDestructableLife="Set Life (To Value)"
SetDestructableLife="Set life of ",~Destructible," to ",~Value
SetDestructableLifeHint=
SetDestructableMaxLifeBJ="Set Max Life"
SetDestructableMaxLifeBJ="Set max life of ",~Destructible," to ",~Value
SetDestructableMaxLifeBJHint=
ModifyGateBJ="Open/Close/Destroy Gate"
ModifyGateBJ=~Open/Close/Destroy," ",~Gate
ModifyGateBJHint=
ChangeElevatorWalls="Open/Close Elevator Walls"
ChangeElevatorWalls=~Open/Close," ",~Walls," of ",~Elevator
ChangeElevatorWallsHint=
ChangeElevatorHeight="Set Elevator Height"
ChangeElevatorHeight="Set height of ",~Elevator," to ",~Height
ChangeElevatorHeightHint=
SetDestructableInvulnerableBJ="Make Invulnerable/Vulnerable"
SetDestructableInvulnerableBJ="Make ",~Destructible," ",~Invulnerable/Vulnerable
SetDestructableInvulnerableBJHint=
SetDestructableOccluderHeight="Set Occlusion Height"
SetDestructableOccluderHeight="Set the occlusion height of ",~Destructible," to ",~Height
SetDestructableOccluderHeightHint=
EnumDestructablesInRectAllMultiple="Pick Every Destructible In Rect And Do Multiple Actions"
EnumDestructablesInRectAllMultiple="Pick every destructible in ",~Rect," and do (Actions)"
EnumDestructablesInRectAllMultipleHint="Use 'Picked Destructible' to refer each destructible as it is picked. This works for every destructible in the rect, including dead destructibles. Wait actions should not be used within this function. Add actions to this function in the main display."
EnumDestructablesInCircleBJMultiple="Pick Every Destructible In Circle And Do Multiple Actions"
EnumDestructablesInCircleBJMultiple="Pick every destructible within ",~Radius," of ",~Point," and do (Actions)"
EnumDestructablesInCircleBJMultipleHint="Use 'Picked Destructible' to refer each destructible as it is picked. This works for every destructible in the rect, including dead destructibles. Wait actions should not be used within this function. Add actions to this function in the main display."
EnumDestructablesInRectAll="Pick Every Destructible In Rect And Do Action"
EnumDestructablesInRectAll="Pick every destructible in ",~Rect," and do ",~Action
EnumDestructablesInRectAllHint="Use 'Picked Destructible' to refer each destructible as it is picked. This works for every destructible in the rect, including dead destructibles. Wait actions should not be used within this function."
EnumDestructablesInCircleBJ="Pick Every Destructible In Circle And Do Action"
EnumDestructablesInCircleBJ="Pick every destructible within ",~Radius," of ",~Point," and do ",~Action
EnumDestructablesInCircleBJHint="Use 'Picked Destructible' to refer each destructible as it is picked. This works for every destructible in the rect, including dead destructibles. Wait actions should not be used within this function."
DialogDisplayBJ="Show/Hide"
DialogDisplayBJ=~Show/Hide," ",~Dialog," for ",~Player
DialogDisplayBJHint="Dialogs cannot be displayed at map initialization."
DialogSetMessageBJ="Change Title"
DialogSetMessageBJ="Change the title of ",~Dialog," to ",~Title
DialogSetMessageBJHint=
DialogAddButtonBJ="Create Dialog Button"
DialogAddButtonBJ="Create a dialog button for ",~Dialog," labelled ",~Text
DialogAddButtonBJHint=
DialogClearBJ="Clear"
DialogClearBJ="Clear ",~Dialog
DialogClearBJHint="This clears the title and all buttons for the specified dialog."
AddWeatherEffectSaveLast="Create Weather Effect"
AddWeatherEffectSaveLast="Create at ",~Rect," the weather effect ",~Weather Id
AddWeatherEffectSaveLastHint=
EnableWeatherEffect="Enable/Disable Weather Effect"
EnableWeatherEffect="Turn ",~Weather Effect," ",~On/Off
EnableWeatherEffectHint="You can create weather effects via the 'Environment - Create Weather Effect' action."
RemoveWeatherEffectBJ="Remove Weather Effect"
RemoveWeatherEffectBJ="Remove ",~Weather Effect
RemoveWeatherEffectBJHint=
TerrainDeformationCraterBJ="Create Terrain Deformation: Crater"
TerrainDeformationCraterBJ="Create a ",~Duration," second ",~Type," crater deformation at ",~Point," with radius ",~Radius," and depth ",~Depth
TerrainDeformationCraterBJHint="Use 'Last Created Terrain Deformation' to refer to this terrain deformation. Depth may be negative for bumps. Permanent deformations are not preserved in saved game files."
TerrainDeformationRippleBJ="Create Terrain Deformation: Ripple"
TerrainDeformationRippleBJ="Create a ",~Duration," second ",~Type," ripple deformation at ",~Point," with starting radius ",~Radius,", ending radius ",~Radius,", and depth ",~Depth,", using ",~Time," second ripples spaced ",~Distance," apart"
TerrainDeformationRippleBJHint="Use 'Last Created Terrain Deformation' to refer to this terrain deformation."
TerrainDeformationWaveBJ="Create Terrain Deformation: Wave"
TerrainDeformationWaveBJ="Create a ",~Duration," second wave deformation from ",~Source," to ",~Target," with radius ",~Radius,", depth ",~Depth,", and a ",~Delay," second trailing delay"
TerrainDeformationWaveBJHint="Use 'Last Created Terrain Deformation' to refer to this terrain deformation. Depth may be negative for bumps."
TerrainDeformationRandomBJ="Create Terrain Deformation: Random"
TerrainDeformationRandomBJ="Create a ",~Duration," second random deformation at ",~Point," with radius ",~Radius,", using depths between ",~Minimum," and ",~Maximum,", updating every ",~Update Interval," seconds"
TerrainDeformationRandomBJHint="Use 'Last Created Terrain Deformation' to refer to this terrain deformation."
TerrainDeformationStopBJ="Stop Terrain Deformation"
TerrainDeformationStopBJ="Stop ",~Terrain Deformation," over ",~Duration," seconds"
TerrainDeformationStopBJHint="The deformation will smoothly reduce to nothing over the duration."
TerrainDeformStopAll="Stop All Terrain Deformations"
TerrainDeformStopAll="Stop all active terrain deformations instantly"
TerrainDeformStopAllHint="This includes any terrain deformations indirectly caused by spells or abilities."
SetWaterDeforms="Turn Water Deformation On/Off"
SetWaterDeforms="Turn water deformation ",~On/Off
SetWaterDeformsHint="When this is turned on, terrain deformations will also apply to any water above the terrain. This does not work with permanent deformations."
SetTerrainTypeBJ="Change Terrain Type"
SetTerrainTypeBJ="Change terrain type at ",~Location," to ",~Terrain Type," using variation ",~Variation," in an area of size ",~Area," and shape ",~Shape
SetTerrainTypeBJHint="Use a variation of -1 to generate random variations across the area."
SetTerrainPathableBJ="Turn Terrain Pathing On/Off"
SetTerrainPathableBJ="Set terrain pathing at ",~Location," of type ",~Pathing," to ",~On/Off
SetTerrainPathableBJHint="Turning pathing on causes the pathing cell to become pathable to the given type.  For example, turning 'Buildability' on makes the pathing cell buildable.  This only affects pathing restrictions caused by terrain (not doodads, units, etc.)."
SetWaterBaseColorBJ="Set Water Tinting Color"
SetWaterBaseColorBJ="Change water tinting color to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetWaterBaseColorBJHint="The color values are (Red, Green, Blue). 100% transparent water is completely invisible."
SetSkyModel="Set Sky"
SetSkyModel="Set sky to ",~Sky
SetSkyModelHint=
SetTerrainFogExBJ="Set Fog"
SetTerrainFogExBJ="Set fog to style ",~Style,", z-start ",~Z-Start,", z-end ",~Z-End,", density ",~Density," and color (",~Red,"%, ",~Green,"%, ",~Blue,"%)"
SetTerrainFogExBJHint="The color values are (Red, Green, Blue)."
ResetTerrainFogBJ="Reset Fog"
ResetTerrainFogBJ="Reset fog to default values"
ResetTerrainFogBJHint=
SetBlightRectBJ="Create/Remove Blight Rect"
SetBlightRectBJ=~Create/Remove," Blight for ",~Player," across ",~Rect
SetBlightRectBJHint=
SetBlightRadiusLocBJ="Create/Remove Blight Circle"
SetBlightRadiusLocBJ=~Create/Remove," Blight for ",~Player," from ",~Point," to a radius of ",~Radius
SetBlightRadiusLocBJHint=
CreateImageBJ="Create"
CreateImageBJ="Create ",~Image," of size ",~Size," at ",~Point," with Z offset ",~Z," using image type ",~Type
CreateImageBJHint="Usually you must also use the render always action, Use images with transparent borders only."
DestroyImage="Destroy"
DestroyImage="Destroy ",~Image
DestroyImageHint=
ShowImageBJ="Show/Hide"
ShowImageBJ=~Show/Hide," ",~Image
ShowImageBJHint=
SetImageConstantHeight="Change Constant Height"
SetImageConstantHeight="Change the height state of ",~Image," to ",~Enable/Disable," at ",~Height
SetImageConstantHeightHint=
SetImagePositionBJ="Change Position"
SetImagePositionBJ="Change the position of ",~Image," to ",~Position," with Z offset ",~Z
SetImagePositionBJHint=
SetImageColorBJ="Change Color"
SetImageColorBJ="Change the color of ",~Image," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetImageColorBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."
SetImageRender="Change Render State"
SetImageRender="Change rendering state of ",~Image," to ",~Enable/Disable
SetImageRenderHint=
SetImageRenderAlways="Change Render Always State"
SetImageRenderAlways="Change render always state of ",~Image," to ",~Enable/Disable
SetImageRenderAlwaysHint=
SetImageAboveWater="Change Above Water State"
SetImageAboveWater="Change above water state of ",~Image," to ",~Enable/Disable,~Enable/Disable," water alpha inheritance."
SetImageAboveWaterHint=
SetImageType="Change Type"
SetImageType="Change type of ",~Image," to ",~Type
SetImageTypeHint=
CreateUbersplatBJ="Create"
CreateUbersplatBJ="Create ubersplat at ",~Location," of type ",~Type," with color (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency. ",~Enable/Disable," paused state. ",~Enble/Disable," skipping birth time."
CreateUbersplatBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.  Use 'Ubersplat - Change Render Always State' to toggle display of this ubersplat.  By default, ubersplats are not rendered."
DestroyUbersplat="Destroy"
DestroyUbersplat="Destroy ",~Ubersplat
DestroyUbersplatHint=
ResetUbersplat="Reset"
ResetUbersplat="Reset ",~Ubersplat
ResetUbersplatHint=
FinishUbersplat="Finish"
FinishUbersplat="Finish ",~Ubersplat
FinishUbersplatHint=
ShowUbersplatBJ="Show/Hide"
ShowUbersplatBJ=~Show/Hide," ",~Ubersplat
ShowUbersplatBJHint=
SetUbersplatRender="Change Render State"
SetUbersplatRender="Change render state of ",~Ubersplat," to ",~Enable/Disable
SetUbersplatRenderHint=
SetUbersplatRenderAlways="Change Render Always State"
SetUbersplatRenderAlways="Change render always state of ",~Ubersplat," to ",~Enable/Disable
SetUbersplatRenderAlwaysHint=
CreateTextTagLocBJ="Create Floating Text At Point"
CreateTextTagLocBJ="Create floating text that reads ",~Message," at ",~Point," with Z offset ",~Z,", using font size ",~Size,", color (",~Red,"%, ",~Green,"%, ",~Blue,"%), and ",~Transparency,"% transparency"
CreateTextTagLocBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.  Use 'Floating Text - Permanent/Expires' to make this floating text temporary."
CreateTextTagUnitBJ="Create Floating Text Above Unit"
CreateTextTagUnitBJ="Create floating text that reads ",~Message," above ",~Unit," with Z offset ",~Z,", using font size ",~Size,", color (",~Red,"%, ",~Green,"%, ",~Blue,"%), and ",~Transparency,"% transparency"
CreateTextTagUnitBJHint="Floating text created in this manner does not follow the unit's movement.  The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.  Use 'Floating Text - Permanent/Expires' to make this floating text temporary."
DestroyTextTagBJ="Destroy"
DestroyTextTagBJ="Destroy ",~Floating Text
DestroyTextTagBJHint=
ShowTextTagForceBJ="Show/Hide"
ShowTextTagForceBJ=~Show/Hide," ",~Floating Text," for ",~Player Group
ShowTextTagForceBJHint=
SetTextTagVelocityBJ="Set Velocity"
SetTextTagVelocityBJ="Set the velocity of ",~Floating Text," to ",~Speed," towards ",~Angle," degrees"
SetTextTagVelocityBJHint="You can only accurately set the velocity of floating text once, when it is first created. The angle is expected in degrees, with 0 being east and 90 being north."
SetTextTagColorBJ="Change Color"
SetTextTagColorBJ="Change the color of ",~Floating Text," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
SetTextTagColorBJHint="The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible."
SetTextTagPosBJ="Change Position To Point"
SetTextTagPosBJ="Change the position of ",~Floating Text," to ",~Point," with Z offset ",~Z
SetTextTagPosBJHint=
SetTextTagPosUnitBJ="Change Position To Unit"
SetTextTagPosUnitBJ="Change the position of ",~Floating Text," to ",~Unit," with Z offset ",~Z
SetTextTagPosUnitBJHint=
SetTextTagTextBJ="Change Text"
SetTextTagTextBJ="Change text of ",~Floating Text," to ",~Message," using font size ",~Size
SetTextTagTextBJHint=
SetTextTagSuspendedBJ="Suspend/Resume"
SetTextTagSuspendedBJ="Change ",~Floating Text,": ",~Enable/Disable," suspend state"
SetTextTagSuspendedBJHint=
SetTextTagPermanentBJ="Permanent/Expires"
SetTextTagPermanentBJ="Change ",~Floating Text,": ",~Enable/Disable," permanence"
SetTextTagPermanentBJHint=
SetTextTagAgeBJ="Change Age"
SetTextTagAgeBJ="Change the age of ",~Floating Text," to ",~Time," seconds"
SetTextTagAgeBJHint="This does not affect permanent floating text."
SetTextTagLifespanBJ="Change Lifespan"
SetTextTagLifespanBJ="Change the lifespan of ",~Floating Text," to ",~Time," seconds"
SetTextTagLifespanBJHint="This does not affect permanent floating text.  This sets the age at which floating text is removed and cleaned up."
SetTextTagFadepointBJ="Change Fadepoint"
SetTextTagFadepointBJ="Change the fading age of ",~Floating Text," to ",~Time," seconds"
SetTextTagFadepointBJHint="This does not affect permanent floating text.  This sets the age at which floating text begins fading."
DisplayTextToForce="Text Message (Auto-Timed)"
DisplayTextToForce="Display to ",~Player Group," the text: ",~Text
DisplayTextToForceHint="The text is shown for an amount of time that automatically increases with the text length."
DisplayTimedTextToForce="Text Message (Explicitly Timed)"
DisplayTimedTextToForce="Display to ",~Player Group," for ",~Time," seconds the text: ",~Text
DisplayTimedTextToForceHint=
PauseGameOn="Pause Game"
PauseGameOn="Pause the game"
PauseGameOnHint=
PauseGameOff="Unpause Game"
PauseGameOff="Unpause the game"
PauseGameOffHint=
SetGameSpeed="Set Game Speed"
SetGameSpeed="Set game speed to ",~Speed
SetGameSpeedHint="You can lock the game speed with the 'Game - Lock Game Speed' trigger action."
LockGameSpeedBJ="Lock Game Speed"
LockGameSpeedBJ="Lock the game speed"
LockGameSpeedBJHint="This prevents the game speed from being modified. Not even triggers can modify the game speed when it is locked."
UnlockGameSpeedBJ="Unlock Game Speed"
UnlockGameSpeedBJ="Unlock the game speed"
UnlockGameSpeedBJHint="This allows the game speed to be modified again after a 'Game - Lock Game Speed' action is used."
SetMapFlag="Set Map Flag"
SetMapFlag="Set ",~Map Flag," to ",~On/Off
SetMapFlagHint=
SetTimeOfDay="Set Time Of Day"
SetTimeOfDay="Set the time of day to ",~Time
SetTimeOfDayHint="A game day is 24 hours long. Six a.m. is 6.00, and six p.m. is 18.00."
SetTimeOfDayScalePercentBJ="Set Time Of Day Speed"
SetTimeOfDayScalePercentBJ="Set time of day speed to ",~Percent,"% of the default speed"
SetTimeOfDayScalePercentBJHint="Use 100% to revert the speed to normal."
UseTimeOfDayBJ="Turn Day/Night Cycle On/Off"
UseTimeOfDayBJ="Turn the day/night cycle ",~On/Off
UseTimeOfDayBJHint=
ShareEverythingWithTeam="Share Vision And Full Unit Control With Team"
ShareEverythingWithTeam="Grant shared vision and full shared unit control of ",~Player," units with his/her allies"
ShareEverythingWithTeamHint="Two players are considered allies if they are both allied with each other."
MakeUnitsPassiveForPlayer="Give Units To Neutral Victim"
MakeUnitsPassiveForPlayer="Give all ",~Player," units to the Neutral Victim player"
MakeUnitsPassiveForPlayerHint="By default, the Neutral Victim player treats all other players as allies, but is treated as an enemy by all other players."
SetNextLevelBJ="Set Next Level"
SetNextLevelBJ="Set the next level to ",~Level
SetNextLevelBJHint="This sets a level to be started after the current game ends."
CustomVictoryBJ="Victory"
CustomVictoryBJ="Victory ",~Player," (",~Show/Skip," dialogs, ",~Show/Skip," scores)"
CustomVictoryBJHint=
CustomDefeatBJ="Defeat"
CustomDefeatBJ="Defeat ",~Player," with the message: ",~Message
CustomDefeatBJHint=
LoadGameBJ="Load Game"
LoadGameBJ="Load ",~Filename," (",~Show/Skip," scores)"
LoadGameBJHint=
SaveAndLoadGameBJ="Save Game And Load Game"
SaveAndLoadGameBJ="Save game as ",~Filename," and load ",~Filename," (",~Show/Skip," scores)"
SaveAndLoadGameBJHint=
SaveAndChangeLevelBJ="Save Game And Change Level"
SaveAndChangeLevelBJ="Save game as ",~Filename," and change level to ",~Filename," (",~Show/Skip," scores)"
SaveAndChangeLevelBJHint=
RenameSaveDirectoryBJ="Rename Saved-Game Folder"
RenameSaveDirectoryBJ="Rename the ",~Folder," saved-game folder to ",~Folder
RenameSaveDirectoryBJHint=
RemoveSaveDirectoryBJ="Delete Saved-Game Folder"
RemoveSaveDirectoryBJ="Delete the ",~Folder," saved-game folder"
RemoveSaveDirectoryBJHint="This deletes the specified saved-game folder and all of its contents."
CopySaveGameBJ="Copy Saved-Game"
CopySaveGameBJ="Create a copy of the ",~Filename," saved-game and name it ",~Filename
CopySaveGameBJHint="This action only works in response to Game Load and Game Save events, and can only be used up to 16 times per event."
SetCampaignMenuRaceBJ="Set Campaign Screen"
SetCampaignMenuRaceBJ="Set campaign to ",~Campaign
SetCampaignMenuRaceBJHint=
SetMissionAvailableBJ="Enable/Disable Mission"
SetMissionAvailableBJ=~Enable/Disable," ",~Mission
SetMissionAvailableBJHint=
SetCampaignAvailableBJ="Enable/Disable Campaign"
SetCampaignAvailableBJ=~Enable/Disable," the ",~Campaign
SetCampaignAvailableBJHint=
SetCinematicAvailableBJ="Enable/Disable Cinematic"
SetCinematicAvailableBJ=~Enable/Disable," the ",~Cinematic
SetCinematicAvailableBJHint=
ShowCustomCampaignButton="Show/Hide Custom Campaign Button"
ShowCustomCampaignButton=~Show/Hide," custom campaign button ",~Number
ShowCustomCampaignButtonHint=
SetAllyColorFilterState="Set Ally Color Filter"
SetAllyColorFilterState="Set ally color filtering to ",~State
SetAllyColorFilterStateHint="A value of 0 disables filtering. A value of 1 enables filtering for the minimap. A value of 2 enables filtering for the minimap and the game view."
SetCreepCampFilterState="Show/Hide Creep Camps On Minimap"
SetCreepCampFilterState=~Show/Hide," creep camps on the minimap"
SetCreepCampFilterStateHint=
EnableMinimapFilterButtons="Enable/Disable Minimap Buttons"
EnableMinimapFilterButtons=~Enable/Disable," ally color button and ",~Enable/Disable," creep camp button"
EnableMinimapFilterButtonsHint=
EnableDragSelect="Enable/Disable Drag Select"
EnableDragSelect=~Enable/Disable," drag-selection functionality (",~Enable/Disable," drag-selection box)"
EnableDragSelectHint=
EnablePreSelect="Enable/Disable Pre Select"
EnablePreSelect=~Enable/Disable," pre-selection functionality (",~Enable/Disable," pre-selection circles, life bars, and object info)"
EnablePreSelectHint=
EnableSelect="Enable/Disable Select"
EnableSelect=~Enable/Disable," selection and deselection functionality (",~Enable/Disable," selection circles)"
EnableSelectHint="Objects can still be selected and deselected via trigger actions.  Disabling selection prevents drag-selection as well.  Selection circles are only displayed if selection is enabled."
ForceUIKeyBJ="Force UI Key"
ForceUIKeyBJ="Force ",~Player," to press the key ",~Key
ForceUIKeyBJHint=
ForceUICancelBJ="Force UI Cancel"
ForceUICancelBJ="Force ",~Player," to press Escape/Cancel"
ForceUICancelBJHint=
Preload="Preload File"
Preload="Preload ",~Filename
PreloadHint=
PreloadEnd="Begin Preloading"
PreloadEnd="Begin preloading with a ",~Time," second timeout"
PreloadEndHint=
Preloader="Preload Batch"
Preloader="Preload all files listed in ",~Filename
PreloaderHint=
InitGameCacheBJ="Create Game Cache"
InitGameCacheBJ="Create a game cache from ",~Filename
InitGameCacheBJHint="A game cache allows you to store data between maps, or between games on a given map. If the specified file does not exist, it will be created."
SaveGameCacheBJ="Save Game Cache"
SaveGameCacheBJ="Save ",~Game Cache
SaveGameCacheBJHint="Saves the game cache, using the same filename from which it was created."
StoreUnitBJ="Store Unit"
StoreUnitBJ="Store ",~Unit," as ",~Label," of ",~Category," in ",~Game Cache
StoreUnitBJHint="Use the 'Game Cache - Restore Unit' actions to load this unit from a cache. Label and Category names should not contain spaces."
StoreRealBJ="Store Real"
StoreRealBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreRealBJHint="Use the 'Game Cache - Load Real Value' function to load this value from a cache. Label and Category names should not contain spaces."
StoreIntegerBJ="Store Integer"
StoreIntegerBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreIntegerBJHint="Use the 'Game Cache - Load Integer Value' function to load this value from a cache. Label and Category names should not contain spaces."
StoreBooleanBJ="Store Boolean"
StoreBooleanBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreBooleanBJHint="Use the 'Game Cache - Load Boolean Value' function to load this value from a cache. Label and Category names should not contain spaces."
StoreStringBJ="Store String"
StoreStringBJ="Store ",~Value," as ",~Label," of ",~Category," in ",~Game Cache
StoreStringBJHint="Use the 'Game Cache - Load String Value' function to load this value from a cache. Label and Category names should not contain spaces."
RestoreUnitLocFacingAngleBJ="Restore Unit Facing Angle"
RestoreUnitLocFacingAngleBJ="Restore ",~Label," of ",~Category," from ",~Game Cache," for ",~Player," at ",~Location," facing ",~Angle
RestoreUnitLocFacingAngleBJHint="Use 'Last Restored Unit' to refer to the unit created by this action. If the label is not found, no unit will be created, and 'Last Restored Unit' will have the value 'No Unit'."
RestoreUnitLocFacingPointBJ="Restore Unit Facing Point"
RestoreUnitLocFacingPointBJ="Restore ",~Label," of ",~Category," from ",~Game Cache," for ",~Player," at ",~Location," facing ",~Point
RestoreUnitLocFacingPointBJHint="Use 'Last Restored Unit' to refer to the unit created by this action. If the label is not found, no unit will be created, and 'Last Restored Unit' will have the value 'No Unit'."
ReloadGameCachesFromDisk="Reload All"
ReloadGameCachesFromDisk="Reload all game cache data from disk"
ReloadGameCachesFromDiskHint=
FlushGameCacheBJ="Clear Game Cache"
FlushGameCacheBJ="Clear ",~Game Cache
FlushGameCacheBJHint="Clears all labels of all categories in a game cache."
FlushStoredMissionBJ="Clear Category"
FlushStoredMissionBJ="Clear all labels of ",~Category," in ",~Game Cache
FlushStoredMissionBJHint="Clears all labels of a specific category in a game cache."
SelectHeroSkill="Learn Skill"
SelectHeroSkill="Learn skill for ",~Hero,": ",~Skill
SelectHeroSkillHint="This only works if the Hero has at least one skill point to spend."
SetHeroLevel="Set Level"
SetHeroLevel="Set ",~Hero," Hero-level to ",~Level,", ",~Show/Hide," level-up graphics"
SetHeroLevelHint=
SetHeroXP="Set Experience"
SetHeroXP="Set ",~Hero," experience to ",~Quantity,", ",~Show/Hide," level-up graphics"
SetHeroXPHint=
AddHeroXPSwapped="Add Experience"
AddHeroXPSwapped="Add ",~Quantity," experience to ",~Hero,", ",~Show/Hide," level-up graphics"
AddHeroXPSwappedHint=
SuspendHeroXPBJ="Enable/Disable Experience Gain"
SuspendHeroXPBJ=~Enable/Disable," experience gain for ",~Hero
SuspendHeroXPBJHint=
SetPlayerHandicapXPBJ="Set Experience Rate"
SetPlayerHandicapXPBJ="Make ",~Player," Heroes gain ",~Percent,"% experience from future kills"
SetPlayerHandicapXPBJHint=
ReviveHeroLoc="Revive (Instantly)"
ReviveHeroLoc="Instantly revive ",~Hero," at ",~Point,", ",~Show/Hide," revival graphics"
ReviveHeroLocHint="This revives a dead Hero at a spot on the map, even if the player has no altar. You can also revive a Hero by issuing a 'Revive' order to an appropriate altar, targeting the hero you wish to revive."
ModifyHeroStat="Modify Hero Attribute"
ModifyHeroStat="Modify ",~Attribute," of ",~Hero,": ",~Modify," ",~Value
ModifyHeroStatHint=
ModifyHeroSkillPoints="Modify Hero Skill Points"
ModifyHeroSkillPoints="Modify unspent skill points of ",~Hero,": ",~Modify," ",~Value," points"
ModifyHeroSkillPointsHint=
SetReservedLocalHeroButtons="Reserve Hero Buttons"
SetReservedLocalHeroButtons="Reserve ",~Number," Hero buttons for the local player"
SetReservedLocalHeroButtonsHint="Button slots reserved by this action are not used by Heroes controlled via shared unit control."
UnitAddItemSwapped="Give Item To Hero"
UnitAddItemSwapped="Give ",~Item," to ",~Hero
UnitAddItemSwappedHint=
UnitAddItemByIdSwapped="Create Item For Hero"
UnitAddItemByIdSwapped="Create ",~Item-Type," and give it to ",~Hero
UnitAddItemByIdSwappedHint=
UnitRemoveItemSwapped="Drop Item From Hero"
UnitRemoveItemSwapped="Drop ",~Item," from ",~Hero
UnitRemoveItemSwappedHint="The item is removed from the Hero and placed on the ground at the Hero's feet."
UnitRemoveItemFromSlotSwapped="Drop Item From Hero Inventory Slot"
UnitRemoveItemFromSlotSwapped="Drop the item from slot ",~Index," of ",~Hero
UnitRemoveItemFromSlotSwappedHint="If an item exists in the given slot, it is removed from the Hero and placed on the ground at the Hero's feet."
UnitUseItemTarget="Use Item On A Unit"
UnitUseItemTarget="Order ",~Hero," to use ",~Item," on ",~Unit
UnitUseItemTargetHint=
UnitUseItemPointLoc="Use Item On A Point"
UnitUseItemPointLoc="Order ",~Hero," to use ",~Item," on ",~Point
UnitUseItemPointLocHint=
UnitUseItemDestructable="Use Item On A Destructible"
UnitUseItemDestructable="Order ",~Hero," to use ",~Item," on ",~Destructible
UnitUseItemDestructableHint=
UnitUseItem="Use Item"
UnitUseItem="Order ",~Hero," to use ",~Item
UnitUseItemHint=
CreateItemLoc="Create"
CreateItemLoc="Create ",~Item," at ",~Point
CreateItemLocHint=
RemoveItem="Remove"
RemoveItem="Remove ",~Item
RemoveItemHint=
SetItemVisibleBJ="Show/Hide Item"
SetItemVisibleBJ=~Show/Hide," ",~Item
SetItemVisibleBJHint="This hides items on the ground. It does not affect items held by units."
SetItemPositionLoc="Move (Instantly)"
SetItemPositionLoc="Move ",~Item," to ",~Point
SetItemPositionLocHint=
SetItemLifeBJ="Set Life"
SetItemLifeBJ="Set life of ",~Item," to ",~Value
SetItemLifeBJHint=
SetItemCharges="Set Charges Remaining"
SetItemCharges="Set charges remaining in ",~Item," to ",~Charges
SetItemChargesHint="Use a value of zero to give the item unlimited charges."
SetItemInvulnerableBJ="Make Invulnerable/Vulnerable"
SetItemInvulnerableBJ="Make ",~Item," ",~Invulnerable/Vulnerable
SetItemInvulnerableBJHint=
SetItemPawnable="Make Pawnable"
SetItemPawnable="Make ",~Item," ",~Pawnable/Unpawnable
SetItemPawnableHint="A pawnable item can be sold at item vendors."
SetItemDroppableBJ="Make Undroppable"
SetItemDroppableBJ="Make ",~Item," ",~Droppable/Undroppable
SetItemDroppableBJHint="An undroppable item cannot be removed from a Hero's inventory once it has been picked up."
SetItemDropOnDeathBJ="Make Item Drop From Heroes Upon Death"
SetItemDropOnDeathBJ="Make ",~Item," ",~Drop from/Stay with," Heroes upon death"
SetItemDropOnDeathBJHint=
SetItemPlayerBJ="Change Owner"
SetItemPlayerBJ="Change ownership of ",~Item," to ",~Player," and ",~Change/Retain Color
SetItemPlayerBJHint="Not all items are capable of changing color."
SetItemUserData="Set Custom Value"
SetItemUserData="Set the custom value of ",~Item," to ",~Index
SetItemUserDataHint="Custom values are only used in triggers, and can be used to store any integer value."
EnumItemsInRectBJMultiple="Pick Every Item In Rect And Do Multiple Actions"
EnumItemsInRectBJMultiple="Pick every item in ",~Rect," and do (Actions)"
EnumItemsInRectBJMultipleHint="Use 'Picked Item' to refer each item as it is picked. This works for every item in the rect, including hidden items. Wait actions should not be used within this function. Add actions to this function in the main display."
EnumItemsInRectBJ="Pick Every Item In Rect And Do Action"
EnumItemsInRectBJ="Pick every item in ",~Rect," and do ",~Action
EnumItemsInRectBJHint="Use 'Picked Item' to refer each item as it is picked. Wait actions should not be used within this function."
CreateLeaderboardBJ="Create"
CreateLeaderboardBJ="Create a leaderboard for ",~Player Group," titled ",~Title
CreateLeaderboardBJHint="Leaderboards cannot be displayed at map initialization. If no title is specified, the title line will not be displayed."
DestroyLeaderboardBJ="Destroy"
DestroyLeaderboardBJ="Destroy ",~Leaderboard
DestroyLeaderboardBJHint=
LeaderboardSortItemsBJ="Sort"
LeaderboardSortItemsBJ="Sort ",~Leaderboard," by ",~Field," in ",~Ascending/Descending," order"
LeaderboardSortItemsBJHint=
LeaderboardDisplayBJ="Show/Hide"
LeaderboardDisplayBJ=~Show/Hide," ",~Leaderboard
LeaderboardDisplayBJHint="Leaderboards cannot be displayed at map initialization."
LeaderboardSetLabelBJ="Change Title"
LeaderboardSetLabelBJ="Change the title of ",~Leaderboard," to ",~Title
LeaderboardSetLabelBJHint=
LeaderboardSetLabelColorBJ="Change Label Colors"
LeaderboardSetLabelColorBJ="Change the color of all labels for ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetLabelColorBJHint="The color values are (Red, Green, Blue). A 100% transparent color is completely invisible."
LeaderboardSetValueColorBJ="Change Value Colors"
LeaderboardSetValueColorBJ="Change the color of all values for ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetValueColorBJHint="The color values are (Red, Green, Blue). A 100% transparent color is completely invisible."
LeaderboardSetStyleBJ="Change Style"
LeaderboardSetStyleBJ="Change the display style for ",~Leaderboard," to ",~Show/Hide," the title, ",~Show/Hide," labels, ",~Show/Hide," values, and ",~Show/Hide," icons"
LeaderboardSetStyleBJHint=
LeaderboardAddItemBJ="Add Player"
LeaderboardAddItemBJ="Add ",~Player," to ",~Leaderboard," with label ",~Label," and value ",~Value
LeaderboardAddItemBJHint=
LeaderboardRemovePlayerItemBJ="Remove Player"
LeaderboardRemovePlayerItemBJ="Remove ",~Player," from ",~Leaderboard
LeaderboardRemovePlayerItemBJHint=
LeaderboardSetPlayerItemLabelBJ="Change Player Label"
LeaderboardSetPlayerItemLabelBJ="Change the label for ",~Player," in ",~Leaderboard," to ",~Label
LeaderboardSetPlayerItemLabelBJHint=
LeaderboardSetPlayerItemLabelColorBJ="Change Player Label Color"
LeaderboardSetPlayerItemLabelColorBJ="Change the color of the label for ",~Player," in ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetPlayerItemLabelColorBJHint="The color values are (Red, Green, Blue). A 100% transparent color is completely invisible."
LeaderboardSetPlayerItemValueBJ="Change Player Value"
LeaderboardSetPlayerItemValueBJ="Change the value for ",~Player," in ",~Leaderboard," to ",~Value
LeaderboardSetPlayerItemValueBJHint=
LeaderboardSetPlayerItemValueColorBJ="Change Player Value Color"
LeaderboardSetPlayerItemValueColorBJ="Change the color of the value for ",~Player," in ",~Leaderboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
LeaderboardSetPlayerItemValueColorBJHint="The color values are (Red, Green, Blue). A 100% transparent color is completely invisible."
LeaderboardSetPlayerItemStyleBJ="Change Player Style"
LeaderboardSetPlayerItemStyleBJ="Change the display style for ",~Player," in ",~Leaderboard," to ",~Show/Hide," the label, ",~Show/Hide," the value, and ",~Show/Hide," the icon"
LeaderboardSetPlayerItemStyleBJHint=
MeleeStartingVisibility="Use Melee Time Of Day"
MeleeStartingVisibility="Use melee time of day (for all players)"
MeleeStartingVisibilityHint=
MeleeStartingHeroLimit="Hero Limits"
MeleeStartingHeroLimit="Limit Heroes to 1 per Hero-type (for all players)"
MeleeStartingHeroLimitHint=
MeleeGrantHeroItems="Hero Starting Items"
MeleeGrantHeroItems="Give trained Heroes a Scroll of Town Portal (for all players)"
MeleeGrantHeroItemsHint=
MeleeStartingResources="Set Starting Resources"
MeleeStartingResources="Set starting resources (for all players)"
MeleeStartingResourcesHint=
MeleeClearExcessUnits="Remove Excess Units"
MeleeClearExcessUnits="Remove creeps and critters from used start locations (for all players)"
MeleeClearExcessUnitsHint="Removes all Neutral Hostile units and non-building Neutral Passive units within a radius of 1024 around each used start location."
MeleeStartingUnits="Create Starting Units"
MeleeStartingUnits="Create starting units (for all players)"
MeleeStartingUnitsHint=
MeleeStartingAI="Run AI"
MeleeStartingAI="Run melee AI scripts (for computer players)"
MeleeStartingAIHint="Players should have starting units and resources before this action is run."
MeleeInitVictoryDefeat="Victory/Defeat Conditions"
MeleeInitVictoryDefeat="Enforce victory/defeat conditions (for all players)"
MeleeInitVictoryDefeatHint="Players should have starting units before this action is run."
MeleeStartingUnitsForPlayer="Create Starting Units For Player"
MeleeStartingUnitsForPlayer="Create ",~Race," starting units for ",~Player," at ",~Point," (",~Include/Exclude," Heroes)"
MeleeStartingUnitsForPlayerHint="This action creates the same starting units that are created for melee games."
CreateMultiboardBJ="Create"
CreateMultiboardBJ="Create a multiboard with ",~Columns," columns and ",~Rows," rows, titled ",~Title
CreateMultiboardBJHint="Multiboards cannot be displayed at map initialization."
DestroyMultiboardBJ="Destroy"
DestroyMultiboardBJ="Destroy ",~Multiboard
DestroyMultiboardBJHint=
MultiboardDisplayBJ="Show/Hide"
MultiboardDisplayBJ=~Show/Hide," ",~Multiboard
MultiboardDisplayBJHint="Multiboards cannot be displayed at map initialization."
MultiboardAllowDisplayBJ="Show/Hide All Multiboards"
MultiboardAllowDisplayBJ=~Show/Hide," all multiboards"
MultiboardAllowDisplayBJHint=
MultiboardMinimizeBJ="Minimize/Maximize"
MultiboardMinimizeBJ=~Minimize/Maximize," ",~Multiboard
MultiboardMinimizeBJHint="A minimized multiboard will only display the title."
MultiboardClear="Clear"
MultiboardClear="Clear ",~Multiboard
MultiboardClearHint="This will remove all rows and columns from the multiboard."
MultiboardSetTitleText="Change Title"
MultiboardSetTitleText="Change the title of ",~Multiboard," to ",~Title
MultiboardSetTitleTextHint=
MultiboardSetTitleTextColorBJ="Change Title Color"
MultiboardSetTitleTextColorBJ="Change the color of the title for ",~Multiboard," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
MultiboardSetTitleTextColorBJHint="The color values are (Red, Green, Blue). A 100% transparent color is completely invisible."
MultiboardSetRowCount="Change Number Of Rows"
MultiboardSetRowCount="Change the number of rows for ",~Multiboard," to ",~Rows
MultiboardSetRowCountHint=
MultiboardSetColumnCount="Change Number Of Columns"
MultiboardSetColumnCount="Change the number of columns for ",~Multiboard," to ",~Columns
MultiboardSetColumnCountHint=
MultiboardSetItemStyleBJ="Set Item Display Style"
MultiboardSetItemStyleBJ="Set the display style for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Show/Hide," text and ",~Show/Hide," icons"
MultiboardSetItemStyleBJHint="Use a column value of zero to affect all columns. Use a row value of zero to affect all rows."
MultiboardSetItemValueBJ="Set Item Text"
MultiboardSetItemValueBJ="Set the text for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Text
MultiboardSetItemValueBJHint="Use a column value of zero to affect all columns. Use a row value of zero to affect all rows."
MultiboardSetItemColorBJ="Set Item Color"
MultiboardSetItemColorBJ="Set the color for ",~Multiboard," item in column ",~Column,", row ",~Row," to (",~Red,"%, ",~Green,"%, ",~Blue,"%) with ",~Transparency,"% transparency"
MultiboardSetItemColorBJHint="Use a column value of zero to affect all columns. Use a row value of zero to affect all rows. The color values are (Red, Green, Blue). A 100% transparent color is completely invisible."
MultiboardSetItemWidthBJ="Set Item Width"
MultiboardSetItemWidthBJ="Set the width for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Width,"% of the total screen width"
MultiboardSetItemWidthBJHint="Use a column value of zero to affect all columns. Use a row value of zero to affect all rows."
MultiboardSetItemIconBJ="Set Item Icon"
MultiboardSetItemIconBJ="Set the icon for ",~Multiboard," item in column ",~Column,", row ",~Row," to ",~Icon File
MultiboardSetItemIconBJHint="Use a column value of zero to affect all columns. Use a row value of zero to affect all rows."
AddResourceAmountBJ="Add Gold To Gold Mine"
AddResourceAmountBJ="Add ",~Quantity," gold to ",~Gold Mine
AddResourceAmountBJHint="Use a negative number to subtract."
SetResourceAmount="Set Resources Of Gold Mine"
SetResourceAmount="Set ",~Gold Mine," to ",~Quantity," gold"
SetResourceAmountHint=
BlightGoldMineForPlayer="Haunt Gold Mine (Instantly)"
BlightGoldMineForPlayer="Haunt ",~Gold Mine," for ",~Player
BlightGoldMineForPlayerHint="This replaces the Gold Mine with a Haunted Gold Mine of equal resources."
WaygateActivateBJ="Enable/Disable Way Gate"
WaygateActivateBJ=~Enable/Disable," ",~Way Gate
WaygateActivateBJHint=
WaygateSetDestinationLocBJ="Set Way Gate Destination"
WaygateSetDestinationLocBJ="Set ",~Way Gate," destination to ",~Target
WaygateSetDestinationLocBJHint=
SetAltMinimapIcon="Change Special Minimap Icon"
SetAltMinimapIcon="Change the special minimap icon to ",~Image
SetAltMinimapIconHint="The image used for this action must be exactly 16x16 pixels in size."
UnitSetUsesAltIconBJ="Turn Special Minimap Icon On/Off"
UnitSetUsesAltIconBJ="Turn special minimap icon ",~On/Off," for ",~Unit
UnitSetUsesAltIconBJHint="Use the 'Neutral Building - Change Special Minimap Icon' action to control the icon that is displayed."
AddItemToStockBJ="Add Item-Type (To Marketplace)"
AddItemToStockBJ="Add ",~Item-Type," to ",~Marketplace," with ",~Count," in stock and a max stock of ",~Max
AddItemToStockBJHint="This only affects a building if it has the 'Sell Items' ability."
AddItemToAllStock="Add Item-Type (To All Marketplaces)"
AddItemToAllStock="Add ",~Item-Type," to all marketplaces with ",~Count," in stock and a max stock of ",~Max
AddItemToAllStockHint="This affects all buildings that have the 'Sell Items' ability."
AddUnitToStockBJ="Add Unit-Type (To Marketplace)"
AddUnitToStockBJ="Add ",~Unit-Type," to ",~Marketplace," with ",~Count," in stock and a max stock of ",~Max
AddUnitToStockBJHint="This only affects a building if it has the 'Sell Units' ability."
AddUnitToAllStock="Add Unit-Type (To All Marketplaces)"
AddUnitToAllStock="Add ",~Unit-Type," to all marketplaces with ",~Count," in stock and a max stock of ",~Max
AddUnitToAllStockHint="This affects all buildings that have the 'Sell Units' ability."
RemoveItemFromStockBJ="Remove Item-Type (From Marketplace)"
RemoveItemFromStockBJ="Remove ",~Item-Type," from ",~Marketplace
RemoveItemFromStockBJHint="This only affects a building if it has the 'Sell Items' ability."
RemoveItemFromAllStock="Remove Item-Type (From All Marketplaces)"
RemoveItemFromAllStock="Remove ",~Item-Type," from all marketplaces"
RemoveItemFromAllStockHint="This affects all buildings that have the 'Sell Items' ability."
RemoveUnitFromStockBJ="Remove Unit-Type (From Marketplace)"
RemoveUnitFromStockBJ="Remove ",~Unit-Type," from ",~Marketplace
RemoveUnitFromStockBJHint="This only affects a building if it has the 'Sell Units' ability."
RemoveUnitFromAllStock="Remove Unit-Type (From All Marketplaces)"
RemoveUnitFromAllStock="Remove ",~Unit-Type," from all marketplaces"
RemoveUnitFromAllStockHint="This affects all buildings that have the 'Sell Units' ability."
SetItemTypeSlots="Limit Item Slots (Of Marketplace)"
SetItemTypeSlots="Limit ",~Marketplace," to ",~Quantity," item slots"
SetItemTypeSlotsHint="This only affects a building if it has the 'Sell Items' ability."
SetAllItemTypeSlots="Limit Item Slots (Of All Marketplaces)"
SetAllItemTypeSlots="Limit all marketplaces to ",~Quantity," item slots"
SetAllItemTypeSlotsHint="This affects all buildings that have the 'Sell Items' ability."
SetUnitTypeSlots="Limit Unit Slots (Of Marketplace)"
SetUnitTypeSlots="Limit ",~Marketplace," to ",~Quantity," unit slots"
SetUnitTypeSlotsHint="This only affects a building if it has the 'Sell Units' ability."
SetAllUnitTypeSlots="Limit Unit Slots (Of All Marketplaces)"
SetAllUnitTypeSlots="Limit all marketplaces to ",~Quantity," unit slots"
SetAllUnitTypeSlotsHint="This affects all buildings that have the 'Sell Units' ability."
SetPlayerState="Set Property"
SetPlayerState="Set ",~Player," ",~Property," to ",~Value
SetPlayerStateHint=
AdjustPlayerStateBJ="Add Property"
AdjustPlayerStateBJ="Add ",~Value," to ",~Player," ",~Property
AdjustPlayerStateBJHint="Use a negative number to subtract."
SetPlayerFlagBJ="Turn Player Flag On/Off"
SetPlayerFlagBJ="Turn ",~Player Flag," ",~On/Off," for ",~Player
SetPlayerFlagBJHint=
SetPlayerTaxRateBJ="Divert Player Income (Tax)"
SetPlayerTaxRateBJ="Divert ",~Rate,"% of the ",~Resource," income of ",~Player," to ",~Player
SetPlayerTaxRateBJHint="Income lost in this way can be accessed using the 'Player Score' function with 'Gold/Lumber Lost To Tax' values."
EnableCreepSleepBJ="Enable/Disable Sleeping For All Creeps"
EnableCreepSleepBJ=~Enable/Disable," sleeping for all creeps"
EnableCreepSleepBJHint="This affects nocturnal sleep, not magical sleep."
SetPlayerAllianceStateBJ="Set Alliance"
SetPlayerAllianceStateBJ="Make ",~Player," treat ",~Player," as an ",~Alliance Setting
SetPlayerAllianceStateBJHint="Note that neutral player slots cannot share their vision."
SetPlayerAllianceBJ="Set Aspect Of Alliance"
SetPlayerAllianceBJ="For ",~Player,", turn ",~Alliance Type," ",~On/Off," toward ",~Player
SetPlayerAllianceBJHint="This modifies one aspect of a player's alliance state, leaving others untouched. Note that neutral player slots cannot share their vision."
SetPlayerAbilityAvailableBJ="Enable/Disable Ability"
SetPlayerAbilityAvailableBJ=~Enable/Disable," ",~Ability," for ",~Player
SetPlayerAbilityAvailableBJHint=
SetPlayerUnitAvailableBJ="Set Training/Construction Availability Of Unit"
SetPlayerUnitAvailableBJ="Make ",~Unit-Type," ",~Available/Unavailable," for training/construction by ",~Player
SetPlayerUnitAvailableBJHint="This determines whether or not a type of unit can be trained or constructed by a player."
SetPlayerUnitMaxAllowed="Limit Training Of Unit-Type"
SetPlayerUnitMaxAllowed="Limit training of ",~Unit-Type," to ",~Limit," for ",~Player
SetPlayerUnitMaxAllowedHint="A limit of -1 allows unlimited training of the unit-type. A limit of 0 makes the unit-type unavailable for training."
SetPlayerMaxHeroesAllowed="Limit Training Of Heroes"
SetPlayerMaxHeroesAllowed="Limit training of Heroes to ",~Limit," for ",~Player
SetPlayerMaxHeroesAllowedHint="A limit of -1 allows unlimited training of Heroes. A limit of 0 makes Heroes unavailable for training."
SetPlayerTechResearchedSwap="Set Current Research Level"
SetPlayerTechResearchedSwap="Set the current research level of ",~Tech," to ",~Level," for ",~Player
SetPlayerTechResearchedSwapHint="Use 0 or 1 for simple tech, or 0..3 for three-stage upgrades. Tech cannot be unlearned through the use of this action."
SetPlayerTechMaxAllowedSwap="Set Max Research Level"
SetPlayerTechMaxAllowedSwap="Set the max research level of ",~Tech," to ",~Level," for ",~Player
SetPlayerTechMaxAllowedSwapHint="Use 0 or 1 for simple tech, or 0..3 for three-stage upgrades."
SetPlayerColorBJ="Change Color"
SetPlayerColorBJ="Change color of ",~Player," to ",~Color,", ",~Changing/Retaining color," of existing units"
SetPlayerColorBJHint=
SetPlayerHandicapBJ="Set Handicap"
SetPlayerHandicapBJ="Set ",~Player," handicap to ",~Percent,"%"
SetPlayerHandicapBJHint="Handicaps apply to the max life of all units owned or created for the player. Heroes are less affected by handicaps than non-Hero units."
SetPlayerOnScoreScreenBJ="Show/Hide In Score Screen"
SetPlayerOnScoreScreenBJ=~Show/Hide," ",~Player," in the post-game score screen"
SetPlayerOnScoreScreenBJHint=
SetPlayerName="Set Name"
SetPlayerName="Set name of ",~Player," to ",~Name
SetPlayerNameHint=
ForForceMultiple="Pick Every Player In Player Group And Do Multiple Actions"
ForForceMultiple="Pick every player in ",~Player Group," and do (Actions)"
ForForceMultipleHint="Use 'Picked Player' to refer each player as he/she is picked. Wait actions should not be used within this function. Add actions to this function in the main display."
ForForce="Pick Every Player In Player Group And Do Action"
ForForce="Pick every player in ",~Player Group," and do ",~Action
ForForceHint="Use 'Picked Player' to refer each player as he/she is picked. Wait actions should not be used within this function."
ForceAddPlayerSimple="Add Player"
ForceAddPlayerSimple="Add ",~Player," to ",~Player Group
ForceAddPlayerSimpleHint="This adds a player to a Player Group variable. This does not affect the player."
ForceRemovePlayerSimple="Remove Player"
ForceRemovePlayerSimple="Remove ",~Player," from ",~Player Group
ForceRemovePlayerSimpleHint="This removes a player from a Player Group variable. This does not affect the player."
ForceClear="Clear"
ForceClear="Remove all players from ",~Player Group
ForceClearHint="This removes all players from a Player Group variable. This does not affect the players themselves."
SetForceAllianceStateBJ="Set Alliance"
SetForceAllianceStateBJ="Make ",~Player," treat ",~Player," as an ",~Alliance Setting
SetForceAllianceStateBJHint="Note that neutral player slots cannot share their vision."
QuestMessageBJ="Quest Message"
QuestMessageBJ="Display to ",~Player Group," the ",~Quest Message Type," message: ",~Message
QuestMessageBJHint=
CreateQuestBJ="Create Quest"
CreateQuestBJ="Create a ",~Quest Type," quest titled ",~Title," with the description ",~Description,", using icon path ",~Icon Path
CreateQuestBJHint=
DestroyQuestBJ="Destroy Quest"
DestroyQuestBJ="Destroy ",~Quest
DestroyQuestBJHint="Destroyed quests are removed from the quest log."
QuestSetEnabledBJ="Enable/Disable Quest"
QuestSetEnabledBJ=~Enable/Disable," ",~Quest
QuestSetEnabledBJHint="Disabled quests are not displayed in the quest log."
QuestSetCompletedBJ="Mark Quest As Completed"
QuestSetCompletedBJ="Mark ",~Quest," as ",~Completed/Incomplete
QuestSetCompletedBJHint=
QuestSetFailedBJ="Mark Quest As Failed"
QuestSetFailedBJ="Mark ",~Quest," as ",~Failed/Not Failed
QuestSetFailedBJHint=
QuestSetDiscoveredBJ="Mark Quest As Discovered"
QuestSetDiscoveredBJ="Mark ",~Quest," as ",~Discovered/Undiscovered
QuestSetDiscoveredBJHint=
QuestSetTitleBJ="Change Quest Title"
QuestSetTitleBJ="Change the title of ",~Quest," to ",~Title
QuestSetTitleBJHint=
QuestSetDescriptionBJ="Change Quest Description"
QuestSetDescriptionBJ="Change the description of ",~Quest," to ",~Description
QuestSetDescriptionBJHint=
CreateQuestItemBJ="Create Quest Requirement"
CreateQuestItemBJ="Create a quest requirement for ",~Quest," with the description ",~Description
CreateQuestItemBJHint=
QuestItemSetCompletedBJ="Mark Quest Requirement As Completed"
QuestItemSetCompletedBJ="Mark ",~Quest Requirement," as ",~Completed/Incomplete
QuestItemSetCompletedBJHint=
QuestItemSetDescriptionBJ="Change Quest Requirement Description"
QuestItemSetDescriptionBJ="Change the description of ",~Quest Requirement," to ",~Description
QuestItemSetDescriptionBJHint=
CreateDefeatConditionBJ="Create Defeat Condition"
CreateDefeatConditionBJ="Create a defeat condition with the description ",~Description
CreateDefeatConditionBJHint="Defeat conditions are displayed for every quest."
DestroyDefeatConditionBJ="Destroy Defeat Condition"
DestroyDefeatConditionBJ="Destroy ",~Defeat Condition
DestroyDefeatConditionBJHint="Destroyed defeat conditions are removed from the quest log."
DefeatConditionSetDescriptionBJ="Change Defeat Condition Description"
DefeatConditionSetDescriptionBJ="Change the description of ",~Defeat Condition," to ",~Description
DefeatConditionSetDescriptionBJHint=
FlashQuestDialogButtonBJ="Flash Quest Dialog Button"
FlashQuestDialogButtonBJ="Flash the quest dialog button"
FlashQuestDialogButtonBJHint=
MoveRectToLoc="Move"
MoveRectToLoc="Center ",~Rect," on ",~Point
MoveRectToLocHint="This has no effect unless the specified rect is a variable."
ClearSelectionForPlayer="Clear Selection For Player"
ClearSelectionForPlayer="Clear selection for ",~Player
ClearSelectionForPlayerHint="Forces a player to deselect all units."
SelectGroupForPlayerBJ="Select Unit Group For Player"
SelectGroupForPlayerBJ="Select ",~Unit Group," for ",~Player
SelectGroupForPlayerBJHint="Forces a player to deselect all units and select up to 12 units of the unit group."
SelectUnitForPlayerSingle="Select Unit For Player"
SelectUnitForPlayerSingle="Select ",~Unit," for ",~Player
SelectUnitForPlayerSingleHint="Forces a player to deselect all units and select only the given unit."
SelectUnitAddForPlayer="Add Unit To Selection For Player"
SelectUnitAddForPlayer="Add ",~Unit," to selection for ",~Player
SelectUnitAddForPlayerHint="Forces a player to select the given unit in addition to whatever is already selected."
SelectUnitRemoveForPlayer="Remove Unit From Selection For Player"
SelectUnitRemoveForPlayer="Remove ",~Unit," from selection for ",~Player
SelectUnitRemoveForPlayerHint="Forces a player to deselect the given unit, retaining the rest of the current selection."
ClearSelection="Clear"
ClearSelection="Clear selection"
ClearSelectionHint="Deselect all units."
SelectGroupBJ="Select Unit Group"
SelectGroupBJ="Select ",~Unit Group
SelectGroupBJHint="Deselects all units and selects up to 12 units of the unit group."
SelectUnitSingle="Select Unit"
SelectUnitSingle="Select ",~Unit
SelectUnitSingleHint="Deselects all units and selects only the given unit."
SelectUnitAdd="Add Unit"
SelectUnitAdd="Add ",~Unit," to selection"
SelectUnitAddHint="Selects the given unit in addition to whatever is already selected."
SelectUnitRemove="Remove Unit"
SelectUnitRemove="Remove ",~Unit," from selection"
SelectUnitRemoveHint="Deselects the given unit, retaining the rest of the current selection."
PlaySoundBJ="Play Sound"
PlaySoundBJ="Play ",~Sound
PlaySoundBJHint="Sounds cannot be played at map initialization. Use the Sound Editor to create sound variables. Note that a 3D sound must be positioned to be played."
PlaySoundAtPointBJ="Play Sound At Point"
PlaySoundAtPointBJ="Play ",~3D Sound," at ",~Volume,"% volume, located at ",~Point," with Z offset ",~Z
PlaySoundAtPointBJHint="Sounds cannot be played at map initialization. This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor."
PlaySoundOnUnitBJ="Play Sound On Unit"
PlaySoundOnUnitBJ="Play ",~3D Sound," at ",~Volume,"% volume, attached to ",~Unit
PlaySoundOnUnitBJHint="Sounds cannot be played at map initialization. This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor."
PlaySoundFromOffsetBJ="Play Sound From Offset"
PlaySoundFromOffsetBJ="Play ",~Sound," at ",~Volume,"% volume, skipping the first ",~Offset," seconds"
PlaySoundFromOffsetBJHint="Sounds cannot be played at map initialization. This should not be used on 3D sounds."
StopSoundBJ="Stop Sound"
StopSoundBJ="Stop ",~Sound," ",~After Fading/Immediately
StopSoundBJHint=
KillSoundWhenDoneBJ="Destroy Sound"
KillSoundWhenDoneBJ="Destroy ",~Sound
KillSoundWhenDoneBJHint="If the sound is already playing, it will be destroyed upon finishing."
SetSoundVolumeBJ="Set Sound Volume"
SetSoundVolumeBJ="Set volume of ",~Sound," to ",~Volume,"%"
SetSoundVolumeBJHint=
SetSoundOffsetBJ="Skip To Sound Offset"
SetSoundOffsetBJ="Skip to ",~Offset," seconds from the start of ",~Sound
SetSoundOffsetBJHint="This should only be used on sounds that are currently playing. This should not be used on 3D sounds."
SetSoundDistanceCutoffBJ="Set Sound Cutoff Distance"
SetSoundDistanceCutoffBJ="Set cutoff distance of ",~Sound," to ",~Distance
SetSoundDistanceCutoffBJHint=
SetSoundPitchBJ="Set Sound Pitch"
SetSoundPitchBJ="Set pitch of ",~Sound," to ",~Pitch
SetSoundPitchBJHint=
AttachSoundToUnitBJ="Attach 3D Sound To Unit"
AttachSoundToUnitBJ="Attach ",~3D Sound," to ",~Unit
AttachSoundToUnitBJHint="This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor."
SetSoundPositionLocBJ="Set 3D Sound Position"
SetSoundPositionLocBJ="Set position of ",~3D Sound," to ",~Point," with Z offset ",~Z
SetSoundPositionLocBJHint="This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor."
SetSoundDistances="Set 3D Sound Distances"
SetSoundDistances="Set ",~3D Sound," distances to ",~Distance," minimum and ",~Distance," maximum"
SetSoundDistancesHint="This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor."
SetStackedSoundBJ="Add/Remove 3D Sound Across Rect"
SetStackedSoundBJ=~Add/Remove," ",~3D Sound," across ",~Rect
SetStackedSoundBJHint="This should only be used on sounds that have the '3D Sound' flag set in the Sound Editor."
SetAmbientDaySound="Use Daytime Ambient Theme"
SetAmbientDaySound="Use the ",~Theme," daytime ambient theme"
SetAmbientDaySoundHint=
SetAmbientNightSound="Use Nighttime Ambient Theme"
SetAmbientNightSound="Use the ",~Theme," nighttime ambient theme"
SetAmbientNightSoundHint=
EnableDawnDusk="Enable/Disable Dawn And Dusk Sounds"
EnableDawnDusk=~Enable/Disable," dawn and dusk sounds"
EnableDawnDuskHint=
SetMapMusicIndexedBJ="Set Music List (Using A Specific Initial Song)"
SetMapMusicIndexedBJ="Set the music list to ",~Music,", starting with song ",~Index
SetMapMusicIndexedBJHint="This sets the list of music to use when the current song ends. This does not stop the currently playing music."
SetMapMusicRandomBJ="Set Music List (Using A Random Initial Song)"
SetMapMusicRandomBJ="Set the music list to ",~Music,", starting with a random song"
SetMapMusicRandomBJHint="This sets the list of music to use when the current song ends. This does not stop the currently playing music."
ClearMapMusicBJ="Clear Music List"
ClearMapMusicBJ="Clear the music list"
ClearMapMusicBJHint="Clearing the music list will cause music to cease after the currently playing music ends."
PlayMusicBJ="Play Music"
PlayMusicBJ="Play ",~Music
PlayMusicBJHint=
PlayMusicExBJ="Play Music From Offset"
PlayMusicExBJ="Play ",~Music,", skipping the first ",~Offset," seconds and fading in over ",~Fade Time," seconds"
PlayMusicExBJHint=
PlayThematicMusicBJ="Play Music Theme"
PlayThematicMusicBJ="Play ",~Music Theme
PlayThematicMusicBJHint="This will play a music theme once, and then resume the game music."
PlayThematicMusicExBJ="Play Music Theme From Offset"
PlayThematicMusicExBJ="Play ",~Music Theme,", skipping the first ",~Offset," seconds"
PlayThematicMusicExBJHint="This will play a music theme once, and then resume the game music."
EndThematicMusicBJ="Stop Music Theme"
EndThematicMusicBJ="Stop the currently playing music theme"
EndThematicMusicBJHint=
StopMusicBJ="Stop Music"
StopMusicBJ="Stop music ",~After Fading/Immediately
StopMusicBJHint=
ResumeMusicBJ="Resume Music"
ResumeMusicBJ="Resume music"
ResumeMusicBJHint=
SetMusicVolumeBJ="Set Music Volume"
SetMusicVolumeBJ="Set music volume to ",~Volume,"%"
SetMusicVolumeBJHint=
SetMusicOffsetBJ="Skip To Music Offset"
SetMusicOffsetBJ="Skip to ",~Offset," seconds from the start of the current music"
SetMusicOffsetBJHint=
SetThematicMusicOffsetBJ="Skip To Music Theme Offset"
SetThematicMusicOffsetBJ="Skip to ",~Offset," seconds from the start of the current music theme"
SetThematicMusicOffsetBJHint=
VolumeGroupSetVolumeBJ="Set Volume Channel"
VolumeGroupSetVolumeBJ="Set ",~Volume Channel," to ",~Volume,"%"
VolumeGroupSetVolumeBJHint=
SetCineModeVolumeGroupsBJ="Set All Volume Channels For Cinematics"
SetCineModeVolumeGroupsBJ="Setup all volume channels for cinematics"
SetCineModeVolumeGroupsBJHint="This uses the same volume channel settings as the 'Cinematic - Cinematic Mode' action."
SetSpeechVolumeGroupsBJ="Set All Volume Channels For Speech"
SetSpeechVolumeGroupsBJ="Setup all volume channels for speech"
SetSpeechVolumeGroupsBJHint=
VolumeGroupResetBJ="Reset All Volume Channels"
VolumeGroupResetBJ="Reset all volume channels to 100%"
VolumeGroupResetBJHint=
AddSpecialEffectLocBJ="Create Special Effect At Point"
AddSpecialEffectLocBJ="Create a special effect at ",~Point," using ",~Model File
AddSpecialEffectLocBJHint=
AddSpecialEffectTargetUnitBJ="Create Special Effect On Unit"
AddSpecialEffectTargetUnitBJ="Create a special effect attached to the ",~Attachment Point," of ",~Unit," using ",~Model File
AddSpecialEffectTargetUnitBJHint=
DestroyEffectBJ="Destroy Special Effect"
DestroyEffectBJ="Destroy ",~Special Effect
DestroyEffectBJHint=
DisableTrigger="Turn Off"
DisableTrigger="Turn off ",~Trigger
DisableTriggerHint="Does not interrupt existing executions of the trigger, but prevents future executions."
EnableTrigger="Turn On"
EnableTrigger="Turn on ",~Trigger
EnableTriggerHint="Allows the trigger to be executed."
ConditionalTriggerExecute="Run (Checking Conditions)"
ConditionalTriggerExecute="Run ",~Trigger," (checking conditions)"
ConditionalTriggerExecuteHint="Runs the trigger's actions if its conditions are true."
TriggerExecute="Run (Ignoring Conditions)"
TriggerExecute="Run ",~Trigger," (ignoring conditions)"
TriggerExecuteHint="Runs the trigger's actions while ignoring events and conditions."
QueuedTriggerAddBJ="Add To Trigger Queue"
QueuedTriggerAddBJ="Add ",~Trigger," to the trigger queue (",~Checking/Ignoring," conditions)"
QueuedTriggerAddBJHint="Triggers added to the trigger queue are executed one at a time, in turn. Triggers added in this manner should remove themselves using 'Trigger - Remove From Queue'."
QueuedTriggerRemoveBJ="Remove From Trigger Queue"
QueuedTriggerRemoveBJ="Remove ",~Trigger," from the trigger queue"
QueuedTriggerRemoveBJHint="If a trigger is already running via the trigger queue, removing it will allow the next trigger in the trigger queue to run, but will not stop the trigger itself from finishing its execution."
QueuedTriggerClearBJ="Clear Trigger Queue"
QueuedTriggerClearBJ="Clear the trigger queue"
QueuedTriggerClearBJHint="This will remove all triggers from the trigger queue."
QueuedTriggerClearInactiveBJ="Clear Trigger Queue Of Pending Triggers"
QueuedTriggerClearInactiveBJ="Clear all pending triggers from the trigger queue"
QueuedTriggerClearInactiveBJHint="This will remove all pending triggers from the trigger queue. If a trigger is currently running in the queue, it will not be removed."
AddTriggerEvent="Add New Event"
AddTriggerEvent="Add to ",~Trigger," the event ",~Event
AddTriggerEventHint=
CreateNUnitsAtLoc="Create Units Facing Angle"
CreateNUnitsAtLoc="Create ",~Number," ",~Unit," for ",~Player," at ",~Point," facing ",~Direction," degrees"
CreateNUnitsAtLocHint="The facing angle is expected in degrees, with 0 being east and 90 being north. Use 'Last Created Unit Group' to refer to these created units. Use 'Last Created Unit' to refer to exactly one of these units."
CreateNUnitsAtLocFacingLocBJ="Create Units Facing Point"
CreateNUnitsAtLocFacingLocBJ="Create ",~Number," ",~Unit," for ",~Player," at ",~Point," facing ",~Point
CreateNUnitsAtLocFacingLocBJHint="Use 'Last Created Unit Group' to refer to these created units. Use 'Last Created Unit' to refer to exactly one of these units."
CreateCorpseLocBJ="Create Corpse"
CreateCorpseLocBJ="Create a ",~Unit," corpse for ",~Player," at ",~Point
CreateCorpseLocBJHint="Not all units have corpse forms. Use 'Last Created Unit' to refer to this unit."
CreatePermanentCorpseLocBJ="Create Permanent Corpse"
CreatePermanentCorpseLocBJ="Create a permanent ",~Style," ",~Unit," corpse for ",~Player," at ",~Point," facing ",~Direction," degrees"
CreatePermanentCorpseLocBJHint="Fleshy corpses will often appear skeletal for the first 8 seconds of their existence."
KillUnit="Kill"
KillUnit="Kill ",~Unit
KillUnitHint=
RemoveUnit="Remove"
RemoveUnit="Remove ",~Unit," from the game"
RemoveUnitHint="Leaves no corpse. If used on a Hero, that Hero cannot be resurrected."
ExplodeUnitBJ="Explode"
ExplodeUnitBJ="Explode ",~Unit
ExplodeUnitBJHint=
ReplaceUnitBJ="Replace"
ReplaceUnitBJ="Replace ",~Unit," with a ",~Unit-Type," using ",~Property Usage," life and mana"
ReplaceUnitBJHint="Use 'Last Replaced Unit' to refer to the replacement unit. Note that any variables referring to the old unit will need to be updated. Replacing a Haunted Gold Mine will usually yield a normal Gold Mine in addition to the replacement unit."
ShowUnitHide="Hide"
ShowUnitHide="Hide ",~Unit
ShowUnitHideHint="Use the 'Unhide Unit' action to show a unit. Hidden units do not show up in 'Units In Rect' queries."
ShowUnitShow="Unhide"
ShowUnitShow="Unhide ",~Unit
ShowUnitShowHint="Use the 'Hide Unit' action to hide a unit. Hidden units do not show up in 'Units In Rect' queries."
SetUnitColor="Change Color"
SetUnitColor="Change color of ",~Unit," to ",~Color
SetUnitColorHint="Changing a unit's color does not change the unit's ownership."
SetUnitOwner="Change Owner"
SetUnitOwner="Change ownership of ",~Unit," to ",~Player," and ",~Change/Retain Color
SetUnitOwnerHint=
UnitShareVisionBJ="Shared Vision"
UnitShareVisionBJ=~Grant/Deny," shared vision of ",~Unit," to ",~Player
UnitShareVisionBJHint="Note that neutral player slots cannot share their vision."
SetUnitPositionLoc="Move Unit (Instantly)"
SetUnitPositionLoc="Move ",~Unit," instantly to ",~Point
SetUnitPositionLocHint=
SetUnitPositionLocFacingBJ="Move Unit And Face Angle (Instantly)"
SetUnitPositionLocFacingBJ="Move ",~Unit," instantly to ",~Point,", facing ",~Direction," degrees"
SetUnitPositionLocFacingBJHint="The facing angle is expected in degrees, with 0 being east and 90 being north."
SetUnitPositionLocFacingLocBJ="Move Unit And Face Point (Instantly)"
SetUnitPositionLocFacingLocBJ="Move ",~Unit," instantly to ",~Point,", facing ",~Point
SetUnitPositionLocFacingLocBJHint=
SetUnitRallyPoint="Set Rally-Point To Point"
SetUnitRallyPoint="Set Rally-Point for ",~Unit," to ",~Point
SetUnitRallyPointHint=
SetUnitRallyUnit="Set Rally-Point To Unit"
SetUnitRallyUnit="Set Rally-Point for ",~Unit," to ",~Unit
SetUnitRallyUnitHint=
SetUnitRallyDestructable="Set Rally-Point To Destructible"
SetUnitRallyDestructable="Set Rally-Point for ",~Unit," to ",~Destructible
SetUnitRallyDestructableHint=
SetUnitLifePercentBJ="Set Life (To Percentage)"
SetUnitLifePercentBJ="Set life of ",~Unit," to ",~Percent,"%"
SetUnitLifePercentBJHint=
SetUnitManaPercentBJ="Set Mana (To Percentage)"
SetUnitManaPercentBJ="Set mana of ",~Unit," to ",~Percent,"%"
SetUnitManaPercentBJHint=
SetUnitLifeBJ="Set Life (To Value)"
SetUnitLifeBJ="Set life of ",~Unit," to ",~Value
SetUnitLifeBJHint=
SetUnitManaBJ="Set Mana (To Value)"
SetUnitManaBJ="Set mana of ",~Unit," to ",~Value
SetUnitManaBJHint=
SetUnitInvulnerable="Make Invulnerable/Vulnerable"
SetUnitInvulnerable="Make ",~Unit," ",~Invulnerable/Vulnerable
SetUnitInvulnerableHint=
PauseUnitBJ="Pause/Unpause"
PauseUnitBJ=~Pause/Unpause," ",~Unit
PauseUnitBJHint="A paused unit stops and performs no orders, but remembers its orders and continues them upon being unpaused."
PauseAllUnitsBJ="Pause/Unpause All Units"
PauseAllUnitsBJ=~Pause/Unpause," all units"
PauseAllUnitsBJHint="A paused unit stops and performs no orders, but remembers its orders and continues them upon being unpaused. This action only affects units that exist when this action is run."
UnitPauseTimedLifeBJ="Pause/Unpause Expiration Timer"
UnitPauseTimedLifeBJ=~Pause/Unpause," the expiration timer for ",~Unit
UnitPauseTimedLifeBJHint="Only summoned units have expiration timers."
UnitApplyTimedLifeBJ="Add Expiration Timer"
UnitApplyTimedLifeBJ="Add a ",~Duration," second ",~Buff Type," expiration timer to ",~Unit
UnitApplyTimedLifeBJHint=
SetUnitExplodedBJ="Make Unit Explode On Death"
SetUnitExplodedBJ="Make ",~Unit," ",~Explode/Die Normally," on death"
SetUnitExplodedBJHint=
UnitSuspendDecayBJ="Suspend Corpse Decay"
UnitSuspendDecayBJ=~Suspend/Resume," corpse decay for ",~Unit
UnitSuspendDecayBJHint="This only works on corpses, and only after the corpses' death animations have finished."
UnitResetCooldown="Reset Ability Cooldowns"
UnitResetCooldown="Reset ability cooldowns for ",~Unit
UnitResetCooldownHint="This makes all of the unit's abilities available for use again almost immediately."
UnitSetConstructionProgress="Set Building Construction Progress"
UnitSetConstructionProgress="Set ",~Building," construction progress to ",~Progress,"%"
UnitSetConstructionProgressHint="This should only be used on buildings that are currently under construction."
UnitSetUpgradeProgress="Set Building Upgrade Progress"
UnitSetUpgradeProgress="Set ",~Building," upgrade progress to ",~Progress,"%"
UnitSetUpgradeProgressHint="This should only be used on buildings that are currently being upgraded. This does not affect research-based upgrades."
UnitAddSleepPerm="Make Unit Sleep"
UnitAddSleepPerm="Make ",~Unit," ",~Sleep/Remain Awake," when unprovoked"
UnitAddSleepPermHint="Units owned by players 1 through 12 never sleep."
UnitSetCanSleepBJ="Make Unit Sleep At Night"
UnitSetCanSleepBJ="Make ",~Unit," ",~Sleep/Remain Awake," when unprovoked at night"
UnitSetCanSleepBJHint="Units owned by players 1 through 12 never sleep."
UnitWakeUpBJ="Wake Up"
UnitWakeUpBJ="Wake up ",~Unit
UnitWakeUpBJHint="This affects nocturnal sleep, not magical sleep."
UnitGenerateAlarms="Turn Alarm Generation On/Off"
UnitGenerateAlarms="Turn alarm generation for ",~Unit," ",~On/Off
UnitGenerateAlarmsHint="This only affects buildings."
RescueUnitBJ="Rescue Unit"
RescueUnitBJ="Rescue ",~Unit," for ",~Player," and ",~Change/Retain Color
RescueUnitBJHint=
MakeUnitRescuableToForceBJ="Make Rescuable"
MakeUnitRescuableToForceBJ="Make ",~Unit," ",~Rescuable/Unrescuable," by ",~Player Group
MakeUnitRescuableToForceBJHint=
SetUnitRescueRange="Set Rescue Range"
SetUnitRescueRange="Limit rescue events for ",~Unit," to a range of ",~Range
SetUnitRescueRangeHint="To make a unit rescuable, use 'Unit - Make Rescuable' or set the unit's owner to 'Rescuable'."
SetRescueUnitColorChangeBJ="Set Rescue Behavior For Units"
SetRescueUnitColorChangeBJ="Make units ",~Change/Retain Color," when rescued"
SetRescueUnitColorChangeBJHint="By default, units owned by 'Rescuable' players do not change color when rescued. This action does not affect units that have already been rescued."
SetRescueBuildingColorChangeBJ="Set Rescue Behavior For Buildings"
SetRescueBuildingColorChangeBJ="Make buildings ",~Change/Retain Color," when rescued"
SetRescueBuildingColorChangeBJHint="By default, buildings owned by 'Rescuable' players change color when rescued. This action does not affect buildings that have already been rescued."
SetUnitUseFoodBJ="Enable/Disable Supply Usage"
SetUnitUseFoodBJ=~Enable/Disable," supply usage for ",~Unit
SetUnitUseFoodBJHint=
SetUnitFacingToFaceUnitTimed="Make Unit Face Unit"
SetUnitFacingToFaceUnitTimed="Make ",~Unit," face ",~Unit," over ",~Time," seconds"
SetUnitFacingToFaceUnitTimedHint="Forces a unit to face another unit. This only works if the source unit is not moving at the time."
SetUnitFacingToFaceLocTimed="Make Unit Face Point"
SetUnitFacingToFaceLocTimed="Make ",~Unit," face ",~Point," over ",~Time," seconds"
SetUnitFacingToFaceLocTimedHint="Forces a unit to face a point. This only works if the source unit is not moving at the time."
SetUnitFacingTimed="Make Unit Face Angle"
SetUnitFacingTimed="Make ",~Unit," face ",~Angle," over ",~Time," seconds"
SetUnitFacingTimedHint="Forces a unit to face a directional angle, expected in degrees, with 0 being east. This only works if the source unit is not moving at the time."
SetUnitMoveSpeed="Set Movement Speed"
SetUnitMoveSpeed="Set ",~Unit," movement speed to ",~Speed
SetUnitMoveSpeedHint="Common movement speeds range from 150 to 300."
SetUnitPathing="Turn Collision On/Off"
SetUnitPathing="Turn collision for ",~Unit," ",~On/Off
SetUnitPathingHint="Collision-disabled units ignore obstacles, but are still themselves treated as obstacles."
SetUnitAcquireRangeBJ="Set Acquisition Range"
SetUnitAcquireRangeBJ="Set ",~Unit," acquisition range to ",~Range
SetUnitAcquireRangeBJHint="The acquisition range of a unit is the distance at which the unit acquires targets to attack."
SetUnitUserData="Set Custom Value"
SetUnitUserData="Set the custom value of ",~Unit," to ",~Index
SetUnitUserDataHint="Custom values are only used in triggers, and can be used to store any integer value."
UnitRemoveBuffsBJ="Remove Buffs"
UnitRemoveBuffsBJ="Remove ",~Buff Type," buffs from ",~Unit
UnitRemoveBuffsBJHint=
UnitRemoveBuffsExBJ="Remove Buffs By Type"
UnitRemoveBuffsExBJ="Remove ",~Buff Type," buffs considered ",~Buff Resist," from ",~Unit," (",~Include/Exclude," expiration timers, ",~Include/Exclude," auras)"
UnitRemoveBuffsExBJHint=
UnitRemoveBuffBJ="Remove Specific Buff"
UnitRemoveBuffBJ="Remove ",~Buff," buff from ",~Unit
UnitRemoveBuffBJHint=
UnitAddAbilityBJ="Add Ability"
UnitAddAbilityBJ="Add ",~Ability," to ",~Unit
UnitAddAbilityBJHint=
UnitRemoveAbilityBJ="Remove Ability"
UnitRemoveAbilityBJ="Remove ",~Ability," from ",~Unit
UnitRemoveAbilityBJHint="In most cases, removing an ability in this manner is permanent."
UnitAddTypeBJ="Add Classification"
UnitAddTypeBJ="Add classification of ",~Classification," to ",~Unit
UnitAddTypeBJHint="The info panel for a selected unit won't update until the unit is re-selected."
UnitRemoveTypeBJ="Remove Classification"
UnitRemoveTypeBJ="Remove classification of ",~Classification," from ",~Unit
UnitRemoveTypeBJHint="The info panel for a selected unit won't update until the unit is re-selected."
IssueTargetOrder="Issue Order Targeting A Unit"
IssueTargetOrder="Order ",~Unit," to ",~Order," ",~Unit
IssueTargetOrderHint=
IssuePointOrderLoc="Issue Order Targeting A Point"
IssuePointOrderLoc="Order ",~Unit," to ",~Order," ",~Point
IssuePointOrderLocHint=
IssueTargetDestructableOrder="Issue Order Targeting A Destructible"
IssueTargetDestructableOrder="Order ",~Unit," to ",~Order," ",~Destructible
IssueTargetDestructableOrderHint=
IssueTargetItemOrder="Issue Order Targeting An Item"
IssueTargetItemOrder="Order ",~Unit," to ",~Order," ",~Item
IssueTargetItemOrderHint=
IssueImmediateOrder="Issue Order With No Target"
IssueImmediateOrder="Order ",~Unit," to ",~Order
IssueImmediateOrderHint=
IssueBuildOrderByIdLocBJ="Issue Build Order"
IssueBuildOrderByIdLocBJ="Order ",~Unit," to build a ",~Unit-Type," at ",~Point
IssueBuildOrderByIdLocBJHint=
IssueTrainOrderByIdBJ="Issue Train/Upgrade Order"
IssueTrainOrderByIdBJ="Order ",~Unit," to train/upgrade to a ",~Unit-Type
IssueTrainOrderByIdBJHint="This action can be used to order a unit to upgrade itself. A Town Hall, for example, can be upgraded by ordering it to train a Keep."
IssueUpgradeOrderByIdBJ="Issue Research Order"
IssueUpgradeOrderByIdBJ="Order ",~Unit," to research ",~Tech-Type
IssueUpgradeOrderByIdBJHint="Weapons and armor upgrades can be researched multiple times via this trigger action."
ForGroupMultiple="Pick Every Unit In Unit Group And Do Multiple Actions"
ForGroupMultiple="Pick every unit in ",~Unit Group," and do (Actions)"
ForGroupMultipleHint="Use 'Picked Unit' to refer each unit as it is picked. This works for every unit in the group, including dead units. Wait actions should not be used within this function. Add actions to this function in the main display."
ForGroup="Pick Every Unit In Unit Group And Do Action"
ForGroup="Pick every unit in ",~Unit Group," and do ",~Action
ForGroupHint="Use 'Picked Unit' to refer each unit as it is picked. This works for every unit in the group, including dead units. Wait actions should not be used within this function."
GroupAddUnitSimple="Add Unit"
GroupAddUnitSimple="Add ",~Unit," to ",~Unit Group
GroupAddUnitSimpleHint="This adds a unit to a Unit Group variable. This does not affect the unit itself."
GroupAddGroup="Add Unit Group"
GroupAddGroup="Add all units of ",~Unit Group," to ",~Unit Group
GroupAddGroupHint="This adds all units of a unit group to a Unit Group variable. This does not affect the units themselves."
GroupRemoveUnitSimple="Remove Unit"
GroupRemoveUnitSimple="Remove ",~Unit," from ",~Unit Group
GroupRemoveUnitSimpleHint="This removes a unit from a Unit Group variable. This does not affect the unit itself."
GroupRemoveGroup="Remove Unit Group"
GroupRemoveGroup="Remove all units of ",~Unit Group," from ",~Unit Group
GroupRemoveGroupHint="This removes all units of a unit group from a Unit Group variable. This does not affect the units themselves."
GroupClear="Clear"
GroupClear="Remove all units from ",~Unit Group
GroupClearHint="This removes all units from a Unit Group variable. This does not affect the units themselves."
GroupTargetOrder="Issue Order Targeting A Unit"
GroupTargetOrder="Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderHint="This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game."
GroupPointOrderLoc="Issue Order Targeting A Point"
GroupPointOrderLoc="Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderLocHint="This will issue an order to at most 12 units from the specified unit group."
GroupTargetDestructableOrder="Issue Order Targeting A Destructible"
GroupTargetDestructableOrder="Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetDestructableOrderHint="This will issue an order to at most 12 units from the specified unit group."
GroupTargetItemOrder="Issue Order Targeting An Item"
GroupTargetItemOrder="Order ",~Unit Group," to ",~Order," ",~Item
GroupTargetItemOrderHint="This will issue an order to at most 12 units from the specified unit group."
GroupImmediateOrder="Issue Order With No Target"
GroupImmediateOrder="Order ",~Unit Group," to ",~Order
GroupImmediateOrderHint="This will issue an order to at most 12 units from the specified unit group."
GroupTrainOrderByIdBJ="Issue Train Order"
GroupTrainOrderByIdBJ="Order ",~Unit Group," to train a ",~Unit-Type
GroupTrainOrderByIdBJHint="This action can also be used to order a unit to upgrade itself. A Town Hall, for example, can be upgraded by ordering it to train a Keep. This will issue an order to at most 12 units from the specified unit group."
FogEnableOn="Enable Fog Of War"
FogEnableOn="Enable fog of war"
FogEnableOnHint=
FogEnableOff="Disable Fog Of War"
FogEnableOff="Disable fog of war"
FogEnableOffHint=
FogMaskEnableOn="Enable Black Mask"
FogMaskEnableOn="Enable black mask"
FogMaskEnableOnHint=
FogMaskEnableOff="Disable Black Mask"
FogMaskEnableOff="Disable black mask"
FogMaskEnableOffHint=
CreateFogModifierRectBJ="Create Visibility Modifier Rect"
CreateFogModifierRectBJ="Create an initially ",~Enabled/Disabled," visibility modifier for ",~Player," emitting ",~Visibility State," across ",~Rect
CreateFogModifierRectBJHint=
CreateFogModifierRadiusLocBJ="Create Visibility Modifier Circle"
CreateFogModifierRadiusLocBJ="Create an initially ",~Enabled/Disabled," visibility modifier for ",~Player," emitting ",~Visibility State," from ",~Point," to a radius of ",~Radius
CreateFogModifierRadiusLocBJHint=
FogModifierStart="Enable Visibility Modifier"
FogModifierStart="Enable ",~Visibility Modifier
FogModifierStartHint=
FogModifierStop="Disable Visibility Modifier"
FogModifierStop="Disable ",~Visibility Modifier
FogModifierStopHint=
DestroyFogModifier="Destroy Visibility Modifier"
DestroyFogModifier="Destroy ",~Visibility Modifier
DestroyFogModifierHint=
AddLightningLoc="Create Lightning Effect At Points"
AddLightningLoc="Create a lightning effect ",~Code," ",~From," ",~To
AddLightningLocHint=
AddLightningEx="Create Lightning Effect (Advanced)"
AddLightningEx="Create a ",~Type,", ",~Visibility," lightning effect from source (",~X1,",",~Y1,",",~Z1,") to target (",~X2,",",~Y2,",",~Z2,") "
AddLightningExHint="Use coordinates, Z values are elevation [WEU ADD-IN]"
DestroyLightningBJ="Destroy Lightning Effect"
DestroyLightningBJ="Destroy ",~Bolt
DestroyLightningBJHint=
MoveLightningLoc="Move Lightning Effect To Points"
MoveLightningLoc="Move ",~Bolt," ",~From," ",~To
MoveLightningLocHint=
MoveLightningEx="Move Lightning Effect (Advanced)"
MoveLightningEx="Move ",~Bolt,"Check visibility=",~Boolean," to (",~X1,",",~Y1,",",~Z1,") (",~X2,",",~Y2,",",~Z2,") "
MoveLightningExHint="Use coordinates, Z values are elevation [WEU ADD-IN]"
SetLightningColorBJ="Set Lightning Effect Color"
SetLightningColorBJ="Change ",~Bolt," color to ",~Alpha," ",~Red," ",~Green," ",~Blue
SetLightningColorBJHint="The color values are (Red, Green, Blue).  Color and alpha values are expected in the range of 0 to 1.  A lightning effect with 0 alpha is completely invisible."
UnitDropItemPointLoc="Issue Drop Item Order"
UnitDropItemPointLoc="Order ",~Unit," to drop ",~Item," at ",~Point
UnitDropItemPointLocHint=
UnitDropItemSlotBJ="Issue Move Item In Inventory Order"
UnitDropItemSlotBJ="Order ",~Unit," to move ",~Item," to inventory slot ",~Index
UnitDropItemSlotBJHint="This only works if the unit is already carrying the item.  If an item exists in the slot, the items will be swapped."
UnitDropItemTargetBJ="Issue Give Item Order"
UnitDropItemTargetBJ="Order ",~Unit," to give ",~Item," to ",~Unit
UnitDropItemTargetBJHint=
UnitDamagePointLoc="Damage Area"
UnitDamagePointLoc="Cause ",~Unit," to damage circular area after ",~Seconds," seconds of radius ",~Size," at ",~Location,", dealing ",~Amount," damage of attack type ",~AttackType," and damage type ",~DamageType
UnitDamagePointLocHint="This does not interrupt the unit's orders.  The source unit gets credit for kills resulting from this damage."
UnitDamageTargetBJ="Damage Target"
UnitDamageTargetBJ="Cause ",~Unit," to damage ",~Target,", dealing ",~Amount," damage of attack type ",~AttackType," and damage type ",~DamageType
UnitDamageTargetBJHint="This does not interrupt the unit's orders.  The source unit gets credit for kills resulting from this damage."
DecUnitAbilityLevelSwapped="Decrease Level Of Ability For Unit"
DecUnitAbilityLevelSwapped="Decrease level of ",~Ability," for ",~Unit
DecUnitAbilityLevelSwappedHint="If the unit does not have the ability, this does nothing."
IncUnitAbilityLevelSwapped="Increase Level Of Ability For Unit"
IncUnitAbilityLevelSwapped="Increase level of ",~Ability," for ",~Unit
IncUnitAbilityLevelSwappedHint="If the unit does not have the ability, this does nothing."
SetUnitAbilityLevelSwapped="Set Level Of Ability For Unit"
SetUnitAbilityLevelSwapped="Set level of ",~Ability," for ",~Unit," to ",~Level
SetUnitAbilityLevelSwappedHint="If the unit does not have the ability, this does nothing."
CreateDestructableZA="Create With Z Offset"
CreateDestructableZA="Create a ",~Destructible-Type," at offset(",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDestructableZAHint="Just here for COMPATIBILITY reasons. Better use the function returning the destructable to save it to a variable. [WEU ADD-IN]"
CreateDeadDestructableZA="Create With Z Offset (Dead)"
CreateDeadDestructableZA="Create a dead ",~Destructible-Type," at offset (",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDeadDestructableZAHint="Just here for COMPATIBILITY reasons. Better use the function returning the destructable to save it to a variable. [WEU ADD-IN]"
DialogAddButtonWithHotkeyBJ="Create Dialog Button with Hotkey (GU Version)"
DialogAddButtonWithHotkeyBJ="Create a dialog button for ",~Dialog," labelled ",~Text," and keycode ",~Code
DialogAddButtonWithHotkeyBJHint="Just here for COMPATIBILITY reasons. Better use the common.j version of this action. [WEU ADD-IN]"
CreateTrackable="Create Trackable Object"
CreateTrackable="Create trackable object using path ",~Path," at Location (",~X,",",~Y,") facing ",~Degrees
CreateTrackableHint="Just here for COMPATIBILITY reasons. Better use the function returning the trackable to save it to a variable. [WEU ADD-IN]"
DestroyMultiboard="Destroy Multiboard"
DestroyMultiboard="Destroy multiboard ",~board
DestroyMultiboardHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [WEU ADD-IN]"
MultiboardDisplay="Display Multiboard"
MultiboardDisplay="Take multiboard ",~board," and ",~ShowHide," it"
MultiboardDisplayHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [WEU ADD-IN]"
MultiboardMinimize="Minimize Multiboard"
MultiboardMinimize="Take multiboard ",~board," and ",~Min," it"
MultiboardMinimizeHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [WEU ADD-IN]"
MultiboardSetTitleTextColor="Set Title Text Color"
MultiboardSetTitleTextColor="Set title text color of multiboard ",~board," to ",~Value," % Red, ",~Value," % Green, ",~Value," % Blue and ",~Value," alpha channel"
MultiboardSetTitleTextColorHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [WEU ADD-IN]"
MultiboardSetItemsStyle="All Items - Set Item Style"
MultiboardSetItemsStyle="Set item style for all items of multiboard ",~board," to ",~ShowHide," Values and ",~ShowHide," Icons"
MultiboardSetItemsStyleHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [WEU ADD-IN]"
MultiboardSetItemsValue="All Items - Set Item Value"
MultiboardSetItemsValue="Set the label for all items of multiboard ",~board," to ",~Value
MultiboardSetItemsValueHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [WEU ADD-IN]"
MultiboardSetItemsWidth="All Items - Set Item Width"
MultiboardSetItemsWidth="Set width for all items of multiboard ",~board," to ",~Value
MultiboardSetItemsWidthHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [WEU ADD-IN]"
MultiboardSetItemsIcon="All Items - Set Item Icon"
MultiboardSetItemsIcon="Set used icon for all items of multiboard ",~board," to ",~Icon
MultiboardSetItemsIconHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [WEU ADD-IN]"
MultiboardReleaseItem="Release Multiboard Item"
MultiboardReleaseItem="Release multiboard item ",~Item
MultiboardReleaseItemHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [WEU ADD-IN]"
MultiboardSetItemStyle="Set Item Style"
MultiboardSetItemStyle="Set item style of multiboard item ",~Item," to ",~ShowHide," Values and ",~ShowHide," Icons"
MultiboardSetItemStyleHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [WEU ADD-IN]"
MultiboardSetItemValue="Set Item Value"
MultiboardSetItemValue="Set the label for multiboard item ",~Item," to ",~Value
MultiboardSetItemValueHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [WEU ADD-IN]"
MultiboardSetItemWidth="Set Item Width"
MultiboardSetItemWidth="Set width for multiboard item ",~Item," to ",~Value
MultiboardSetItemWidthHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [WEU ADD-IN]"
MultiboardSetItemIcon="Set Item Icon"
MultiboardSetItemIcon="Set used icon for multiboard item ",~Item," to ",~Icon
MultiboardSetItemIconHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [WEU ADD-IN]"
UnitApplyTimedLife="Apply Life Timer"
UnitApplyTimedLife="Set timed life for unit ",~Unit," with buff ID ",~Integer," and duration ",~Integer," seconds"
UnitApplyTimedLifeHint="Just here for COMPATIBILITY reasons. Better use the new official action. [WEU ADD-IN]"
SetStartupSkills="Hero - Set Hero Start Skill Level"
SetStartupSkills="Set the level for ",~Skill," for ",~Hero," to ",~Level
SetStartupSkillsHint="This action is now OBSOLETE and won't do anything. Replaced by the new 'Level Of Ability For Unit' function."
CacheEngineSave="Game Cache - Save All Objects To Game Cache"
CacheEngineSave="Save all units, items and destructables except ",~Group," to the cache ",~Cache," and also cache the player stats ",~Yes/No," (Researches, Gold, Lumber)"
CacheEngineSaveHint="This action is now OBSOLETE and won't do anything. Replaced by the new 'Save Game' functions."
CacheEngineLoad="Game Cache - Load All Saved Objects From Game Cache"
CacheEngineLoad="Remove all units, items and destructable from the map except ",~Group," and restore all objects from cache ",~Cache," and also restore player stats ",~Yes/No," (Researches, Gold, Lumber)"
CacheEngineLoadHint="This action is now OBSOLETE and won't do anything. Replaced by the new 'Load Game' function."
CreateItemWithChargesLoc=1,dummyitem,integer,location
CreateItemWithChargesLoc="Item - Create Item with Charges at Point"
CreateItemWithChargesLoc="Create a Item of type ",~Type," with ",~Nr," charges at ",~Point
CreateItemWithChargesLocHint="This action is now OBSOLETE and won't do anything. Replaced by the new 'Set Charges Remaining' function."
CreateItemWithChargesForHero="Item - Create Item with Charges for Hero"
CreateItemWithChargesForHero="Create a Item of type ",~Type," with ",~Nr," charges in ",~Hero,"'s inventory"
CreateItemWithChargesForHeroHint="This action is now OBSOLETE and won't do anything. Replaced by the new 'Set Charges Remaining' function."
CreateMultiboardItemBJ="Multiboard - Create Multiboard Item"
CreateMultiboardItemBJ="Create a new item for multiboard ",~board," in row ",~Row," and column ",~Column
CreateMultiboardItemBJHint="This action is now OBSOLETE and won't do anything. Replaced by the new official multiboard functions."
AddHeroGlow="Unit - Add Hero Glow"
AddHeroGlow="Add ",~Color," hero glow to ",~Unit," which needs a ",~Size," hero glow"
AddHeroGlowHint="This action is now OBSOLETE and won't do anything. Replaced by the new 'Add Hero Glow' action."
ChangeManaOld="Unit - Change Unit's Mana Maximum"
ChangeManaOld="For ",~Player," ",~ChangeType," mana maximum for all units that use the ",~UpgradeSet," by ",~Value
ChangeManaOldHint="This action is now OBSOLETE and won't do anything. Replaced by the new 'Change Unit's Mana' action."
ChangeLifeOld="Unit - Change Unit's Life Maximum"
ChangeLifeOld="For ",~Player," ",~ChangeType," life maximum for all units that use the ",~UpgradeSet," by ",~Value
ChangeLifeOldHint="This action is now OBSOLETE and won't do anything. Replaced by the new 'Change Unit's Life' action."
ChangeDamageOld="Unit - Change Unit's Damage"
ChangeDamageOld="For ",~Player," ",~ChangeType," damage for all units that use the ",~UpgradeSet," by ",~Value
ChangeDamageOldHint="This action is now OBSOLETE and won't do anything. Replaced by the new 'Change Unit's Damage' action."
ChangeLeeching="Unit - Change Unit's Leeched Life"
ChangeLeeching="For ",~Unit," ",~ChangeType," leeched life by ",~Value
ChangeLeechingHint="This action is OBSOLETE because it does not work."
GroupTargetOrderBJ="Issue Order Targeting A Unit (takes string)"
GroupTargetOrderBJ="Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderBJHint="This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [WEU ADD-IN]"
GroupTargetOrderById="Issue Order Targeting A Unit (takes ordercode)"
GroupTargetOrderById="Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderByIdHint="This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [WEU ADD-IN]"
GroupItemTargetOrder="Group Issue Order Targeting An Item"
GroupItemTargetOrder="Order ",~Unit Group," to ",~Order," ",~Item
GroupItemTargetOrderHint="Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [WEU ADD-IN]"
GroupItemTargetOrderBJ="Issue Order Targeting An Item (takes string)"
GroupItemTargetOrderBJ="Order ",~Unit Group," to ",~Order," ",~Item
GroupItemTargetOrderBJHint="This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [WEU ADD-IN]"
GroupItemTargetOrderById="Issue Order Targeting An Item (takes ordercode)"
GroupItemTargetOrderById="Order ",~Unit Group," to ",~Order," ",~Item
GroupItemTargetOrderByIdHint="This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [WEU ADD-IN]"
GroupPointOrderLocBJ="Issue Order Targeting A Point (takes string)"
GroupPointOrderLocBJ="Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderLocBJHint="This will issue an order to at most 12 units from the specified unit group. [WEU ADD-IN]"
GroupPointOrderByIdLoc="Issue Order Targeting A Point (takes ordercode)"
GroupPointOrderByIdLoc="Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderByIdLocHint="This will issue an order to at most 12 units from the specified unit group. [WEU ADD-IN]"
GroupTargetDestructableOrderS="Issue Order Targeting A Destructible (takes string)"
GroupTargetDestructableOrderS="Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetDestructableOrderSHint="This will issue an order to at most 12 units from the specified unit group. [WEU ADD-IN]"
GroupTargetOrderByIdD="Issue Order Targeting A Destructible (takes ordercode)"
GroupTargetOrderByIdD="Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetOrderByIdDHint="This will issue an order to at most 12 units from the specified unit group. [WEU ADD-IN]"
GroupImmediateOrderBJ="Issue Order With No Target (takes string)"
GroupImmediateOrderBJ="Order ",~Unit Group," to ",~Order
GroupImmediateOrderBJHint="This will issue an order to at most 12 units from the specified unit group. [WEU ADD-IN]"
GroupImmediateOrderById="Issue Order With No Target (takes ordercode)"
GroupImmediateOrderById="Order ",~Unit Group," to ",~Order
GroupImmediateOrderByIdHint="This will issue an order to at most 12 units from the specified unit group. [WEU ADD-IN]"
DialogAddButton="Create Dialog Button With Hotkey"
DialogAddButton="Create a dialog button for ",~Dialog," labelled ",~Text," with hotkey: ",~Key
DialogAddButtonHint="Use ASCII numbers for the hotkey number [WEU ADD-IN]"
DisplayTextToPlayer="Text Message to Player (Auto-Timed)"
DisplayTextToPlayer="Display to ",~Player,", at offset (",~xpos,", ",~ypos,") the text: ",~Text
DisplayTextToPlayerHint="The text is shown for an amount of time that automatically increases with the text length. The offset is the X,Y position on the screen. [WEU ADD-IN]"
DisplayTimedTextToPlayer="Text Message to Player (Explicitly Timed)"
DisplayTimedTextToPlayer="Display to ",~Player,", at offset (",~xpos,", ",~ypos,") for ",~Time," seconds the text: ",~Text
DisplayTimedTextToPlayerHint="The offset is the X,Y position on the screen. [WEU ADD-IN]"
SetHeroAgi="Set Hero Agility"
SetHeroAgi="Set Agility of",~Hero," to ",~integer,", (Permanent or Temporary:",~permanent,")"
SetHeroAgiHint="Changes the hero's agility [WEU ADD-IN]"
SetHeroInt="Set Hero Intelligence"
SetHeroInt="Set Intelligence of",~Hero," to ",~integer,", (Permanent or Temporary:",~permanent,")"
SetHeroIntHint="Changes the hero's Intelligence [WEU ADD-IN]"
SetHeroStr="Set Hero Strength"
SetHeroStr="Set Strength of",~Hero," to ",~integer,", (Permanent or Temporary:",~permanent,")"
SetHeroStrHint="Changes the hero's strength [WEU ADD-IN]"
MoveLocation="Move Point"
MoveLocation="Move ",~Point," to offset(",~X,", ",~Y,")"
MoveLocationHint="[WEU ADD-IN]"
RemoveLocation="Remove Point"
RemoveLocation="Remove ",~Location
RemoveLocationHint="Use this to delete a point to save memory. The variable itself will remain without data [WEU ADD-IN]"
SetPlayerTechMaxAllowed="Set Max Number Of Units by Type"
SetPlayerTechMaxAllowed="For ",~Player,", set the maximun number of ",~Unit-Type," to ",~Number
SetPlayerTechMaxAllowedHint="Sets the maximum number of units of a certain type a player can own [WEU ADD-IN]"
MoveRectTo="Move to Offset"
MoveRectTo="Center ",~Rect," on offset(",~Real,", ",~Real,")"
MoveRectToHint="This has no effect unless the specified rect is a variable [WEU ADD-IN]"
RemoveRect="Remove"
RemoveRect="Remove ",~Rect
RemoveRectHint="Use this to delete a rect to save memory. The variable itself will remain without data [WEU ADD-IN]"
DestroyTrigger="Destroy"
DestroyTrigger="Destroy ",~Trigger
DestroyTriggerHint="Destroys a trigger [WEU ADD-IN]"
TriggerRemoveCondition="Remove Condition"
TriggerRemoveCondition="Take ",~Trigger," and remove the condition ",~Boolexp
TriggerRemoveConditionHint="Removes a condition from a trigger [WEU ADD-IN]"
TriggerClearConditions="Clear Conditions"
TriggerClearConditions="Take ",~Trigger," and remove all conditions "
TriggerClearConditionsHint="Removes all conditions from a trigger [WEU ADD-IN]"
TriggerRemoveAction="Remove Action"
TriggerRemoveAction="Take ",~Trigger," and remove the action ",~Action
TriggerRemoveActionHint="Removes an action from a trigger [WEU ADD-IN]"
TriggerClearActions="Clear Actions"
TriggerClearActions="Take ",~Trigger," and remove all actions"
TriggerClearActionsHint="Removes all actions from a trigger [WEU ADD-IN]"
ResetTrigger="Reset Trigger"
ResetTrigger="Reset ",~Trigger
ResetTriggerHint="Resets a trigger to its original state [WEU ADD-IN]"
QueuedTriggerRemoveByIndex="Remove Trigger From Trigger Queue by Index"
QueuedTriggerRemoveByIndex="Remove the trigger with index",~Index," from the trigger queue"
QueuedTriggerRemoveByIndexHint="Removes a trigger from the trigger queue, shifting other triggers down to fill the unused space. If the currently running trigger is removed in this manner, this function does NOT attempt to run the next trigger. [WEU ADD-IN]"
UnitAddItemToSlotById="Create Item In Hero Inventory Slot"
UnitAddItemToSlotById="Give ",~Hero," a ",~Item," in slot ",~Index
UnitAddItemToSlotByIdHint="Creates an item in a specific item slot [WEU ADD-IN]"
SelectHeroSkill2="Learn Skill (Takes Abilcode)"
SelectHeroSkill2="Learn skill for ",~Hero,": ",~Skill
SelectHeroSkill2Hint="This only works if the Hero has at least one skill point to spend. [WEU ADD-IN]"
SetUnitLookAtS="Lock Body-Part Facing (Takes String)"
SetUnitLookAtS="Lock ",~Unit,"'s ",~Source," to face ",~Unit,", offset by (",~X,", ",~Y,", ",~Z,")"
SetUnitLookAtSHint="The unit's body-part will continue to face the target until 'Reset Body-Part Facing' is used. The offset is taken as (X, Y, Z) from the target's feet. Use this to specify any bone by it's name. [WEU ADD-IN]"
IssueTargetOrderBJ="Issue Order Targeting A Unit (Takes String)"
IssueTargetOrderBJ="Order ",~Unit," to ",~Order," ",~Unit
IssueTargetOrderBJHint="Use this to enter a string as order instead of picking a preset [WEU ADD-IN]"
IssueTargetOrderById="Issue Order Targeting A Unit (Takes Ordercode)"
IssueTargetOrderById="Order ",~Unit," to ",~Order," ",~Unit
IssueTargetOrderByIdHint="[WEU ADD-IN]"
IssuePointOrderLocBJ="Issue Order Targeting A Point (Takes String)"
IssuePointOrderLocBJ="Order ",~Unit," to ",~Order," ",~Point
IssuePointOrderLocBJHint="Use this to enter a string as order instead of picking a preset [WEU ADD-IN]"
IssuePointOrderByIdLoc="Issue Order Targeting A Point (Takes Ordercode)"
IssuePointOrderByIdLoc="Order ",~Unit," to ",~Order," ",~Point
IssuePointOrderByIdLocHint="[WEU ADD-IN]"
IssueNeutralImmediateOrderById="Buy Unit from Store"
IssueNeutralImmediateOrderById="For ",~Player," order ",~Shop," to sell a unit of type ",~Type
IssueNeutralImmediateOrderByIdHint="[WEU ADD-IN]"
IssueTargetOrderD="Issue Order Targeting A Destructible (Takes String)"
IssueTargetOrderD="Order ",~Unit," to ",~Order," ",~Destructible
IssueTargetOrderDHint="Use this to enter a string as order instead of picking a preset [WEU ADD-IN]"
IssueTargetOrderByIdD="Issue Order Targeting A Destructible (Takes Ordercode)"
IssueTargetOrderByIdD="Order ",~Unit," to ",~Order," ",~Destructible
IssueTargetOrderByIdDHint="[WEU ADD-IN]"
IssueImmediateOrderBJ="Issue Order With No Target (Takes String)"
IssueImmediateOrderBJ="Order ",~Unit," to ",~Order
IssueImmediateOrderBJHint="Use this to enter a string as order instead of picking a preset [WEU ADD-IN]"
IssueImmediateOrderById="Issue Order With No Target (Takes Ordercode)"
IssueImmediateOrderById="Order ",~Unit," to ",~Order
IssueImmediateOrderByIdHint="[WEU ADD-IN]"
AddSpellEffectByIdLoc="Create Spell Effect At Location"
AddSpellEffectByIdLoc="Create the illusion of ",~Ability," with that spell's ",~EffectTypeOption," effect at the location ",~Location
AddSpellEffectByIdLocHint="Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [WEU ADD-IN"
AddSpellEffectTargetById="Create Spell Effect On Unit"
AddSpellEffectTargetById="Create the illusion of ",~Ability," with that spell's ",~EffectTypeOption," model attached to ",~Unit," on it's ",~Attackment Point
AddSpellEffectTargetByIdHint="Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [WEU ADD-IN"
AddSpellEffectByIdLocB="Create Buff Effect At Location"
AddSpellEffectByIdLocB="Create the illusion of ",~Buff," with that buff's ",~EffectTypeOption," effect at the location ",~Location
AddSpellEffectByIdLocBHint="Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [WEU ADD-IN"
AddSpellEffectTargetByIdB="Create Buff Effect On Unit"
AddSpellEffectTargetByIdB="Create the illusion of ",~Buff," with that buff's ",~EffectTypeOption," model attached to ",~Unit," on it's ",~Attackment Point
AddSpellEffectTargetByIdBHint="Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [WEU ADD-IN"
IssueItemTargetOrder="Issue Order Targeting An Item"
IssueItemTargetOrder="Order ",~Unit," to ",~Order," ",~Item
IssueItemTargetOrderHint="Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [WEU ADD-IN]"
IssueItemTargetOrderS="Issue Order Targeting An Item (Takes String)"
IssueItemTargetOrderS="Order ",~Unit," to ",~Order," ",~Item
IssueItemTargetOrderSHint="[WEU ADD-IN]"
IssueItemTargetOrderId="Issue Order Targeting An Item (Takes Ordercode)"
IssueItemTargetOrderId="Order ",~Unit," to ",~Order," ",~Item
IssueItemTargetOrderIdHint="[WEU ADD-IN]"
IssueInstantTargetOrder="Give Item from Hero to Hero"
IssueInstantTargetOrder="Order ",~Hero," to ",~Order," ",~Item," to ",~Hero
IssueInstantTargetOrderHint="The ordered hero will walk to the target hero to hand the item over. [WEU ADD-IN]"
EnableUserUI="Enable/Disable User UI"
EnableUserUI=~Enable/Disable," User UI"
EnableUserUIHint="[WEU ADD-IN]"
SetIntegerGameState="Set Game State"
SetIntegerGameState="Set ",~Gamestate," to ",~Value
SetIntegerGameStateHint="[WEU ADD-IN]"
UnitApplyTimedLifeB="Apply Life Timer (takes buffcode)"
UnitApplyTimedLifeB="Set timed life for unit ",~Unit," with buff ID ",~Buff Type," and duration ",~Integer," seconds"
UnitApplyTimedLifeBHint="Gives a unit a life timer. [WEU ADD-IN]"
UnitMakeAbilityPermanentBJ="Make Ability Permanent"
UnitMakeAbilityPermanentBJ="For ",~whichUnit," set ability state to ",~permanent," for ability "~abilityId
UnitMakeAbilityPermanentBJHint="[WEU ADD-IN]"
PlayCinematic="Play Movie"
PlayCinematic="Play the cinematic movie called ",~name
PlayCinematicHint="The Movie must be in the Movies folder of Warcraft and in the same format as the other movies. String without .mpq "[WEU ADD-IN]"
RandomDistAddItem="Add Item To Random Item Pool"
RandomDistAddItem="Add the item with the id ",~id," to the pool and give it a ",~percent," chance to be chosen"
RandomDistAddItemHint="Use 'Get Random Item From Pool' to use your own item pool [WEU ADD-IN]"
RandomDistReset="Reset Random Item Pool"
RandomDistReset="Reset your own pool for random items"
RandomDistResetHint="[WEU ADD-IN]"
SyncSelections="Synchronize Selections"
SyncSelections="Synchronize the unit selections"
SyncSelectionsHint="Used to avoid desyncs before getting the selection state with custom script calls [WEU ADD-IN]"
RegionAddCell="Add Cell To Region"
RegionAddCell="Take ",~region," and add a cell at location (",~X,",",~Y,")"
RegionAddCellHint="[WEU ADD-IN]"
RegionAddCellAtLoc="Region Add Cell At Location"
RegionAddCellAtLoc="Take ",~region," and add a cell at ",~location
RegionAddCellAtLocHint="[WEU ADD-IN]"
RegionAddRect="Add Rect To Region"
RegionAddRect="Take ",~region," and add ",~rect," to it"
RegionAddRectHint="[WEU ADD-IN]"
RegionClearCell="Remove Cell From Region"
RegionClearCell="Take ",~region," and remove the cell at (",~X,",",~Y,")"
RegionClearCellHint="[WEU ADD-IN]"
RegionClearCellAtLoc="Remove Cell At Location From Region"
RegionClearCellAtLoc="Take ",~region," and remove the cell at",~location
RegionClearCellAtLocHint="[WEU ADD-IN]"
RegionClearRect="Remove Rect From Region"
RegionClearRect="Take ",~region," and remove ",~rect," from it"
RegionClearRectHint="[WEU ADD-IN]"
RemoveRegion="Remove Region"
RemoveRegion="Remove ",~Region
RemoveRegionHint="Use this to delete a region to save memory. The variable itself will remain without data [WEU ADD-IN]"
SetUnitAnimationByIndex="Set Unit Animation by Index"
SetUnitAnimationByIndex="Set current animation for ",~unit," to its ",~nr,"th animation"
SetUnitAnimationByIndexHint="Use the arrow buttons in the preview window to see all animations [WEU ADD-IN]"
ActionAnd="Do Action And Action"
ActionAnd="Do ",~Action," and ",~Action
ActionAndHint="Don't use Wait-Actions in one of the actions unless it is the last action of this trigger"
StartSpellEnhancer="Ability - Start the Spell Enhancer"
StartSpellEnhancer="Start the spell enhancer"
StartSpellEnhancerHint="This action initializes the spell enhancer which is not a good idea in melle type maps because it would lead to extreme lag."
ExecuteFunc="Execute Function"
ExecuteFunc="Execute ",~Function
ExecuteFuncHint="Use 'Conversion - Trigger Name To Function' to access the actions part of a trigger, the called function shouldn't have parameters [WEU ADD-IN]"
StopSpellFromCasting="Ability - Stop Ordered Spell From Casting"
StopSpellFromCasting="Stop all received spell orders for ",~Unit
StopSpellFromCastingHint="Can stop spells that have already been cast."
Transparenzverlauf="Unit - Transparency Run"
Transparenzverlauf="Let vertex color run from (",~Red,",",~Green,",",~Blue,") ",~Trans,"% transparency to (",~Red,",",~Green,",",~Blue,") ",~Trans,"% transparency for ",~unit," with ",~wait," wait time within steps"
TransparenzverlaufHint=
DialogMitShortcut="Dialog - Create Dialog With Shortcut"
DialogMitShortcut="Create dialog with shortcut for ",~Player," using ",~Lable," colored ",~Color," as lable, ",~Color," as Button Text Color and ",~Color," as Shortcut Color and add the following Buttons, Following Functions and Shortcuts: Button 1: ",~Text,",",~Function,",",~Cut," Button 2: ",~Text,",",~Function,",",~Cut," Button 3: ",~Text,",",~Function,",",~Cut," Button 4: ",~Text,",",~Function,",",~Cut," Button 5: ",~Text,",",~Function,",",~Cut," Button 6: ",~Text,",",~Function,",",~Cut," Show Dialog ",~Show
DialogMitShortcutHint="The second string for every button references the function to be called (must be above this trigger). Keep the empty strings to leave buttons out. Set Show false to add another 6 Buttons (Add Buttons With Shortcut)"
AddButtonsMitShortcut="Dialog - Add Buttons With Shortcut"
AddButtonsMitShortcut="Add buttons with shortcut to dialog of ",~Player," using ",~Color," as Button Text Color and ",~Color," as Shortcut Color and add the following Buttons, Following Functions and Shortcuts: Button 7: ",~Text,",",~Function,",",~Cut," Button 8: ",~Text,",",~Function,",",~Cut," Button 9: ",~Text,",",~Function,",",~Cut," Button 10: ",~Text,",",~Function,",",~Cut," Button 11: ",~Text,",",~Function,",",~Cut," Button 12: ",~Text,",",~Function,",",~Cut
AddButtonsMitShortcutHint="Adds additional Buttons to a dialog. A = 65. Again the called function must be above this trigger to be found"
DialogOhneShortcut="Dialog - Create Dialog Without Shortcut"
DialogOhneShortcut="Create dialog without shortcut for ",~Player," using ",~Lable," colored ",~Color," as lable and ",~Color," as Button Text Color and add the following Buttons and Following Functions: Button 1: ",~Text,",",~Function," Button 2: ",~Text,",",~Function," Button 3: ",~Text,",",~Function," Button 4: ",~Text,",",~Function," Button 5: ",~Text,",",~Function," Button 6: ",~Text,",",~Function," Show Dialog ",~Show
DialogOhneShortcutHint="The second string for every button references the function to be called (must be above this trigger). Keep the empty strings to leave buttons out. Set Show false to add another 6 Buttons (Add Buttons Without Shortcut)"
AddButtonsOhneShortcut="Dialog - Add Buttons Without Shortcut"
AddButtonsOhneShortcut="Add buttons without shortcuts to dialog of ",~Player," using ",~Color," as Button Text Color and add the following Buttons and Following Functions: Button 7: ",~Text,",",~Function," Button 8: ",~Text,",",~Function," Button 9: ",~Text,",",~Function," Button 10: ",~Text,",",~Function," Button 11: ",~Text,",",~Function," Button 12: ",~Text,",",~Function
AddButtonsOhneShortcutHint="Adds additional Buttons to a dialog. A = 65. Again the called function must be above this trigger to be found"
MultiboardSetup="Multiboard - Create with Progress Bar"
MultiboardSetup="Create a multiboard with ",~Columns," columns and ",~Rows," rows, titled ",~Title," and add a progress bar to row ",~Nr
MultiboardSetupHint="(BOARD) Requires multiboard files. The multiboard needs a minimum of 5 columns and should have a long title, otherwise the bar will overlap the screen edge."
MultiboardAddBar="Multiboard - Add Progress Bar"
MultiboardAddBar="Take ",~Multiboard," and add a progress bar in row ",~Nr
MultiboardAddBarHint="(BOARD) Requires multiboard files. The multiboard needs a minimum of 5 columns and should have a long title, otherwise the bar will overlap the screen edge."
MultiboardUpdate="Multiboard - Set Progress Bar Fill State"
MultiboardUpdate="Take ",~Multiboard," and set the fill state for the progress bar in row ",~Nr," to ",~Percentage," percent"
MultiboardUpdateHint="(BOARD) Requires multiboard files."
EndGame="End Game"
EndGame="End game and ",~Show/Skip," scores"
EndGameHint="No victory or defeat dialog [WEU ADD-IN]"
ChangeLevel="Load Next Map"
ChangeLevel="End game, load the map ",~Mapname," and ",~Show/Skip," scores"
ChangeLevelHint="No victory or defeat dialog and no 'Connect to Server Bug' [WEU ADD-IN]"
RestartGame="Restart Game"
RestartGame="Restart the current map and ",~Show/Skip," scores"
RestartGameHint="No victory or defeat dialog [WEU ADD-IN]"
GroupEnumUnitsOfType="Add Units of Type to Group"
GroupEnumUnitsOfType="Take group ",~group," and add all units of type ",~unitname," matching condition ",~Condition
GroupEnumUnitsOfTypeHint="Use the names in the 6th column in UnitUI.slk as unitnames [WEU ADD-IN]"
GroupEnumUnitsOfTypeCounted="Add Number Of Units Of Type"
GroupEnumUnitsOfTypeCounted="To ",~Group" add units of type ",~Type," matching ",~Condition,". Limit number of units to ",~Nr
GroupEnumUnitsOfTypeCountedHint="For the type use the unit names of the 6th column in UnitUI.slk [WEU ADD-IN]"
GroupEnumUnitsOfPlayer="Add Units Of Player"
GroupEnumUnitsOfPlayer="To ",~Group," add units of player ",~Player," matching ",~Condition
GroupEnumUnitsOfPlayerHint="[WEU ADD-IN]"
GroupEnumUnitsInRect="Add Units In Rect"
GroupEnumUnitsInRect="To ",~Group," add units in ",~Rect," matching ",~Condition
GroupEnumUnitsInRectHint="[WEU ADD-IN]"
GroupEnumUnitsInRectCounted="Add Number Of Units In Rect"
GroupEnumUnitsInRectCounted="To ",~Group," add units in ",~Rect," matching ",~Condition,". Limit number of units to ",~Nr
GroupEnumUnitsInRectCountedHint="[WEU ADD-IN]"
GroupEnumUnitsInRangeOfLoc="Add Units in Range of Point"
GroupEnumUnitsInRangeOfLoc="To ",~Group," add units near ",~Point," in a range of ",~Range," matching ",~Condition
GroupEnumUnitsInRangeOfLocHint="[WEU ADD-IN]"
GroupEnumUnitsInRangeOfLocCounted="Add Number of Units in Range of Point"
GroupEnumUnitsInRangeOfLocCounted="To ",~Group," add units near ",~Point," in a range of ",~Range," matching ",~Condition,". Limit number of units to ",~Nr
GroupEnumUnitsInRangeOfLocCountedHint="[WEU ADD-IN]"
GroupEnumUnitsSelected="Add Units Selected by Player"
GroupEnumUnitsSelected="To ",~Group," add units selected by ",~Player," matching ",~Condition
GroupEnumUnitsSelectedHint="[WEU ADD-IN]"
HidePortraits="Cinematic - Hide Portraits"
HidePortraits="Hide the unit portraits for all players of force ",~Force
HidePortraitsHint="You can't undo this action"
CamFollowUnit="Camera - Follow Unit"
CamFollowUnit="Force game camera of ",~Player," to follow ",~Unit," and enable arrow key control for this unit ",~Flag
CamFollowUnitHint="If this unit dies, the camera will be reset and arrow key control will be disabled"
SetFollowDetails="Camera - Set Follow Details"
SetFollowDetails="Set ",~Player,"'s camera ",~field," to ",~Value," when following the specified unit"
SetFollowDetailsHint=
SetFollowOptions="Camera - Set Follow Options"
SetFollowOptions="Use specified values for ",~Player,"'s camera ",~field," when following the unit ",~do
SetFollowOptionsHint="You can turn off the use of the unit's rotation for instance"
CamStopFollowing="Camera - Stop Following Unit"
CamStopFollowing="Stop camera from following a unit for ",~Player
CamStopFollowingHint="Deactivates 'Camera - Follow Unit' and will automatically disable Key Control as well if it's enabled"
DisableKeyboardScrolling="Camera - Disable Keyboard Scrolling for Player"
DisableKeyboardScrolling="Disable keyboard scrolling for ",~Player," and center camera at ",~Point," over ",~Nr," seconds
DisableKeyboardScrollingHint="Use this to make better use of the arrow key events"
EnableKeyboardScrolling="Camera - Enable Keyboard Scrolling for Player"
EnableKeyboardScrolling="Reenable keyboard scrolling for ",~Player
EnableKeyboardScrollingHint=
CreateDestructableZBJ="Destructable - Create Destructable in Specific Height"
CreateDestructableZBJ="Create destructable of type ",~Type," at Position (",~X,",",~Y,"), height ",~Z," using ",~Facing," facing, ",~Scale," scale and ",~Variation," variation"
CreateDestructableZBJHint="Variation numbers start with 0, saves destructable as last created destructable"
CreateDeadDestructableZBJ="Destructable - Create Dead Destructable in Specific Height"
CreateDeadDestructableZBJ="Create dead destructable of type ",~Type," at Position (",~X,",",~Y,"), height ",~Z," using ",~Facing," facing, ",~Scale," scale and ",~Variation," variation"
CreateDeadDestructableZBJHint="Variation numbers start with 0, saves destructable as last created destructable"
AddQuestEffect="Special Effect - Attach Quest Effect To Unit"
AddQuestEffect="Attach the quest special effect overheads the unit ",~Unit
AddQuestEffectHint="You can get the effect using 'Last Created Special Effect'"
AdvancedLeaderboard="Leaderboard - Create Advanced Leaderboard"
AdvancedLeaderboard="Create advanced leaderboard for force ",~Force," using title ",~Title," and use Player colors for text ",~Yes/No," and use Player names as lables ",~Yes/No,", use sorting method ",~Method," and sort items ",~SortType," and add the following items: Line 1 ",~Lable," ",~Value," Line 2 ",~Lable," ",~Value," Line 3 ",~Lable," ",~Value," Line 4 ",~Lable," ",~Value," Line 5 ",~Lable," ",~Value," Line 6 ",~Lable," ",~Value," Show the leaderboard ",~Yes/No
AdvancedLeaderboardHint="Keep the empty strings to leave the lines out. In order to add more lines to the board select false for 'Show Leaderboard' and use 'Add Items To Advanced Leaderboard'"
TimerOhneFenster="Timer - Create Advanced Timer Without Window"
TimerOhneFenster="Create advanced timer lasting ",~Time," that is a ",~Repeat," timer and Execute Action ",~Action," when it expires. Don't create a timer window"
TimerOhneFensterHint=
TimerMitFenster="Timer - Create Advanced Timer With Window"
TimerMitFenster="Create advanced timer with Title ",~Title," colored ",~Color," lasting ",~Time," that is a ",~Repeat," timer and Execute Action ",~Action," when it expires. Show timer window ",~Yes/No
TimerMitFensterHint="If the window is not shown you can still show it later. Use 'Get Dialog of Timer' to get the appropriate timer dialog"
ChangeManaRegeneration="Unit - Change Unit's Mana Regeneration"
ChangeManaRegeneration="For ",~Player," ",~ChangeType," mana regeneration for all units that use the ",~UpgradeSet," by ",~Value
ChangeManaRegenerationHint="(UPGR) Requires advanced upgrades. Ensure that you give the appropriate upgrade to the unit in the unit editor"
ChangeLifeRegeneration="Unit - Change Unit's Life Regeneration"
ChangeLifeRegeneration="For ",~Player," ",~ChangeType," life regeneration for all units that use the ",~UpgradeSet," by ",~Value
ChangeLifeRegenerationHint="(UPGR) Requires advanced upgrades. Ensure that you give the appropriate upgrade to the unit in the unit editor"
ChangeAttackRate="Unit - Change Unit's Attack Rate"
ChangeAttackRate="For ",~Player," ",~ChangeType," attack rate for all units that use the ",~UpgradeSet," by ",~Value
ChangeAttackRateHint="(UPGR) Requires advanced upgrades. Ensure that you give the appropriate upgrade to the unit in the unit editor"
ChangeAttackDices="Unit - Change Unit's Attack Dices"
ChangeAttackDices="For ",~Player," ",~ChangeType," number of attack dices for all units that use the ",~UpgradeSet," by ",~Value
ChangeAttackDicesHint="(UPGR) Requires advanced upgrades. Ensure that you give the appropriate upgrade to the unit in the unit editor"
ChangeMana="Unit - Change Unit's Mana Maximum"
ChangeMana="For ",~Unit," ",~ChangeType," mana maximum by ",~Value
ChangeManaHint="(ABIL) Requires advanced abilities."
ChangeLife="Unit - Change Unit's Life Maximum"
ChangeLife="For ",~Unit," ",~ChangeType," life maximum by ",~Value
ChangeLifeHint="(ABIL) Requires advanced abilities."
ChangeDamage="Unit - Change Unit's Damage"
ChangeDamage="For ",~Unit," ",~ChangeType," damage by ",~Value
ChangeDamageHint="(ABIL) Requires advanced abilities."
ChangeDefense="Unit - Change Unit's Defense"
ChangeDefense="For ",~Unit," ",~ChangeType," defense by ",~Value
ChangeDefenseHint="(ABIL) Requires advanced abilities."
ChangeSightRange="Unit - Change Unit's Sight Range"
ChangeSightRange="For ",~Unit," ",~ChangeType," sight range by ",~Value
ChangeSightRangeHint="(ABIL) Requires advanced abilities."
ChangeRange="Unit - Change Unit's Range"
ChangeRange="For ",~Player," ",~ChangeType," range for all units that use the ",~UpgradeSet," by ",~Value
ChangeRangeHint="(UPGR) Requires advanced upgrades. Ensure that you give the appropriate upgrade to the unit in the unit editor"
ChangeMoveRate="Unit - Change Unit's Move Rate"
ChangeMoveRate="For ",~Player," ",~ChangeType," move rate for all units that use the ",~UpgradeSet," by ",~Value
ChangeMoveRateHint="(UPGR) Requires advanced upgrades. Ensure that you give the appropriate upgrade to the unit in the unit editor. The maximum move speed is 522."
ChangeMissileTargets="Unit - Change Unit's Number of Targets"
ChangeMissileTargets="For ",~Player," ",~ChangeType," number of possible targets for all units that use the ",~UpgradeSet," by ",~Value
ChangeMissileTargetsHint="(UPGR) Requires advanced upgrades. Ensure that you give the appropriate upgrade to the unit in the unit editor. The unit must of course have a bouncing attack"
ForItemsOfType="Item - Pick Every Item of Type and Do Action"
ForItemsOfType="Pick every item of type ",~type," and execute the function ",~Function
ForItemsOfTypeHint="Use 'Get Picked Item' to refer to the item"
ForItemsOfClass="Item - Pick Every Item of Class and Do Action"
ForItemsOfClass="Pick every item of class ",~class," and execute the function ",~Function
ForItemsOfClassHint="Use 'Get Picked Item' to refer to the item"
CreateSpecialEffectCircle="Special Effect - Create Special Effect Circle"
CreateSpecialEffectCircle="Create a special effect circle around location ",~Loc," with radius ",~Rad," with ",~Nr," effects in total using model path ",~Path," and lasting ",~Seconds," seconds"
CreateSpecialEffectCircleHint=
TurnHeroDiedMsgOn="Game - Turn Hero Died Message On/Off"
TurnHeroDiedMsgOn="Turn hero died message for everyone off ",~Do
TurnHeroDiedMsgOnHint="True to turn it off"
TurnPlayerLeftMsgOn="Game - Turn Player Left Message On/Off"
TurnPlayerLeftMsgOn="Turn player left message for everyone on ",~Do
TurnPlayerLeftMsgOnHint="True to turn it on"
TurnRegrowingTreesOn="Environment - Turn Regrowing Trees On/Off"
TurnRegrowingTreesOn="Turn regrowing trees for everyone on ",~Do
TurnRegrowingTreesOnHint="True to turn it on"
AdvancedLeaderboardAddPlayers="Leaderboard - Add Items to Advanced Leaderboard"
AdvancedLeaderboardAddPlayers="Take ",~Leaderboard,", use Player Color for lables ",~Yes/No," and player names ",~Yes/No," and sort items by ",~Type," ",~Type," and add the following lines: Line 7 ",~Lable," ",~Value," Line 8 ",~Lable," ",~Value," Line 9 ",~Lable," ",~Value," Line 10 ",~Lable," ",~Value," Line 11 ",~Lable," ",~Value," Line 12 ",~Lable," ",~Value," Line 13 ",~Lable," ",~Value," Line 14 ",~Lable," ",~Value," Line 15 ",~Lable," ",~Value
AdvancedLeaderboardAddPlayersHint="Keep the Empty Strings if you don't want to add as many lines. Used to resume a not finished advanced leaderboard"
UpdateAdvancedLeaderboard="Leaderboard - Update Advanced Leaderboard"
UpdateAdvancedLeaderboard="Update ",~Board," sorting items by ",~SortType," ",~Type,". Set Value 1 to ",~Value,", Value 2 to ",~Value,", Value 3 to ",~Value,", Value 4 to ",~Value,", Value 5 to ",~Value,", Value 6 to ",~Value,", Value 7 to ",~Value,", Value 8 to ",~Value,", Value 9 to ",~Value,", Value 10 to ",~Value,", Value 11 to ",~Value,", Value 12 to ",~Value,", Value 13 to ",~Value,", Value 14 to ",~Value," and Value 15 to ",~Value
UpdateAdvancedLeaderboardHint=
StartCameraMovement="Camera - Start Smart Camera Movement"
StartCameraMovement="Start smart camera movement for all players moving from ",~Start," over ",~Waypoint," to ",~End," for ",~Nr," seconds"
StartCameraMovementHint="Used to start a fluid row of camera movement actions"
ContinueCameraMovement="Camera - Continue Smart Camera Movement"
ContinueCameraMovement="Continue smart camera movement continuing from ",~Start," over ",~Waypoint," to ",~End," for ",~Nr," seconds"
ContinueCameraMovementHint="Will continue the last camera movement from the last camera waypoint. Used to chain smart camera movements."
EndCameraMovement="Camera - End Smart Camera Movement"
EndCameraMovement="End the current smart camera movement continuing from ",~Waypoint," to ",~End," over ",~Nr," seconds"
EndCameraMovementHint="Used to end a chain of camera movement actions"
Voting="Multiplayer - Voting"
Voting="Ask all players: ",~Question,", provide ",~Time," seconds for decision, make the voting secret ",~Yes/No," and display result string ",~Result,". Provide the following choices and functions: Choice 1 ",~Choice," ",~Func,", Choice 2 ",~Choice," ",~Func,", Choice 3 ",~Choice," ",~Func,", Choice 4 ",~Choice," ",~Func,", Choice 5 ",~Choice," ",~Func,", Choice 6 ",~Choice," ",~Func,", Choice 7 ",~Choice," ",~Func,", Choice 8 ",~Choice," ",~Func,", Choice 9 ",~Choice," ",~Func,", Choice 10 ",~Choice," ",~Func,", Choice 11 ",~Choice," ",~Func," and Choice 12 ",~Choice," ",~Func
VotingHint="The @ represents the choice with the most votes. If the voting is not secret, the players get a message displayed who voted for what. The functions to be called must be above this trigger. Players must type in the appropriate number to vote."
SaveHeroData="Multiplayer - Save Hero"
SaveHeroData="Save ",~Hero," for ",~Player
SaveHeroDataHint="Displays a password which can be used to restore the hero"
RestoreHeroData="Multiplayer - Restore Hero At Stored Location"
RestoreHeroData="Restore a hero with the password ",~Code," for ",~Player," at the saved location"
RestoreHeroDataHint="Let the players type in the password to restore their heros."
RestoreHeroAtLoc="Multiplayer - Restore Hero At Location"
RestoreHeroAtLoc="Restore a hero with the password ",~Code," for ",~Player," at ",~Location
RestoreHeroAtLocHint="Let the players type in the password to restore their heros."
DestroyMovingSpecialEffect="Special Effect - Destroy Moving Special Effect"
DestroyMovingSpecialEffect="Destroy the moving special effect with the number ",~Nr
DestroyMovingSpecialEffectHint="Use 'Get Last Created Moving Special Effect Number' to get a moving special effect"
DestroyGroup="Destroy Unit Group"
DestroyGroup="Destroy unit group ",~Group
DestroyGroupHint="Destroy unit groups you don't need any mor to save memory [WEU ADD-IN]"
CinematicFilterGenericForPlayer="Cinematic - Advanced Filter for Player"
CinematicFilterGenericForPlayer="Apply a filter for ",~Player," over ",~Duration," seconds using ",~Blending Method," on texture ",~Texture,", starting with color (",~Red,"%, ",~Green,"%, ",~Blue,"%) and ",~Transparency,"% transparency and ending with color (",~Red,"%, ",~Green,"%, ",~Blue,"%) and ",~Transparency,"% transparency"
CinematicFilterGenericForPlayerHint="The color values are (Red, Green, Blue). A 100% transparent color is completely invisible."
CreateMovingSFX="Special Effect - Create Moving Special Effect"
CreateMovingSFX="Create a moving special effect of type ",~Type," using ",~Mdl," as model from ",~Loc," to ",~Loc," having a number of ",~Nr," effects on the way and waiting ",~Real," seconds in between. Loop the special effect ",~Do
CreateMovingSFXHint="Big models may lag. Preferably use missile models such as 'Abilities\Weapons\FrostWyrmMissile\FrostWyrmMissile.mdl'"
AttachMovingSFXToUnit="Special Effect - Attach Moving Special Effect to Unit"
AttachMovingSFXToUnit="Create a moving special effect circle using ",~Mdl," as model on ",~Unit," with a radius of ",~Rad," having a number of ",~Nr," effects on the way and waiting ",~Real," seconds in between. Direction: ",~Dir
AttachMovingSFXToUnitHint="Big models may lag. Preferably use missile models such as 'Abilities\Weapons\FrostWyrmMissile\FrostWyrmMissile.mdl'"
CreateSFXRain="Special Effect - Create Special Effect Rain"
CreateSFXRain="Create a special effect rain using ",~Mdl," as model and ",~Loc," as center, ",~Real," as radius and let it have a total number of ",~Nr," effects"
CreateSFXRainHint=
AttachSFXRainToUnit="Special Effect - Attach Special Effect Rain to Unit"
AttachSFXRainToUnit="Create a special effect rain using ",~Mdl," as model on ",~Unit," and let it have a radius of ",~Rad," and a total number of ",~Nr," effects"
AttachSFXRainToUnitHint=
Gewitter="Environment - Create Thunderstorm"
Gewitter="Create a thunderstorm having a total number of ",~Nr," bolts at ",~Loc
GewitterHint=
MorphUnit="Unit - Morph Unit"
MorphUnit="Morph ",~Unit," to the unit type specified in the ",~Spell," spell"
MorphUnitHint="(ABIL) Requires advanced abilities. Only use 'Advanced - Morph' spells or custom spells based off of them (found under creep spells)"
MakeUnitBurn="Special Effect - Make Unit Burn"
MakeUnitBurn="Make ",~Unit," burn using the burning style ",~Style," for ",~Real," seconds"
MakeUnitBurnHint=
MakeUnitSlide="Unit - Make Unit Slide"
MakeUnitSlide="Slide ",~Unit," using ",~Angle," degrees angle with a starting velocity of ",~Velocity," and kill destructables in the way ",~Do
MakeUnitSlideHint=
Erdbeben="Environment - Create Earthquake"
Erdbeben="Create a earthquake at ",~Loc," for ",~Time," seconds"
ErdbebenHint=
InitDebugTriggers="Start Debug Mode"
InitDebugTriggers="Start debug mode"
InitDebugTriggersHint="See the 'Useful Stuff Section' for information on the debug mode"
MatrixStyle="Game - Turn Matrix Style On/Off"
MatrixStyle="Turn matrix style ",~On
MatrixStyleHint=
SFXWave="Special Effect - Create Special Effect Wave"
SFXWave="Create a special effect wave using ",~Mdl," as model starting from ",~Loc,", facing ",~Angle," over a distance of ",~Distance
SFXWaveHint="Use effects such as fire or poison clouds"
AttachSFXWaveToUnit="Special Effect - Attach Special Effect Wave to Unit"
AttachSFXWaveToUnit="Create a special effect wave using ",~Mdl," on ",~Unit," over a distance of ",~Distance
AttachSFXWaveToUnitHint=
ReplaceResizeDoodad="Destructable Doodad - Replace/Resize Doodad"
ReplaceResizeDoodad="Replace ",~Doodad," by a doodad of the same type at hight ",~Height," facing ",~Deg," with ",~Scale," scale and variation ",~Variation
ReplaceResizeDoodadHint="Use 'Get Random Doodad Variation' and 'Get Random Doodad Rotation' if you like"
AddCustomSpellToEnhancer="Ability - Add Spell to Spell Enhancer"
AddCustomSpellToEnhancer="Add a spell with order string ",~Order," that would be cast by units of type ",~Type," to the enhancer costing ",~Mana," mana and having a range of ",~Range," If a unit of that type casts the spell the function ",~Func," will be executed"
AddCustomSpellToEnhancerHint="Handles the Out-Of-Range-Problem and similar problems with custom spells. Use 'Convert Trigger Name to Function' to be able to execute a trigger when the spell is cast."
CreateMissileEffect="Special Effect - Create Missile Effect"
CreateMissileEffect="Create a missile effect form ",~Loc," to ",~Loc," using the model ",~Mdl," and ",~Scale," scale. Use a flying target ",~True
CreateMissileEffectHint="Some missiles don't work with flying targets and some with ground targets. Test out which one you need."
MultiboardSetItemsValueColor="All Items - Set Item Lable Color"
MultiboardSetItemsValueColor="Set item lable color for all items of multiboard ",~board," to ",~Value," % Red, ",~Value," % Green, ",~Value," % Blue and ",~Value," alpha channel"
MultiboardSetItemsValueColorHint="Changes the color of all items. The color is specified as RGBA (Red, Green, Blue, Alpha) [WEU ADD-IN]"
MultiboardSetItemValueColor="Set Item Lable Color"
MultiboardSetItemValueColor="Set item lable color for multiboard item ",~Item," to ",~Value," % Red, ",~Value," % Green, ",~Value," % Blue and ",~Value," alpha channel"
MultiboardSetItemValueColorHint="The color is specified as RGBA (Red, Green, Blue, Alpha) [WEU ADD-IN]"
InitCommander="Start Commander"
InitCommander="Start commander melee system"
InitCommanderHint="(AI) Requires the AMAI scripts. Allows to command allied ai players."
InitAdvancedTriggers="Initialize Advanced Triggers"
InitAdvancedTriggers="Initialize advanced triggers"
InitAdvancedTriggersHint="All actions in the 'Advanced - ' category require this action on map initialization"
WaitForPlayerEvent="Wait - Wait for Player Event"
WaitForPlayerEvent="Wait for event: ",~Player," ",~Event,". Check every ",~sec," seconds."
WaitForPlayerEventHint=
WaitForGameEvent="Wait - Wait for Game Event"
WaitForGameEvent="Wait for event: ",~Event,". Check every ",~sec," seconds."
WaitForGameEventHint=
WaitForPlayerUnitEvent="Wait - Wait for Player Owned Unit Event"
WaitForPlayerUnitEvent="Wait for event: A unit owned by ",~Player," ",~Event,". Check every ",~sec," seconds."
WaitForPlayerUnitEventHint=
WaitForSpecificUnitEvent="Wait - Wait for Specific Unit Event"
WaitForSpecificUnitEvent="Wait for event: ",~Unit," ",~Event,". Check every ",~sec," seconds. "
WaitForSpecificUnitEventHint=
WaitForGenericUnitEvent="Wait - Wait for Generic Unit Event"
WaitForGenericUnitEvent="Wait for event: Any unit ",~Event,". Check every ",~sec," seconds. "
WaitForGenericUnitEventHint=
WaitForDeathEvent="Wait - Wait for Destructable Death Event"
WaitForDeathEvent="Wait for event: ",~Destructable," dies. Check every ",~sec," seconds."
WaitForDeathEventHint=
WaitForDeathInRegionEvent="Wait - Wait for Destructable Death in Rect Event"
WaitForDeathInRegionEvent="Wait for event: A destructable dies in ",~Rect,". Check every ",~sec," seconds."
WaitForDeathInRegionEventHint=
WaitForDialogEvent="Wait - Wait for Dialog Button Event"
WaitForDialogEvent="Wait for event: Dialog button is clicked in dialog ",~dialog,". Check every ",~sec," seconds."
WaitForDialogEventHint=
WaitForTimeOfDayEvent="Wait - Wait for Time of Day Event"
WaitForTimeOfDayEvent="Wait for event: Time of day becomes ",~Comp," ",~Value,". Check every ",~sec," seconds."
WaitForTimeOfDayEventHint=
WaitForChatEvent="Wait - Wait for Player Chat Event"
WaitForChatEvent="Wait for event: ",~Player," types a message containig ",~Text," as a ",~Comp,". Check every ",~sec," seconds."
WaitForChatEventHint=
WaitForSelectionEvent="Wait - Wait for Selection Event"
WaitForSelectionEvent="Wait for event: ",~Player," ",~Seloption," a unit. Check every ",~sec," seconds."
WaitForSelectionEventHint=
WaitForPlayerstateEvent="Wait - Wait for Player State Event"
WaitForPlayerstateEvent="Wait for event: ",~Player,"'s ",~State," becomes ",~Comp," ",~Value,". Check every ",~sec," seconds."
WaitForPlayerstateEventHint=
WaitForGamestateEvent="Wait - Wait for Game State Event"
WaitForGamestateEvent="Wait for event: ",~Gamestate," becomes ",~Operation," ",~Value,". Check every ",~sec," seconds."
WaitForGamestateEventHint=
WaitForUnitstateEvent="Wait - Wait for Unit State Event"
WaitForUnitstateEvent="Wait for event: ",~Unit,"'s "~UnitState," ",~Operator," ",~Real,". Check every ",~sec," seconds."
WaitForUnitstateEventHint=
WaitForAllianceEvent="Wait - Wait for Alliance Change Event"
WaitForAllianceEvent="Wait for event: ",~Player," changes his alliancestate ",~state,". Check every ",~sec," seconds."
WaitForAllianceEventHint=
WaitForTimerEventSingle="Wait - Wait for Elapsed Game Time"
WaitForTimerEventSingle="Wait for event: Elapsed game time becomes equal to ",~Value,". Check every ",~sec," seconds."
WaitForTimerEventSingleHint=
WaitForTimerExpireEvent="Wait - Wait for Timer Expires Event"
WaitForTimerExpireEvent="Wait for event: Timer ",~Timer," expires. Check every ",~sec," seconds."
WaitForTimerExpireEventHint=
WaitForConditionalPlayerUnitEvent="Wait - Wait for Player Owned Unit Event (Conditional)"
WaitForConditionalPlayerUnitEvent="Wait for event: A unit owned by ",~Player," ",~Event," matching ",~Condition," . Check every ",~sec," seconds."
WaitForConditionalPlayerUnitEventHint=
WaitForEnterRectEvent="Wait - Wait for Unit Enters Rect Event"
WaitForEnterRectEvent="Wait for event: A unit enters rect ",~Rect,". Check every ",~sec," seconds."
WaitForEnterRectEventHint=
WaitForLeaveRectEvent="Wait - Wait for Unit Leaves Rect Event"
WaitForLeaveRectEvent="Wait for event: A unit leaves rect ",~Rect,". Check every ",~sec," seconds."
WaitForLeaveRectEventHint=
WaitForRangeEvent="Wait - Wait for Unit Comes Into Range Event"
WaitForRangeEvent="Wait for event: A unit comes into a range of ",~Range," of ",~Unit,". Check every ",~sec," seconds."
WaitForRangeEventHint=
WaitForLifeEvent="Wait - Wait for Unit Life Event"
WaitForLifeEvent="Wait for event: Life of ",~Unit," becomes ",~Comp," ",~Value,". Check every ",~sec," seconds."
WaitForLifeEventHint=
WaitForManaEvent="Wait - Wait for Unit Mana Event"
WaitForManaEvent="Wait for event: Mana of ",~Unit," becomes ",~Comp," ",~Value,". Check every ",~sec," seconds."
WaitForManaEventHint=
WaitForEnterRecEvent="Wait - Wait for Unit Enters Rectangle Event (Conditional)"
WaitForEnterRecEvent="Wait for event: A unit enters ",~Rectangle," matching ",~Condition,". Check every ",~sec," seconds."
WaitForEnterRecEventHint=
WaitForLeaveRecEvent="Wait - Wait for Unit Leaves Rectangle Event (Conditional)"
WaitForLeaveRecEvent="Wait for event: A unit leaves ",~Rectangle," matching ",~Condition,". Check every ",~sec," seconds."
WaitForLeaveRecEventHint=
WaitForAnyOrderEvent="Wait - Wait for Any Order Event"
WaitForAnyOrderEvent="Wait for event: Any unit is issued any order. Check every ",~sec," seconds."
WaitForAnyOrderEventHint=
WaitForMoveSlotEvent="Wait - Wait for Item is Moved to Inventory Slot Event"
WaitForMoveSlotEvent="Wait for event: Any unit moves any item to inventory slot ",~Nr,". Check every ",~sec," seconds."
WaitForMoveSlotEventHint="Slot numbers range from 1 to 6"
WaitForAnyDamageEvent="Wait - Wait for Any Unit Takes Damage Event"
WaitForAnyDamageEvent="Wait for event: Any unit takes damage. Check every ",~sec," seconds."
WaitForAnyDamageEventHint=
WaitForSpellTargetEvent="Wait - Wait for Unit is Targeted by a Spell Event"
WaitForSpellTargetEvent="Wait for event: A unit is targeted by a spell. Check every ",~sec," seconds."
WaitForSpellTargetEventHint=
SetHeroSaveLoadOptions="Multiplayer - Customize Hero Save and Load System"
SetHeroSaveLoadOptions="Customize the hero save system to ",~save," ",~what
SetHeroSaveLoadOptionsHint="Change these values only on map initialization but not in game"
SetCinematicSkipClearTextState="Cinematic - Change Escape Behaviour"
SetCinematicSkipClearTextState="Set the escape button to clear all text messages ",~Do
SetCinematicSkipClearTextStateHint="Escape clears text messages by default"
MakeUnitUnselectable="Unit - Make Unit Unselectable"
MakeUnitUnselectable="Make ",~Unit," unselectable and untargetable"
MakeUnitUnselectableHint="Basicly adds the 'Aloc' ability to the unit"
WaitForTrackableTrackEvent="Wait - Wait Trackable Track Event"
WaitForTrackableTrackEvent="Wait for event: Cursor is moved over ",~Trackable,". Check every ",~sec," seconds."
WaitForTrackableTrackEventHint=
WaitForTrackableHitEvent="Wait - Wait Trackable Hit Event"
WaitForTrackableHitEvent="Wait for event: ",~Trackable," is clicked. Check every ",~sec," seconds."
WaitForTrackableHitEventHint=
TriggerAddAction="Add Action To Trigger"
TriggerAddAction="Take ",~Trigger," and add this action: ",~Action
TriggerAddActionHint="[WEU ADD-IN]"
TriggerAddCondition="Add Condition To Trigger"
TriggerAddCondition="Take ",~Trigger," and add this condition: ",~Condition
TriggerAddConditionHint="[WEU ADD-IN]"
ChoiceDialog="Cinematic - Multiple Choice Dialog"
ChoiceDialog="Show multiple choice dialog for ",~Player," using ",~name," as speaker name providing the 5 choices ",~choice1,", ",~choice2,", ",~choice3,", ",~choice4,", ",~choice5," and using ",~unit," as speaker and provide ",~seconds," seconds time to decide and show chosen line for ",~seconds," seconds"
ChoiceDialogHint="(SOUND) Requires the sound files. Use empty strings in order to have less choices. Requires the sound files imported and Cinematic and Letterbox Mode enabled and User Control disabled"
AbbrechbareTransmission="Cinematic - Abortable Transmission"
AbbrechbareTransmission="Show abortable transmission for player ",~player," using ",~name," as speaker name and ",~unit," as speaker for ",~seconds," seconds using text: ",~text
AbbrechbareTransmissionHint="(SOUND) Requires the sound files. Can be aborted by pressing Escape. Requires the sound files imported and Cinematic and Letterbox Mode enabled and User Control disabled"
UnitIgnoreAlarm="Ignore Alarm"
UnitIgnoreAlarm="Make unit ",~Unit," ignore alarms ",~Flag
UnitIgnoreAlarmHint="[WEU ADD-IN]"
DisableRestartMission="Disable Restart Mission"
DisableRestartMission="Disable restart mission ",~Flag
DisableRestartMissionHint="[WEU ADD-IN]"
DoNotSaveReplay="Do Not Save Replay"
DoNotSaveReplay="Do not save replay"
DoNotSaveReplayHint="[WEU ADD-IN]"
DialogAddQuitButton="Create Quit Button"
DialogAddQuitButton="Create a quit button for dialog ",~Dialog," (",~Show," score screen) labeled ",~Text," and use the shortcut ",~ASCII
DialogAddQuitButtonHint="Use ASCII numbers to add a shortcut [WEU ADD-IN]"
FlushStoredInteger="Flush Stored Integer"
FlushStoredInteger="Flush the Integer stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredIntegerHint="[WEU ADD-IN]"
FlushStoredBoolean="Flush Stored Boolean"
FlushStoredBoolean="Flush the Boolean stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredBooleanHint="[WEU ADD-IN]"
FlushStoredReal="Flush Stored Real"
FlushStoredReal="Flush the Real stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredRealHint="[WEU ADD-IN]"
FlushStoredUnit="Flush Stored Unit"
FlushStoredUnit="Flush the Unit stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredUnitHint="[WEU ADD-IN]"
FlushStoredString="Flush Stored String"
FlushStoredString="Flush the String stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredStringHint="[WEU ADD-IN]"
InitTownPortalSystem="Town Portal - Start Town Portal System"
InitTownPortalSystem="Start town portal system where ",~Rect," is the town and ",~Point," is the portal target point (town center)"
InitTownPortalSystemHint="(ITEMS) (ABIL) Requries advanced items and abilities."
AddHeroGlowNew="Unit - Add Hero Glow"
AddHeroGlowNew="Add hero glow to ",~Unit
AddHeroGlowNewHint="(GLOW) (ABIL) Requires the Hero Glow Model and advanced abilities imported. Repeat this action when the unit is morphed."
RemoveHeroGlow="Unit - Remove Hero Glow"
RemoveHeroGlow="Remove added hero glow from ",~Unit
RemoveHeroGlowHint="(GLOW) (ABIL) Requires the Hero Glow Model and advanced abilities imported. This will remove the glow you added with 'Add Hero Glow' before"
ErrorMsg="Game - Display Error Message"
ErrorMsg="For ",~Player," display ",~String," as error message"
ErrorMsgHint="Colors the string yellow"
CinematicModeBJAdvanced="Cinematic - Cinematic Mode (No Desync)"
CinematicModeBJAdvanced="Turn cinematic mode ",~On/Off," for ",~Player," over ",~Time," seconds"
CinematicModeBJAdvancedHint="This will avoid the desync you would normally get when applying Cinematic Mode for only one player"
SmartCameraPanND="Cinematic - Pan Camera as Necessary (No Desync)"
SmartCameraPanND="Pan camera as necessary for ",~Player," to ",~Point," over ",~Time," seconds"
SmartCameraPanNDHint="If the camera is very far from the destination, it will snap instead of pan. If the camera is very close to the destination, the pan request will be skipped."
GoldText="Floating Text - Simulate Gold Text"
GoldText="Simulate receipt of ",~Amount," gold at point (",~X,",",~Y,")"
GoldTextHint=
MissText="Floating Text - Simulate Miss Text"
MissText="Simulate miss text at point (",~X,",",~Y,")"
MissTextHint=
AutomaticMemoryCleanup="Group - Destroy Next Created Group"
AutomaticMemoryCleanup="Turn destruction of leaking unit groups ",~Do," for the next created group"
AutomaticMemoryCleanupHint="Used to avoid memory leaks due to not destroyed groups when using ForGroup and other similar functions."
FadingText="Floating Text - Show Fading Text"
FadingText="Show ",~Text," with color (",~R,",",~G,",",~B,") at point (",~X,",",~Y,")"
FadingTextHint="Set the Red, Green and Blue color percentage to the same color"
PlaySoundForPlayer="Sound - Play Sound For Player"
PlaySoundForPlayer="Only for ",~Player," play ",~Sound
PlaySoundForPlayerHint=
RestrictTPToHeros="Town Portal - Restrict Town Portals to Heros"
RestrictTPToHeros="Make the town portal system only available for heros"
RestrictTPToHerosHint="(ITEMS) (ABIL) Requries advanced items and abilities."
RestrictTPToType="Town Portal - Restrict Town Portals to Unit-Type"
RestrictTPToType="Restrict the town portal system to the unit-type ",~Type
RestrictTPToTypeHint="(ITEMS) (ABIL) Requries advanced items and abilities."
RestrictTPToGroup="Town Portal - Restrict Town Portals to Unit Group"
RestrictTPToGroup="Restrict the town portal system to the unit group ",~G
RestrictTPToGroupHint="(ITEMS) (ABIL) Requries advanced items and abilities."
TPRemoveRestrictions="Town Portal - Remove Town Portal Restrictions"
TPRemoveRestrictions="Remove all restrictions for the town portal system"
TPRemoveRestrictionsHint="(ITEMS) (ABIL) Requries advanced items and abilities."
SetCustomStringValue="Unit - Set Custom String Value"
SetCustomStringValue="Set the custom string value for ",~Unit," to ",~Value
SetCustomStringValueHint="Works like the custom unit value"
SetCustomRealValue="Unit - Set Custom Real Value"
SetCustomRealValue="Set the custom real value for ",~Unit," to ",~Value
SetCustomRealValueHint="Works like the custom unit value"
SetCustomBooleanValue="Unit - Set Custom Boolean Value"
SetCustomBooleanValue="Set the custom boolean value for ",~Unit," to ",~Value
SetCustomBooleanValueHint="Works like the custom unit value"
WaitForEnterSimpleRecEvent="Wait - Wait for Unit Enters Rectangle Event"
WaitForEnterSimpleRecEvent="Wait for event: A unit enters ",~Rectangle,". Check every ",~sec," seconds."
WaitForEnterSimpleRecEventHint=
WaitForLeaveSimpleRecEvent="Wait - Wait for Unit Leaves Rectangle Event"
WaitForLeaveSimpleRecEvent="Wait for event: A unit leaves ",~Rectangle,". Check every ",~sec," seconds."
WaitForLeaveSimpleRecEventHint=
WaitForSelectSpecificHeroEvent="Wait - Wait for Hero Selection Event (Specific)"
WaitForSelectSpecificHeroEvent="Wait for the event: One of the offered heros is selected. Check every ",~sec," seconds."
WaitForSelectSpecificHeroEventHint="(SEL) Requires Hero Selection files. This event fires when one of the heros created with the action 'Create Selectable Hero' uses its select skill"
WaitForSelectRandomHeroEvent="Wait - Wait for Hero Selection Event (Random)"
WaitForSelectRandomHeroEvent="Wait for the event: A player clicks the random hero button. Check every ",~sec," seconds."
WaitForSelectRandomHeroEventHint="(SEL) Requires Hero Selection files. This event fires when one of the heros created with the action 'Create Selectable Hero' uses its random hero skill"
WaitForTownPortalEvent="Wait - Wait for Town Portal Event"
WaitForTownPortalEvent="Wait for the event: A unit ",~Action," a town portal. Check every ",~sec," seconds."
WaitForTownPortalEventHint="(ITEMS) (ABIL) Requries advanced items and abilities."
CreateSelectableHero="Hero - Create Selectable Hero"
CreateSelectableHero="Create a hero of Type ",~type," at ",~Location," facing ",~Facing," for the neutral player that can be selected by the active players"
CreateSelectableHeroHint="(SEL) Requires Hero Selection files. This will let the player that clicks this hero see its skills and stats and decide which hero he wants to choose"
MakeHeroSelectable="Hero - Make Hero Selectable"
MakeHeroSelectable="Make ",~Hero," selectable for the active players"
MakeHeroSelectableHint="(SEL) Requires Hero Selection files. This will let the player that clicks this hero see its skills and stats and decide which hero he wants to choose"
MakeBridgeWalkable="Destructable Doodad - Make Bridge Walkable"
MakeBridgeWalkable="Make the bridge walkable that lies between ",~Rect," and ",~Rect
MakeBridgeWalkableHint="These two rects should overlap the edge of the bridge so that you may enter it from besides the bridge"
AddSpecialEffectLocWithTimer="Special Effect - Create Timed Effect at Location"
AddSpecialEffectLocWithTimer="Create at ",~Location," the ",~Path," effect lasting ",~Duration," seconds"
AddSpecialEffectLocWithTimerHint=
AddSpecialEffectTargetUnitWithTimer="Special Effect - Create Timed Effect on Unit"
AddSpecialEffectTargetUnitWithTimer="Create at ",~point," of ",~Unit," the ",~Path," effect lasting ",~Duration," seconds"
AddSpecialEffectTargetUnitWithTimerHint=
TargetHeal="Unit - Heal Unit"
TargetHeal="Heal ",~Unit," for ",~Nr," hitpoints"
TargetHealHint="Includes the heal special effect"
AOEHealSimple="Unit - Heal Units in Range"
AOEHealSimple="Heal ",~Unit," for ",~Nr," hitpoints and all other units in a range of ",~Range,". Include enemy units ",~Do
AOEHealSimpleHint=
BuildOff="Rect - Make Rect Unbuildable / Buildable"
BuildOff="Make ",~Rect," ",~Option
BuildOffHint=
RemoveBasicAbility="Unit - Remove Basic Ability"
RemoveBasicAbility="Remove the ",~Ability," ability from ",~Unit
RemoveBasicAbilityHint="These basic abilities can't be added again afterwards"
UnitDropAllItemsOfType="Hero - Drop / Remove All Items Of Type"
UnitDropAllItemsOfType=~Option," all items of Type ",~Type," from the inventory of ",~Unit
UnitDropAllItemsOfTypeHint=
ReplaceUnitAdvanced="Unit - Replace Unit"
ReplaceUnitAdvanced="Replace ",~Unit," by a new unit of type ",~Type," using ",~Property Usage," life and mana"
ReplaceUnitAdvancedHint="This will also carry over the unit's custom value, hero stats, flying height and prop window angle"
CancelAIOrders="AI - Cancel AI Orders"
CancelAIOrders="Cancel ",~Orders," of ",~Player
CancelAIOrdersHint="(AI) Requires the AMAI scripts"
AIBuildOrders="AI - Issue Build Order"
AIBuildOrders="Make ",~Player," build ",~Nr," ",~Units
AIBuildOrdersHint="(AI) Requires the AMAI scripts"
RestrictAI="AI - Restrict Player"
RestrictAI="Don't allow ",~Player," to attack ",~Units
RestrictAIHint="(AI) Requires the AMAI scripts"
SetAIMode="AI - Switch AI Mode"
SetAIMode="Switch AI Mode for ",~Player," to allow/disallow ",~What
SetAIModeHint="(AI) Requires the AMAI scripts"
AIAttackSelected="AI - Attack / Guard Selected Unit"
AIAttackSelected="Order ",~Player," to attack/guard the current Selection of ",~Player
AIAttackSelectedHint="(AI) Requires the AMAI scripts. If the target units are allied the player will try to guard them"
AIAttackPoint="AI - Attack / Guard Point"
AIAttackPoint="Order ",~Player," to attack/guard ",~Location
AIAttackPointHint="(AI) Requires the AMAI scripts. If the target point is the base of an ally the palyer will attempt to guard that place"
AIAttackPlayer="AI - Attack / Guard Player"
AIAttackPlayer="Order ",~Player," to attack/guard ",~Player
AIAttackPlayerHint="(AI) Requires the AMAI scripts. If the target palyer is an ally the player will try to guard him"
AIChangeStrategy="AI - Change Strategy"
AIChangeStrategy="Order ",~Player," to use strategy nr ",~Nr
AIChangeStrategyHint="(AI) Requires the AMAI scripts. The maximum number of strategies ranges between 7 and 9 for the four races"
[TriggerCallStrings]
IsDestructableAliveBJ="Destructible Is Alive"
IsDestructableAliveBJ=~Destructible," is alive"
IsDestructableAliveBJHint=
IsDestructableDeadBJ="Destructible Is Dead"
IsDestructableDeadBJ=~Destructible," is dead"
IsDestructableDeadBJHint=
IsDestructableInvulnerableBJ="Destructible Is Invulnerable"
IsDestructableInvulnerableBJ=~Destructible," is invulnerable"
IsDestructableInvulnerableBJHint=
IsPointBlightedBJ="Point Is Blighted"
IsPointBlightedBJ=~Point," is blighted"
IsPointBlightedBJHint=
IsMapFlagSet="Map Flag Set"
IsMapFlagSet=~Map Flag," is set"
IsMapFlagSetHint=
IsCustomCampaignButtonVisibile="Custom Campaign Button Is Visible"
IsCustomCampaignButtonVisibile="Custom campaign button ",~Number," is visible"
IsCustomCampaignButtonVisibileHint=
GetCreepCampFilterState="Creep Camp Display Is On"
GetCreepCampFilterState="Creep camp minimap display is turned on"
GetCreepCampFilterStateHint=
SaveGameExists="Saved-Game Exists"
SaveGameExists="The ",~Filename," saved-game exists"
SaveGameExistsHint=
GetStoredBooleanBJ="Load Boolean Value"
GetStoredBooleanBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredBooleanBJHint="If the label is not found, this function returns False."
HaveStoredValue="Cache Value Exists"
HaveStoredValue=~Label," is stored as a ",~Type," of ",~Category," in ",~Game Cache
HaveStoredValueHint=
UnitHasItem="Hero Has Item"
UnitHasItem=~Hero," has ",~Item
UnitHasItemHint=
UnitHasItemOfTypeBJ="Hero Has Item Of Type"
UnitHasItemOfTypeBJ=~Hero," has an item of type ",~Item-Type
UnitHasItemOfTypeBJHint=
IsSuspendedXP="Experience Is Disabled For Hero"
IsSuspendedXP="Experience is disabled for ",~Hero
IsSuspendedXPHint="Use the 'Hero - Enable/Disable Experience' action to disable a Hero's experience."
CheckItemStatus="Item Status Check"
CheckItemStatus=~Item," is ",~Status
CheckItemStatusHint=
CheckItemcodeStatus="Item-Type Status Check"
CheckItemcodeStatus=~Item-Type," is ",~Status
CheckItemcodeStatusHint=
IsItemHiddenBJ="Item Is Hidden"
IsItemHiddenBJ=~Item," is hidden"
IsItemHiddenBJHint="Items held by units are considered hidden."
IsItemOwned="Item Is Owned"
IsItemOwned=~Item," is owned"
IsItemOwnedHint="Any item in a unit's inventory is considered owned, even if the owner is dead."
RectContainsItem="Item In Rect"
RectContainsItem=~Item," is in ",~Rect
RectContainsItemHint="An owned item is not considered to be in any rects."
IsItemInvulnerable="Item Is Invulnerable"
IsItemInvulnerable=~Item," is invulnerable"
IsItemInvulnerableHint=
LeaderboardHasPlayerItemBJ="Leaderboard Contains Player"
LeaderboardHasPlayerItemBJ=~Leaderboard," contains ",~Player
LeaderboardHasPlayerItemBJHint=
IsMultiboardDisplayed="Multiboard Is Showing"
IsMultiboardDisplayed=~Multiboard," is showing"
IsMultiboardDisplayedHint=
IsMultiboardMinimized="Multiboard Is Minimized"
IsMultiboardMinimized=~Multiboard," is minimized"
IsMultiboardMinimizedHint=
WaygateIsActiveBJ="Way Gate Is Enabled"
WaygateIsActiveBJ=~Way Gate," is enabled"
WaygateIsActiveBJHint=
IsPlayerFlagSetBJ="Player Flag Is On"
IsPlayerFlagSetBJ=~Player Flag," is on for ",~Player
IsPlayerFlagSetBJHint=
IsPlayerAlly="Player Is An Ally Of Player"
IsPlayerAlly=~Player," is an ally of ",~Player
IsPlayerAllyHint=
IsPlayerEnemy="Player Is An Enemy Of Player"
IsPlayerEnemy=~Player," is an enemy of ",~Player
IsPlayerEnemyHint=
GetPlayerAlliance="Player Alliance Towards Player"
GetPlayerAlliance=~Player," is giving ",~Player," ",~Alliance Type
GetPlayerAllianceHint=
IsPlayerInForce="Player In Player Group"
IsPlayerInForce=~Player," is in ",~Player Group
IsPlayerInForceHint=
IsQuestItemCompleted="Quest Requirement Is Completed"
IsQuestItemCompleted=~Quest Requirement," is completed"
IsQuestItemCompletedHint=
IsQuestEnabled="Quest Is Enabled"
IsQuestEnabled=~Quest," is enabled"
IsQuestEnabledHint=
IsQuestCompleted="Quest Is Completed"
IsQuestCompleted=~Quest," is completed"
IsQuestCompletedHint=
IsQuestFailed="Quest Is Failed"
IsQuestFailed=~Quest," is failed"
IsQuestFailedHint=
IsQuestDiscovered="Quest Is Discovered"
IsQuestDiscovered=~Quest," is discovered"
IsQuestDiscoveredHint=
IsQuestRequired="Quest Is Required"
IsQuestRequired=~Quest," is required"
IsQuestRequiredHint=
RectContainsLoc="Rect Contains Point"
RectContainsLoc=~Rect," contains ",~Point
RectContainsLocHint=
IsTriggerEnabled="Trigger Is On"
IsTriggerEnabled=~Trigger," is on"
IsTriggerEnabledHint=
TriggerEvaluate="Evaluate Trigger Conditions"
TriggerEvaluate="Evaluate ",~Trigger," conditions"
TriggerEvaluateHint=
IsTriggerQueuedBJ="Trigger Is Queued"
IsTriggerQueuedBJ=~Trigger," is queued"
IsTriggerQueuedBJHint="Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue."
IsTriggerQueueEmptyBJ="Trigger Queue Is Empty"
IsTriggerQueueEmptyBJ="The trigger queue is empty"
IsTriggerQueueEmptyBJHint="Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue."
IsUnitType="Unit Classification Check"
IsUnitType=~Unit," is ",~Type
IsUnitTypeHint=
IsUnitIdType="Unit-Type Classification Check"
IsUnitIdType=~Unit-Type," is ",~Type
IsUnitIdTypeHint=
IsUnitInGroup="Unit In Unit Group"
IsUnitInGroup=~Unit," is in ",~Unit Group
IsUnitInGroupHint=
RectContainsUnit="Unit In Rect"
RectContainsUnit=~Rect," contains ",~Unit
RectContainsUnitHint=
IsUnitAliveBJ="Unit Is Alive"
IsUnitAliveBJ=~Unit," is alive"
IsUnitAliveBJHint=
IsUnitDeadBJ="Unit Is Dead"
IsUnitDeadBJ=~Unit," is dead"
IsUnitDeadBJHint=
IsUnitPausedBJ="Unit Is Paused"
IsUnitPausedBJ=~Unit," is paused"
IsUnitPausedBJHint=
IsUnitHiddenBJ="Unit Is Hidden"
IsUnitHiddenBJ=~Unit," is hidden"
IsUnitHiddenBJHint="A unit can be hidden with the 'Unit - Hide' trigger action, or by placing the unit into a transport, Soul Gem, altar, etc."
IsUnitIllusionBJ="Unit Is An Illusion"
IsUnitIllusionBJ=~Unit," is an illusion"
IsUnitIllusionBJHint=
UnitCanSleepPerm="Unit Sleeps"
UnitCanSleepPerm=~Unit," sleeps when unprovoked"
UnitCanSleepPermHint="Units owned by players 1 through 12 never sleep."
UnitCanSleepBJ="Unit Sleeps At Night"
UnitCanSleepBJ=~Unit," sleeps when unprovoked at night"
UnitCanSleepBJHint="Units owned by players 1 through 12 never sleep."
UnitIsSleepingBJ="Unit Is Sleeping"
UnitIsSleepingBJ=~Unit," is sleeping"
UnitIsSleepingBJHint="Units owned by players 1 through 12 never sleep."
DoesUnitGenerateAlarms="Unit Generates Alarms"
DoesUnitGenerateAlarms=~Unit," generates alarms"
DoesUnitGenerateAlarmsHint=
IsUnitLoadedBJ="Unit Is Being Transported"
IsUnitLoadedBJ=~Unit," is being transported"
IsUnitLoadedBJHint=
IsUnitInTransportBJ="Unit Is In Transport"
IsUnitInTransportBJ=~Unit," is loaded into ",~Transport
IsUnitInTransportBJHint=
IsUnitSelected="Unit Selected By Player"
IsUnitSelected=~Unit," is selected by ",~Player
IsUnitSelectedHint=
IsUnitAlly="Unit Belongs To An Ally Of Player"
IsUnitAlly=~Unit," belongs to an ally of ",~Player
IsUnitAllyHint=
IsUnitEnemy="Unit Belongs To An Enemy Of Player"
IsUnitEnemy=~Unit," belongs to an enemy of ",~Player
IsUnitEnemyHint=
UnitHasBuffBJ="Unit Has Specific Buff"
UnitHasBuffBJ=~Unit," has buff ",~Buff
UnitHasBuffBJHint=
IsUnitGroupEmptyBJ="Unit Group Is Empty"
IsUnitGroupEmptyBJ=~Unit Group," is empty"
IsUnitGroupEmptyBJHint="This is true if the unit group contains no units."
IsUnitGroupInRectBJ="Units Of Unit Group Are In Rect"
IsUnitGroupInRectBJ="All units of ",~Unit Group," are in ",~Rect
IsUnitGroupInRectBJHint="This is true if every unit in the unit group is in the given rect."
IsUnitGroupDeadBJ="Units Of Unit Group Are Dead"
IsUnitGroupDeadBJ="All units of ",~Unit Group," are dead"
IsUnitGroupDeadBJHint="This is true if every unit in the unit group is dead."
IsFogEnabled="Fog Of War Enabled"
IsFogEnabled="Fog of war is enabled"
IsFogEnabledHint=
IsFogMaskEnabled="Black Mask Enabled"
IsFogMaskEnabled="Black mask is enabled"
IsFogMaskEnabledHint=
IsUnitVisible="Unit Is Visible To Player"
IsUnitVisible=~Unit," is visible to ",~Player
IsUnitVisibleHint=
IsUnitInvisible="Unit Is Invisible To Player"
IsUnitInvisible=~Unit," is invisible to ",~Player
IsUnitInvisibleHint=
IsUnitFogged="Unit Fogged To Player"
IsUnitFogged=~Unit," is fogged to ",~Player
IsUnitFoggedHint=
IsUnitMasked="Unit Is Masked To Player"
IsUnitMasked=~Unit," is masked to ",~Player
IsUnitMaskedHint=
IsLocationVisibleToPlayer="Point Visible To Player"
IsLocationVisibleToPlayer=~Point," is visible to ",~Player
IsLocationVisibleToPlayerHint=
IsLocationFoggedToPlayer="Point Fogged To Player"
IsLocationFoggedToPlayer=~Point," is fogged for ",~Player
IsLocationFoggedToPlayerHint=
IsLocationMaskedToPlayer="Point Masked To Player"
IsLocationMaskedToPlayer=~Point," is masked for ",~Player
IsLocationMaskedToPlayerHint=
OperatorInt="Arithmetic"
OperatorInt=~Value," ",~Operator," ",~Value
OperatorIntHint=
GetForLoopIndexA="For Loop Integer A"
GetForLoopIndexA="Integer A"
GetForLoopIndexAHint=
GetForLoopIndexB="For Loop Integer B"
GetForLoopIndexB="Integer B"
GetForLoopIndexBHint=
StringLength="String Length"
StringLength="Length of ",~String
StringLengthHint=
R2I="Convert Real To Integer"
R2I="Integer(",~Real,")"
R2RHint=
S2I="Convert String To Integer"
S2I="Integer(",~String,")"
S2IHint=
GetElevatorHeight="Elevator Height"
GetElevatorHeight="Height of ",~Elevator
GetElevatorHeightHint="An elevator's height can be changed using the 'Destructible - Set Elevator Height' action."
GetTerrainCliffLevelBJ="Terrain Cliff Level"
GetTerrainCliffLevelBJ="Terrain cliff level at ",~Location
GetTerrainCliffLevelBJHint="Cliff level values start at zero."
GetTerrainTypeBJ="Terrain Type"
GetTerrainTypeBJ="Terrain type at ",~Location
GetTerrainTypeBJHint=
GetTerrainVarianceBJ="Terrain Variance"
GetTerrainVarianceBJ="Terrain variance at ",~Location
GetTerrainVarianceBJHint=
IsTerrainPathableBJ="Terrain Pathing Is Off"
IsTerrainPathableBJ="Terrain pathing at ",~Location," of type ",~Pathing Type," is off"
IsTerrainPathableBJHint="Terrain pathing is off if it is not pathable to the given pathing type.  For example, 'Buildability' is off if the pathing cell is unbuildable.  Use 'Environment - Turn Terrain Pathing On/Off' to change terrain pathing."
GetLearnedSkillLevel="Learned Skill Level"
GetLearnedSkillLevel="Learned skill level"
GetLearnedSkillLevelHint=
GetPlayers="Number Of Players"
GetPlayers="Number of players"
GetPlayersHint=
GetTeams="Number Of Teams"
GetTeams="Number of teams"
GetTeamsHint=
GetAllyColorFilterState="Ally Color Filter Setting"
GetAllyColorFilterState="Ally color filter setting"
GetAllyColorFilterStateHint="A value of 0 indicates that filtering is disabled. A value of 1 indicates that filtering is only enabled for the minimap. A value of 2 indicates that filtering is enabled for the minimap and the game view."
GetTournamentFinishNowRule="Tournament Finish Rule"
GetTournamentFinishNowRule="Tournament finish rule"
GetTournamentFinishNowRuleHint="A value of 1 indicates that the game is in a bracket and therefore cannot end in a draw.  Any other value indicates that this is a preliminary game and may end in a draw."
GetTournamentScore="Tournament Melee Score"
GetTournamentScore="Tournament melee score for ",~Player
GetTournamentScoreHint="This returns the melee score for a player, which is used by melee games to determine victory/defeat/draw if a tournament game runs too long."
GetStoredIntegerBJ="Load Integer Value"
GetStoredIntegerBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredIntegerBJHint="If the label is not found, this function returns 0."
GetHeroLevel="Hero Level"
GetHeroLevel="Hero level of ",~Hero
GetHeroLevelHint=
GetHeroXP="Hero Experience"
GetHeroXP="Hero experience of ",~Hero
GetHeroXPHint=
GetHeroStatBJ="Hero Attribute"
GetHeroStatBJ=~Attribute," of ",~Hero," (",~Include/Exclude," bonuses)"
GetHeroStatBJHint=
GetHeroSkillPoints="Unspent Skill Points"
GetHeroSkillPoints="Unspent skill points of ",~Hero
GetHeroSkillPointsHint=
GetItemLevel="Item Level"
GetItemLevel="Item level of ",~Item
GetItemLevelHint=
GetItemCharges="Item Charges Remaining"
GetItemCharges="Charges remaining in ",~Item
GetItemChargesHint="Items with unlimited charges will return zero."
GetItemUserData="Custom Value Of Item"
GetItemUserData="Custom value of ",~Item
GetItemUserDataHint="Use 'Item - Set Custom Value' to set the custom value of an item."
LeaderboardGetPlayerIndexBJ="Leaderboard Position"
LeaderboardGetPlayerIndexBJ="Position of ",~Player," in ",~Leaderboard
LeaderboardGetPlayerIndexBJHint=
GetRandomInt="Random Number"
GetRandomInt="Random integer number between ",~Minimum," and ",~Maximum
GetRandomIntHint=
IMinBJ="Min"
IMinBJ="Min(",~Value 1,", ",~Value 2,")"
IMinBJHint=
IMaxBJ="Max"
IMaxBJ="Max(",~Value 1,", ",~Value 2,")"
IMaxBJHint=
IAbsBJ="Abs"
IAbsBJ="Abs(",~Value,")"
IAbsBJHint="Calculates the absolute value of a number."
ISignBJ="Sign"
ISignBJ="Sign(",~Value,")"
ISignBJHint="Calculates the sign of a number. The sign of a negative number is -1. The sign of a nonnegative number is 1."
ModuloInteger="Modulo"
ModuloInteger=~Dividend," mod ",~Divisor
ModuloIntegerHint="Calculates the remainder of a division. Example: 12 mod 5 = 2."
MultiboardGetRowCount="Row Count"
MultiboardGetRowCount="Number of rows in ",~Multiboard
MultiboardGetRowCountHint=
MultiboardGetColumnCount="Column Count"
MultiboardGetColumnCount="Number of columns in ",~Multiboard
MultiboardGetColumnCountHint=
GetResourceAmount="Gold Remaining"
GetResourceAmount="Resource quantity contained in ",~Gold Mine
GetResourceAmountHint="This is for use with Gold Mines."
GetPlayerState="Player Property"
GetPlayerState=~Player," ",~Property
GetPlayerStateHint=
GetPlayerTaxRateBJ="Player Tax Rate"
GetPlayerTaxRateBJ="Tax rate of ",~Resource," from ",~Player," to ",~Player
GetPlayerTaxRateBJHint="The tax rate value is a percentage of total income (0-100)."
GetPlayerScore="Player Score"
GetPlayerScore=~Player," ",~Score
GetPlayerScoreHint=
GetConvertedPlayerId="Player Number"
GetConvertedPlayerId="Player number of ",~Player
GetConvertedPlayerIdHint="Player numbers range from 1 to 16."
GetPlayerStructureCount="Count Structures"
GetPlayerStructureCount="Count structures controlled by ",~Player," (",~Include/Exclude," incomplete structures)"
GetPlayerStructureCountHint=
GetPlayerUnitCount="Count Non-Structure Units"
GetPlayerUnitCount="Count non-structure units controlled by ",~Player," (",~Include/Exclude," incomplete units)"
GetPlayerUnitCountHint=
GetPlayerTechCountSimple="Current Research Level"
GetPlayerTechCountSimple="Current research level of ",~Tech," for ",~Player
GetPlayerTechCountSimpleHint="Returns 0 or 1 for simple tech, or 0..3 for three-stage upgrades."
GetPlayerTechMaxAllowedSwap="Max Research Level"
GetPlayerTechMaxAllowedSwap="Max research level of ",~Tech," for ",~Player
GetPlayerTechMaxAllowedSwapHint="Returns 0 or 1 for simple tech, or 0..3 for three-stage upgrades."
GetPlayerTeam="Player Team"
GetPlayerTeam="Team number of ",~Player
GetPlayerTeamHint=
CountPlayersInForceBJ="Count Players In Player Group"
CountPlayersInForceBJ="Number of players in ",~Player Group
CountPlayersInForceBJHint=
CountUnitsInGroup="Count Units In Unit Group"
CountUnitsInGroup="Number of units in ",~Unit Group
CountUnitsInGroupHint=
CountLivingPlayerUnitsOfTypeId="Count Living Units Owned By Player"
CountLivingPlayerUnitsOfTypeId="Number of living ",~Unit-Type," units owned by ",~Player
CountLivingPlayerUnitsOfTypeIdHint=
GetUnitFoodUsed="Supply Used By Unit"
GetUnitFoodUsed="Supply used by ",~Unit
GetUnitFoodUsedHint=
GetUnitFoodMade="Supply Provided By Unit"
GetUnitFoodMade="Supply provided by ",~Unit
GetUnitFoodMadeHint=
GetFoodUsed="Supply Used By Unit-Type"
GetFoodUsed="Supply used by ",~Unit-Type
GetFoodUsedHint=
GetFoodMade="Supply Provided By Unit-Type"
GetFoodMade="Supply provided by ",~Unit-Type
GetFoodMadeHint=
GetUnitPointValue="Point-Value Of Unit"
GetUnitPointValue="Point-value of ",~Unit
GetUnitPointValueHint=
GetUnitPointValueByType="Point-Value Of Unit-Type"
GetUnitPointValueByType="Point-value of ",~Unit-Type
GetUnitPointValueByTypeHint=
GetUnitUserData="Custom Value Of Unit"
GetUnitUserData="Custom value of ",~Unit
GetUnitUserDataHint="Use 'Unit - Set Custom Value' to set the custom value of a unit."
GetUnitLevel="Level Of Unit"
GetUnitLevel="Level of ",~Unit
GetUnitLevelHint="This may be used for heroes and regular units."
GetUnitAbilityLevelSwapped="Level Of Ability For Unit"
GetUnitAbilityLevelSwapped="Level of ",~Ability," for ",~Unit
GetUnitAbilityLevelSwappedHint="If the unit does not have the ability, the result will be zero."
UnitInventoryCount="Count Items Carried"
UnitInventoryCount="Number of items carried by ",~Unit
UnitInventoryCountHint=
UnitCountBuffsExBJ="Count Buffs By Type"
UnitCountBuffsExBJ="Number of ",~Buff Type," buffs considered ",~Buff Resist," on ",~Unit," (",~Include/Exclude," expiration timers, ",~Include/Exclude," auras)"
UnitCountBuffsExBJHint=
GetTriggerEvalCount="Trigger Evaluation Count"
GetTriggerEvalCount="Evaluation count of ",~Trigger
GetTriggerEvalCountHint=
GetTriggerExecCount="Trigger Execution Count"
GetTriggerExecCount="Execution count of ",~Trigger
GetTriggerExecCountHint=
QueuedTriggerCountBJ="Count Triggers In Trigger Queue"
QueuedTriggerCountBJ="Number of triggers in the trigger queue"
QueuedTriggerCountBJHint="Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue."
OperatorReal="Arithmetic"
OperatorReal=~Value," ",~Operator," ",~Value
OperatorRealHint=
GetLocationX="X Of Point"
GetLocationX="X of ",~Point
GetLocationXHint=
GetLocationY="Y Of Point"
GetLocationY="Y of ",~Point
GetLocationYHint=
CameraSetupGetFieldSwap="Camera Field Of Camera Object"
CameraSetupGetFieldSwap=~Camera Field," of ",~Camera Object
CameraSetupGetFieldSwapHint=
GetCameraField="Camera Field Of Current Camera"
GetCameraField=~Camera Field," of the current camera view"
GetCameraFieldHint=
GetCameraTargetPositionX="Target X Of Current Camera"
GetCameraTargetPositionX="Target X of current camera view"
GetCameraTargetPositionXHint=
GetCameraTargetPositionY="Target Y Of Current Camera"
GetCameraTargetPositionY="Target Y of current camera view"
GetCameraTargetPositionYHint=
GetCameraTargetPositionZ="Target Z Of Current Camera"
GetCameraTargetPositionZ="Target Z of current camera view"
GetCameraTargetPositionZHint=
GetCameraEyePositionX="Source X Of Current Camera"
GetCameraEyePositionX="Source X of current camera view"
GetCameraEyePositionXHint=
GetCameraEyePositionY="Source Y Of Current Camera"
GetCameraEyePositionY="Source Y of current camera view"
GetCameraEyePositionYHint=
GetCameraEyePositionZ="Source Z Of Current Camera"
GetCameraEyePositionZ="Source Z of current camera view"
GetCameraEyePositionZHint=
GetLastTransmissionDurationBJ="Last Transmission Length"
GetLastTransmissionDurationBJ="Length of last transmission"
GetLastTransmissionDurationBJHint="This is the length, in seconds, of the last used 'Cinematic - Transmission' action."
I2R="Convert Integer To Real"
I2R="Real(",~Integer,")"
I2RHint=
S2R="Convert String To Real"
S2R="Real(",~String,")"
S2RHint=
Deg2Rad="Convert Degrees To Radians"
Deg2Rad="Radians(",~Degrees,")"
Deg2RadHint=
Rad2Deg="Convert Radians To Degrees"
Rad2Deg="Degrees(",~Radians,")"
Rad2DegHint=
TimerGetElapsed="Elapsed Time"
TimerGetElapsed="Elapsed time for ",~Timer
TimerGetElapsedHint=
TimerGetRemaining="Remaining Time"
TimerGetRemaining="Remaining time for ",~Timer
TimerGetRemainingHint=
TimerGetTimeout="Initial Time"
TimerGetTimeout="Initial time for ",~Timer
TimerGetTimeoutHint=
GetDestructableLife="Life"
GetDestructableLife="Current life of ",~Destructible
GetDestructableLifeHint="Destructibles lose life when attacked or harvested. Like units, destructibles die when their life reaches 0."
GetDestructableMaxLife="Max Life"
GetDestructableMaxLife="Max life of ",~Destructible
GetDestructableMaxLifeHint="Destructibles lose life when attacked or harvested. Like units, destructibles die when their life reaches 0."
GetDestructableOccluderHeight="Occlusion Height"
GetDestructableOccluderHeight="Occlusion height of ",~Destructible
GetDestructableOccluderHeightHint=
GetEventDamage="Damage Taken"
GetEventDamage="Damage taken"
GetEventDamageHint="When responding to a 'Takes Damage' unit event, this refers to the amount of damage being taken."
GetTournamentFinishSoonTimeRemaining="Tournament Time Remaining"
GetTournamentFinishSoonTimeRemaining="Tournament time remaining"
GetTournamentFinishSoonTimeRemainingHint="When responding to a 'Game must end soon' tournament event, this returns the amount of time remaining, in real-time seconds."
GetTimeOfDay="Time Of Day"
GetTimeOfDay="In-game time of day"
GetTimeOfDayHint="This is in game time, not real time."
GetTimeOfDayScalePercentBJ="Time Of Day Speed"
GetTimeOfDayScalePercentBJ="Current time of day speed"
GetTimeOfDayScalePercentBJHint="This returns the time of day speed as a percentage of the default time of day speed."
GetStoredRealBJ="Load Real Value"
GetStoredRealBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredRealBJHint="If the label is not found, this function returns 0."
GetItemLifeBJ="Item Life"
GetItemLifeBJ="Current life of ",~Item
GetItemLifeBJHint=
GetRandomReal="Random Number"
GetRandomReal="Random real number between ",~Minimum," and ",~Maximum
GetRandomRealHint=
GetRandomDirectionDeg="Random Angle"
GetRandomDirectionDeg="Random angle"
GetRandomDirectionDegHint="This is a random real number in the range of 0 to 360, for use as an angle or a unit facing."
GetRandomPercentageBJ="Random Percentage"
GetRandomPercentageBJ="Random percentage"
GetRandomPercentageBJHint="This is a random real number in the range of 0 to 100, for use as a percentage."
DistanceBetweenPoints="Distance Between Points"
DistanceBetweenPoints="Distance between ",~Point," and ",~Point
DistanceBetweenPointsHint="Returns the Euclidean distance between two points, ignoring height."
AngleBetweenPoints="Angle Between Points"
AngleBetweenPoints="Angle from ",~Point," to ",~Point
AngleBetweenPointsHint="Returns the angle of a line from one point to another."
RMinBJ="Min"
RMinBJ="Min(",~Value 1,", ",~Value 2,")"
RMinBJHint=
RMaxBJ="Max"
RMaxBJ="Max(",~Value 1,", ",~Value 2,")"
RMaxBJHint=
RAbsBJ="Abs"
RAbsBJ="Abs(",~Value,")"
RAbsBJHint="Calculates the absolute value of a number."
RSignBJ="Sign"
RSignBJ="Sign(",~Value,")"
RSignBJHint="Calculates the sign of a number. The sign of a negative number is -1. The sign of a nonnegative number is 1."
ModuloReal="Modulo"
ModuloReal=~Dividend," mod ",~Divisor
ModuloRealHint="Calculates the remainder of a division. Example: 9.0 mod 2.5 = 1.5."
Pow="Power"
Pow="Power(",~Value,", ",~Power,")"
PowHint=
SquareRoot="Square Root"
SquareRoot="Square root(",~Value,")"
SquareRootHint=
SinBJ="Sine"
SinBJ="Sin(",~Angle,")"
SinBJHint="The angle specified is expected to be in degrees."
CosBJ="Cosine"
CosBJ="Cos(",~Angle,")"
CosBJHint="The angle specified is expected to be in degrees."
TanBJ="Tangent"
TanBJ="Tan(",~Angle,")"
TanBJHint="The angle specified is expected to be in degrees."
AsinBJ="Arcsine"
AsinBJ="Asin(",~Value,")"
AsinBJHint="The angle returned is in degrees."
AcosBJ="Arccosine"
AcosBJ="Acos(",~Value,")"
AcosBJHint="The angle returned is in degrees."
AtanBJ="Arctangent (From Angle)"
AtanBJ="Atan(",~Value,")"
AtanBJHint="The angle returned is in degrees."
Atan2BJ="Arctangent (From Deltas)"
Atan2BJ="Atan2(",~Y,", ",~X,")"
Atan2BJHint="The angle returned is in degrees."
GetPlayerHandicapXPBJ="Experience Rate"
GetPlayerHandicapXPBJ=~Player," experience rate"
GetPlayerHandicapXPBJHint="Experience rates are specified as percentages, with 100% being normal."
GetPlayerHandicapBJ="Handicap"
GetPlayerHandicapBJ=~Player," handicap"
GetPlayerHandicapBJHint="Handicap values are specified as percentages, with 100% being normal."
GetLocationZ="Height of Point"
GetLocationZ="Z height of ",~Point
GetLocationZHint=
GetRectCenterX="Center X Of Rect"
GetRectCenterX="Center X of ",~Rect
GetRectCenterXHint=
GetRectCenterY="Center Y Of Rect"
GetRectCenterY="Center Y of ",~Rect
GetRectCenterYHint=
GetRectMinX="Min X Of Rect"
GetRectMinX="Min X of ",~Rect
GetRectMinXHint=
GetRectMinY="Min Y Of Rect"
GetRectMinY="Min Y of ",~Rect
GetRectMinYHint=
GetRectMaxX="Max X Of Rect"
GetRectMaxX="Max X of ",~Rect
GetRectMaxXHint=
GetRectMaxY="Max Y Of Rect"
GetRectMaxY="Max Y of ",~Rect
GetRectMaxYHint=
GetRectWidthBJ="Width Of Rect"
GetRectWidthBJ="Width of ",~Rect
GetRectWidthBJHint=
GetRectHeightBJ="Height Of Rect"
GetRectHeightBJ="Height of ",~Rect
GetRectHeightBJHint=
GetSoundDurationBJ="Sound Length"
GetSoundDurationBJ="Length of ",~Sound
GetSoundDurationBJHint="This returns the duration of a sound, in seconds."
GetSoundFileDurationBJ="Music Length"
GetSoundFileDurationBJ="Length of ",~Music
GetSoundFileDurationBJHint="This returns the duration of a music score, in seconds."
GetUnitStateSwap="Property"
GetUnitStateSwap=~Property," of ",~Unit
GetUnitStateSwapHint=
GetUnitLifePercent="Percentage Life"
GetUnitLifePercent="Percentage life of ",~Unit
GetUnitLifePercentHint=
GetUnitManaPercent="Percentage Mana"
GetUnitManaPercent="Percentage mana of ",~Unit
GetUnitManaPercentHint=
GetUnitFacing="Facing Angle"
GetUnitFacing="Facing of ",~Unit
GetUnitFacingHint="The angle returned is in degrees, with 0 facing east."
GetUnitMoveSpeed="Movement Speed (Current)"
GetUnitMoveSpeed="Current movement speed of ",~Unit
GetUnitMoveSpeedHint="Movement speeds commonly range from 150 to 300."
GetUnitDefaultMoveSpeed="Movement Speed (Default)"
GetUnitDefaultMoveSpeed="Default movement speed of ",~Unit
GetUnitDefaultMoveSpeedHint="Movement speeds commonly range from 150 to 300."
GetUnitAcquireRange="Acquisition Range (Current)"
GetUnitAcquireRange="Current acquisition range of ",~Unit
GetUnitAcquireRangeHint=
GetUnitDefaultAcquireRange="Acquisition Range (Default)"
GetUnitDefaultAcquireRange="Default acquisition range of ",~Unit
GetUnitDefaultAcquireRangeHint=
GetUnitTurnSpeed="Turn Speed (Current)"
GetUnitTurnSpeed="Current turn speed of ",~Unit
GetUnitTurnSpeedHint="A unit's turn speed determines how quickly the unit changes direction. Turn speed values are expected to be between 0 and 1, with smaller numbers indicating slower turning rates."
GetUnitDefaultTurnSpeed="Turn Speed (Default)"
GetUnitDefaultTurnSpeed="Default turn speed of ",~Unit
GetUnitDefaultTurnSpeedHint="A unit's turn speed determines how quickly the unit changes direction. Turn speed values are expected to be between 0 and 1, with smaller numbers indicating slower turning rates."
GetUnitPropWindowBJ="Prop Window Angle (Current)"
GetUnitPropWindowBJ="Current prop window angle of ",~Unit
GetUnitPropWindowBJHint=
GetUnitDefaultPropWindowBJ="Prop Window Angle (Default)"
GetUnitDefaultPropWindowBJ="Default prop window angle of ",~Unit
GetUnitDefaultPropWindowBJHint=
GetUnitFlyHeight="Flying Height (Current)"
GetUnitFlyHeight="Current flying height of ",~Unit
GetUnitFlyHeightHint="Only flying units use flying heights."
GetUnitDefaultFlyHeight="Flying Height (Default)
GetUnitDefaultFlyHeight="Default flying height of ",~Unit
GetUnitDefaultFlyHeightHint=
OperatorString="Concatenate Strings"
OperatorString=~String 1," + ",~String 2
OperatorStringHint=
SubStringBJ="Substring"
SubStringBJ="Substring(",~String,", ",~Start,", ",~End,")"
SubStringBJHint="Example: Substring(''Grunts stink'', 2, 4) = ''run''."
GetAbilityName="Ability Name"
GetAbilityName="Name of ",~Ability
GetAbilityNameHint=
I2S="Convert Integer To String"
I2S="String(",~Integer,")"
I2SHint=
R2S="Convert Real To String"
R2S="String(",~Real,")"
R2SHint=
R2SW="Convert Real To Formatted String"
R2SW="String(",~Real,", ",~Width,", ",~Precision,")"
R2SWHint="Examples: String(1.234, 7, 2) = '' 1.23''. String(1.234, 2, 5) = ''1.23400''."
OrderId2StringBJ="Convert Order To String"
OrderId2StringBJ="String(",~Order,")"
OrderId2StringBJHint="Example order strings: ''harvest'', ''move'', ''smart'', ''attack''."
UnitId2StringBJ="Convert Unit-Type To String"
UnitId2StringBJ="String(",~Unit-Type,")"
UnitId2StringBJHint=
StringIdentity="Convert Externalized String"
StringIdentity="Externalized string(",~String,")"
StringIdentityHint="Use this to make sure the given string will be externalized in the map string file (war3map.wts)."
StringCase="Convert String Case"
StringCase="String(",~String,") as ",~Lower/Upper Case
StringCaseHint="All letters in the string will be changed to the selected case."
GetDestructableName="Destructible Name"
GetDestructableName="Name of ",~Destructible
GetDestructableNameHint=
GetEventPlayerChatString="Entered Chat String"
GetEventPlayerChatString="Entered chat string"
GetEventPlayerChatStringHint=
GetEventPlayerChatStringMatched="Matched Chat String"
GetEventPlayerChatStringMatched="Matched chat string"
GetEventPlayerChatStringMatchedHint=
GetSaveBasicFilename="Saved-Game Filename"
GetSaveBasicFilename="Saved-game filename"
GetSaveBasicFilenameHint="When responding to a 'Game - Game Save' event, this refers to the name of the file being saved."
GetStoredStringBJ="Load String Value"
GetStoredStringBJ="Load ",~Label," of ",~Category," from ",~Game Cache
GetStoredStringBJHint="If the label is not found, this function returns an empty string."
GetHeroProperName="Hero Proper Name"
GetHeroProperName="Proper name of ",~Hero
GetHeroProperNameHint="Calling this on a hero will return his actual name (e.g. 'Granis Darkhammer' for a Paladin)."
GetItemName="Item Name"
GetItemName="Name of ",~Item
GetItemNameHint=
MultiboardGetTitleText="Multiboard Title"
MultiboardGetTitleText="Title of ",~Multiboard
MultiboardGetTitleTextHint=
GetPlayerName="Player Name"
GetPlayerName="Name of ",~Player
GetPlayerNameHint=
GetUnitName="Unit Name"
GetUnitName="Name of ",~Unit
GetUnitNameHint="This returns the internal name of a unit, not the proper name of units or Heroes."
GetRectCenter="Center Of Rect"
GetRectCenter="Center of ",~Rect
GetRectCenterHint=
GetRandomLocInRect="Random Point In Rect"
GetRandomLocInRect="Random point in ",~Rect
GetRandomLocInRectHint=
OffsetLocation="Point With Offset"
OffsetLocation=~Point," offset by (",~X,", ",~Y,")"
OffsetLocationHint="The offset values are (X, Y)."
PolarProjectionBJ="Point With Polar Offset"
PolarProjectionBJ=~Point," offset by ",~Distance," towards ",~Angle," degrees"
PolarProjectionBJHint=
CameraSetupGetDestPositionLoc="Target Of Camera Object"
CameraSetupGetDestPositionLoc="Target of ",~Camera Object
CameraSetupGetDestPositionLocHint=
GetCameraTargetPositionLoc="Target Of Current Camera"
GetCameraTargetPositionLoc="Target of current camera view"
GetCameraTargetPositionLocHint=
GetCameraEyePositionLoc="Source Of Current Camera"
GetCameraEyePositionLoc="Source of current camera view"
GetCameraEyePositionLocHint=
Location="Convert Coordinates To Point"
Location="Point(",~X,", ",~Y,")"
LocationHint=
GetDestructableLoc="Position Of Destructible"
GetDestructableLoc="Position of ",~Destructible
GetDestructableLocHint=
GetOrderPointLoc="Target Point Of Issued Order"
GetOrderPointLoc="Target point of issued order"
GetOrderPointLocHint="When responding to an 'Is Issued An Order Targeting A Point' unit event, this refers to the target of the order."
GetSpellTargetLoc="Target Point Of Ability Being Cast"
GetSpellTargetLoc="Target point of ability being cast"
GetSpellTargetLocHint="When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the target point of the ability being cast."
GetItemLoc="Position Of Item"
GetItemLoc="Position of ",~Item
GetItemLocHint=
WaygateGetDestinationLocBJ="Way Gate Destination"
WaygateGetDestinationLocBJ="Destination of ",~Way Gate
WaygateGetDestinationLocBJHint=
GetPlayerStartLocationLoc="Player Start Location"
GetPlayerStartLocationLoc=~Player," start location"
GetPlayerStartLocationLocHint=
GetUnitLoc="Position Of Unit"
GetUnitLoc="Position of ",~Unit
GetUnitLocHint=
GetUnitRallyPoint="Rally-Point As Point"
GetUnitRallyPoint="Rally-Point of ",~Unit," as a point"
GetUnitRallyPointHint="If the unit has no rally-point set, the result will be (0,0)"
GetCurrentCameraBoundsMapRectBJ="Current Camera Bounds"
GetCurrentCameraBoundsMapRectBJ="Current camera bounds"
GetCurrentCameraBoundsMapRectBJHint="This is the area to which the camera target is currently restricted."
GetCameraBoundsMapRect="Initial Camera Bounds"
GetCameraBoundsMapRect="Initial camera bounds"
GetCameraBoundsMapRectHint="This is the area to which the camera target is restricted at map initialization."
GetPlayableMapRect="Playable Map Area"
GetPlayableMapRect="Playable map area"
GetPlayableMapRectHint="This is the area to which units are restricted. This area typically extends just beyond the camera bounds."
GetEntireMapRect="Entire Map"
GetEntireMapRect="Entire map"
GetEntireMapRectHint="This is the entire map, including areas which cannot normally be reached by units."
OffsetRectBJ="Rect With Offset
OffsetRectBJ=~Rect," offset by (",~X,", ",~Y,")"
OffsetRectBJHint="The offset values are (X, Y)."
RectFromCenterSizeBJ="Convert Point With Size To Rect"
RectFromCenterSizeBJ="Rect centered at ",~Point," with size (",~Width,", ",~Height,")"
RectFromCenterSizeBJHint="The size values are (Width, Height)."
Rect="Convert Coordinates To Rect"
Rect="Rect(",~X1,", ",~Y1,", ",~X2,", ",~Y2,")"
RectHint="Choose four coordinates (min X, min Y, max X, max Y) to define a rect on the map."
RectFromLoc="Convert Points To Rect"
RectFromLoc="Rect(",~Point 1,", ",~Point 2,")"
RectFromLocHint="Choose two points to define a rect on the map."
GetLastCreatedUnit="Last Created Unit"
GetLastCreatedUnit="Last created unit"
GetLastCreatedUnitHint="This is the last unit created via a 'Unit - Create' trigger action."
GetLastRestoredUnitBJ="Last Restored Unit"
GetLastRestoredUnitBJ="Last restored unit"
GetLastRestoredUnitBJHint="This is the last unit restored via a 'Game Cache - Restore Unit' trigger action."
GetLastReplacedUnitBJ="Last Replaced Unit"
GetLastReplacedUnitBJ="Last replaced unit"
GetLastReplacedUnitBJHint="This is the last unit created via a 'Unit - Replace' trigger action."
GetLastHauntedGoldMine="Last Haunted Gold Mine"
GetLastHauntedGoldMine="Last Haunted Gold Mine"
GetLastHauntedGoldMineHint="This is the last Haunted Gold Mine created via a 'Neutral Building - Haunt Gold Mine (Instantly)' trigger action."
GetEnumUnit="Picked Unit"
GetEnumUnit="Picked unit"
GetEnumUnitHint="When using the 'Pick Every Unit...' action, this refers to each unit as it is picked."
GetFilterUnit="Matching Unit"
GetFilterUnit="Matching unit"
GetFilterUnitHint="Use this to refer to the unit being considered for 'Units Matching Condition' functions."
GroupPickRandomUnit="Random Unit From Unit Group"
GroupPickRandomUnit="Random unit from ",~Unit Group
GroupPickRandomUnitHint=
GetAttackedUnitBJ="Attacked Unit"
GetAttackedUnitBJ="Attacked unit"
GetAttackedUnitBJHint="When responding to an 'Is Attacked' unit event, this refers to the unit that is being attacked."
GetAttacker="Attacking Unit"
GetAttacker="Attacking unit"
GetAttackerHint="When responding to an 'Is Attacked' unit event, this refers to the attacking unit."
GetBuyingUnit="Buying Unit"
GetBuyingUnit="Buying unit"
GetBuyingUnitHint="When responding to 'Sells A Unit', 'Sells An Item', or 'Pawns An Item' unit events, this refers to the unit doing the buying."
GetCancelledStructure="Cancelled Structure"
GetCancelledStructure="Cancelled structure"
GetCancelledStructureHint="When responding to a 'Cancels Construction' unit event, this refers to the unit whose construction has been cancelled."
GetSpellAbilityUnit="Casting Unit"
GetSpellAbilityUnit="Casting unit"
GetSpellAbilityUnitHint="When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the unit casting the ability."
GetConstructedStructure="Constructed Structure"
GetConstructedStructure="Constructed structure"
GetConstructedStructureHint="When responding to a 'Finishes Construction' unit event, this refers to the unit whose construction has finished."
GetConstructingStructure="Constructing Structure"
GetConstructingStructure="Constructing structure"
GetConstructingStructureHint="When responding to a 'Begins Construction' unit event, this refers to the unit whose construction has begun."
GetDecayingUnit="Decaying Unit"
GetDecayingUnit="Decaying unit"
GetDecayingUnitHint="When responding to a 'Decays' unit event, this refers to the unit that is decaying."
GetDyingUnit="Dying Unit"
GetDyingUnit="Dying unit"
GetDyingUnitHint="When responding to a 'Dies' unit event, this refers to the unit that is dying."
GetEnteringUnit="Entering Unit"
GetEnteringUnit="Entering unit"
GetEnteringUnitHint="When responding to a 'Unit Enters Rect' unit event, this refers to the unit entering the rect."
GetManipulatingUnit="Hero Manipulating Item"
GetManipulatingUnit="Hero manipulating item"
GetManipulatingUnitHint="When responding to 'Uses/Acquires/Loses An Item' unit events, this refers to the Hero that is manipulating the item."
GetKillingUnitBJ="Killing Unit"
GetKillingUnitBJ="Killing unit"
GetKillingUnitBJHint="When responding to a 'Dies' unit event, this refers to the killer of the dying unit. In cases where a unit dies from a source other than a killing unit, this returns 'No unit'."
GetLearningUnit="Learning Hero"
GetLearningUnit="Learning Hero"
GetLearningUnitHint="When responding to a 'Learns A Skill' unit event, this refers to the unit learning the skill."
GetLeavingUnit="Leaving Unit"
GetLeavingUnit="Leaving unit"
GetLeavingUnitHint="When responding to a 'Unit Leaves Rect' event, this refers to the unit leaving the rect."
GetLevelingUnit="Leveling Hero"
GetLevelingUnit="Leveling Hero"
GetLevelingUnitHint="When responding to a 'Gains A Level' unit event, this refers to the unit gaining the level."
GetLoadedUnitBJ="Loading Unit"
GetLoadedUnitBJ="Loading unit"
GetLoadedUnitBJHint="When responding to an 'Is Loaded Into A Transport' unit event, this refers to the unit that is being loaded."
GetOrderedUnit="Ordered Unit"
GetOrderedUnit="Ordered unit"
GetOrderedUnitHint="When responding to an 'Is Issued An Order' unit event, this refers to the unit receiving the order."
GetChangingUnit="Ownership-Changed Unit"
GetChangingUnit="Ownership-changed unit"
GetChangingUnitHint="When responding to a 'Changes Owner' unit event, this refers to the unit whose ownership has changed."
GetResearchingUnit="Researching Unit"
GetResearchingUnit="Researching unit"
GetResearchingUnitHint="When responding to 'Begins/Cancels/Finishes Research' unit events, this refers to the unit doing the research."
GetRevivableUnit="Revivable Hero"
GetRevivableUnit="Revivable Hero"
GetRevivableUnitHint="When responding to a 'Becomes Revivable' unit event, this refers to the unit that has become available for revival."
GetRevivingUnit="Reviving Hero"
GetRevivingUnit="Reviving Hero"
GetRevivingUnitHint="When responding to 'Begins/Cancels/Finishes Reviving' unit events, this refers to the unit being revived."
GetSellingUnit="Selling Unit"
GetSellingUnit="Selling unit"
GetSellingUnitHint="When responding to 'Sells A Unit', 'Sells An Item', or 'Pawns An Item' unit events, this refers to the unit doing the selling."
GetSoldUnit="Sold Unit"
GetSoldUnit="Sold unit"
GetSoldUnitHint="When responding to a 'Sells A Unit' unit event, this refers to the unit being sold."
GetSummonedUnit="Summoned Unit"
GetSummonedUnit="Summoned unit"
GetSummonedUnitHint="When responding to a 'Spawns A Summoned Unit' unit event, this refers to the unit being summoned."
GetSummoningUnit="Summoning Unit"
GetSummoningUnit="Summoning unit"
GetSummoningUnitHint="When responding to a 'Spawns A Summoned Unit' unit event, this refers to the unit spawning the summoned unit."
GetOrderTargetUnit="Target Unit Of Issued Order"
GetOrderTargetUnit="Target unit of issued order"
GetOrderTargetUnitHint="When responding to an 'Is Issued An Order Targeting An Object' unit event with a unit target, this refers to the target of the order."
GetSpellTargetUnit="Target Unit Of Ability Being Cast"
GetSpellTargetUnit="Target unit of ability being cast"
GetSpellTargetUnitHint="When responding to 'Channeling/Casting/etc. casting an ability' unit events with a unit target, this refers to the target of the ability being cast."
GetEventTargetUnit="Targeted Unit"
GetEventTargetUnit="Targeted unit"
GetEventTargetUnitHint="When responding to an 'Acquires A Target' unit event, this refers to the target being acquired."
GetTrainedUnit="Trained Unit"
GetTrainedUnit="Trained unit"
GetTrainedUnitHint="When responding to a 'Finishes Training A Unit' unit event, this refers to the unit that was trained."
GetTransportUnitBJ="Transporting Unit"
GetTransportUnitBJ="Transporting unit"
GetTransportUnitBJHint="When responding to an 'Is Loaded Into A Transport' unit event, this refers to the transport that loaded the unit."
GetTriggerUnit="Triggering Unit"
GetTriggerUnit="Triggering unit"
GetTriggerUnitHint=
GetUnitRallyUnit="Rally-Point As Unit"
GetUnitRallyUnit="Rally-Point of ",~Unit," as a unit"
GetUnitRallyUnitHint="If the unit does not have a rally-point set to a unit, this will return 'No unit'."
GetUnitTypeId="Unit-Type Of Unit"
GetUnitTypeId="Unit-type of ",~Unit
GetUnitTypeIdHint=
ChooseRandomCreepBJ="Random Creep Unit-Type"
ChooseRandomCreepBJ="Random level ",~Level," creep unit-type"
ChooseRandomCreepBJHint="Use -1 for any level."
ChooseRandomNPBuildingBJ="Random Neutral Building Unit-Type"
ChooseRandomNPBuildingBJ="Random neutral building unit-type"
ChooseRandomNPBuildingBJHint=
String2UnitIdBJ="Convert String To Unit-Type"
String2UnitIdBJ="Unit-type(",~String,")"
String2UnitIdBJHint=
GetTrainedUnitType="Trained Unit-Type"
GetTrainedUnitType="Trained unit-type"
GetTrainedUnitTypeHint="When responding to 'Begins/Cancels/Finishes Training A Unit' unit events, this refers to the unit-type of the unit that is being trained."
String2OrderIdBJ="Convert String To Order"
String2OrderIdBJ="Order(",~String,")"
String2OrderIdBJHint="Example order strings: ''harvest'', ''move'', ''smart'', ''attack''."
UnitId2OrderIdBJ="Convert Unit-Type To Order"
UnitId2OrderIdBJ="Order(",~Unit-Type,")"
UnitId2OrderIdBJHint=
GetIssuedOrderIdBJ="Issued Order"
GetIssuedOrderIdBJ="Issued order"
GetIssuedOrderIdBJHint="When responding to 'Is Issued An Order' unit events, this refers to the order being issued."
GetUnitCurrentOrder="Current Order Of Unit"
GetUnitCurrentOrder="Current order of ",~Unit
GetUnitCurrentOrderHint=
GetLastCreatedDestructable="Last Created Destructible"
GetLastCreatedDestructable="Last created destructible"
GetLastCreatedDestructableHint="This is the last destructible created via a 'Destructible - Create' trigger action."
RandomDestructableInRectSimpleBJ="Random Destructible In Rect"
RandomDestructableInRectSimpleBJ="Random destructible in ",~Rect
RandomDestructableInRectSimpleBJHint=
RandomDestructableInRectBJ="Random Destructible In Rect Matching Condition"
RandomDestructableInRectBJ="Random destructible in ",~Rect," matching ",~Condition
RandomDestructableInRectBJHint="Use 'Matching Destructible' to refer to the destructible being considered."
GetEnumDestructable="Picked Destructible"
GetEnumDestructable="Picked destructible"
GetEnumDestructableHint="When using the 'Pick Every Destructible...' action, this refers to each destructible as it is picked."
GetFilterDestructable="Matching Destructible"
GetFilterDestructable="Matching destructible"
GetFilterDestructableHint="Use this to refer to the destructible being considered for the 'Random Destructible' functions."
GetDyingDestructable="Dying Destructible"
GetDyingDestructable="Dying destructible"
GetDyingDestructableHint="When responding to a 'Destructible Dies' event, this refers to the destructible that is dying."
GetOrderTargetDestructable="Target Destructible Of Issued Order"
GetOrderTargetDestructable="Target destructible of issued order"
GetOrderTargetDestructableHint="When responding to an 'Is Issued An Order Targeting An Object' unit event with a destructible target, this refers to the target of the order."
GetSpellTargetDestructable="Target Destructible Of Ability Being Cast"
GetSpellTargetDestructable="Target destructible of ability being cast"
GetSpellTargetDestructableHint="When responding to 'Channeling/Casting/etc. casting an ability' unit events with a destructible target, this refers to the target of the ability being cast."
GetUnitRallyDestructable="Rally-Point As Destructible"
GetUnitRallyDestructable="Rally-Point of ",~Unit," as a destructible"
GetUnitRallyDestructableHint="If the unit does not have a rally-point set to a destructible, this will return 'No destructible'."
GetDestructableTypeId="Destructible-Type of Destructible"
GetDestructableTypeId="Destructible-type of ",~Destructible
GetDestructableTypeIdHint=
GetLastCreatedItem="Last Created Item"
GetLastCreatedItem="Last created item"
GetLastCreatedItemHint="This is the last item created via an 'Item - Create' or 'Hero - Create Item For Hero' trigger action."
GetLastRemovedItem="Last Dropped Item"
GetLastRemovedItem="Last dropped item"
GetLastRemovedItemHint="This is the last item dropped via a 'Hero - Drop Item' trigger action."
RandomItemInRectSimpleBJ="Random Item In Rect"
RandomItemInRectSimpleBJ="Random item in ",~Rect
RandomItemInRectSimpleBJHint=
RandomItemInRectBJ="Random Item In Rect Matching Condition"
RandomItemInRectBJ="Random item in ",~Rect," matching ",~Condition
RandomItemInRectBJHint="Use 'Matching Item' to refer to the item being considered."
GetEnumItem="Picked Item"
GetEnumItem="Picked item"
GetEnumItemHint="When using the 'Pick Every Item...' action, this refers to each item as it is picked."
GetFilterItem="Matching Item"
GetFilterItem="Matching item"
GetFilterItemHint="Use this to refer to the item being considered for the 'Random Item' functions."
UnitItemInSlotBJ="Item Carried By Hero"
UnitItemInSlotBJ="Item carried by ",~Hero," in slot ",~Index
UnitItemInSlotBJHint=
GetItemOfTypeFromUnitBJ="Item Carried By Hero Of Type"
GetItemOfTypeFromUnitBJ="Item carried by ",~Hero," of type ",~Item-Type
GetItemOfTypeFromUnitBJHint=
GetManipulatedItem="Item Being Manipulated"
GetManipulatedItem="Item being manipulated"
GetManipulatedItemHint="When responding to 'Uses/Acquires/Loses An Item' unit events, this refers to the item being manipulated."
GetSoldItem="Sold Item"
GetSoldItem="Sold Item"
GetSoldItemHint="When responding to 'Sells An Item' or 'Pawns An Item' unit events, this refers to the item being sold."
GetOrderTargetItem="Target Item Of Issued Order"
GetOrderTargetItem="Target item of issued order"
GetOrderTargetItemHint="When responding to an 'Is Issued An Order Targeting An Object' unit event with an item target, this refers to the target of the order."
GetSpellTargetItem="Target Item Of Ability Being Cast"
GetSpellTargetItem="Target item of ability being cast"
GetSpellTargetItemHint="When responding to 'Channeling/Casting/etc. casting an ability' unit events with an item target, this refers to the target of the ability being cast."
GetItemType="Item-Class Of Item"
GetItemType="Item-class of ",~Item
GetItemTypeHint=
GetItemTypeId="Item-Type Of Item"
GetItemTypeId="Item-type of ",~Item
GetItemTypeIdHint=
ChooseRandomItemBJ="Random Item-Type"
ChooseRandomItemBJ="Random level ",~Level," item-type"
ChooseRandomItemBJHint="This function corresponds to the original unclassified item system with levels 0-10. Use -1 for any level."
ChooseRandomItemExBJ="Random Item-Type Of Class"
ChooseRandomItemExBJ="Random level ",~Level," ",~Class," item-type"
ChooseRandomItemExBJHint="This function corresponds to the newer item classification system with levels 0-8. Use -1 for any level."
GetResearched="Researched Tech-Type"
GetResearched="Researched tech-type"
GetResearchedHint="When responding to 'Begins/Cancels/Finishes Research' unit events, this refers to the tech-type being researched."
GetSpellAbilityId="Ability Being Cast"
GetSpellAbilityId="Ability being cast"
GetSpellAbilityIdHint="When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the ability being cast."
GetLearnedSkillBJ="Learned Hero Skill"
GetLearnedSkillBJ="Learned Hero Skill"
GetLearnedSkillBJHint=
GetEnumPlayer="Picked Player"
GetEnumPlayer="Picked player"
GetEnumPlayerHint="When using the 'Pick Every Player...' action, this refers to each player as he/she is picked."
GetFilterPlayer="Matching Player"
GetFilterPlayer="Matching player"
GetFilterPlayerHint="Use this to refer to the player being considered for the 'All Players Matching Condition' function."
GetOwningPlayer="Owner Of Unit"
GetOwningPlayer="Owner of ",~Unit
GetOwningPlayerHint=
GetItemPlayer="Owner Of Item"
GetItemPlayer="Owner of ",~Item
GetItemPlayerHint=
ForcePickRandomPlayer="Random Player From Player Group"
ForcePickRandomPlayer="Random player from ",~Player Group
ForcePickRandomPlayerHint=
ConvertedPlayer="Convert Player Index To Player"
ConvertedPlayer="Player(",~Player Index,")"
ConvertedPlayerHint="Player indexes range from 1 to 16."
GetChangingUnitPrevOwner="Previous Owner"
GetChangingUnitPrevOwner="Previous owner"
GetChangingUnitPrevOwnerHint="When responding to a 'Changes Owner' unit event, this refers to the previous owner of the unit."
GetTriggerPlayer="Triggering Player"
GetTriggerPlayer="Triggering player"
GetTriggerPlayerHint=
LeaderboardGetIndexedPlayerBJ="Player In Position"
LeaderboardGetIndexedPlayerBJ="Player in position ",~Position," of ",~Leaderboard
LeaderboardGetIndexedPlayerBJHint=
GetLastCreatedGroup="Last Created Unit Group"
GetLastCreatedGroup="Last created unit group"
GetLastCreatedGroupHint="This is the last set of units created via a 'Unit - Create' trigger action."
GetRandomSubGroup="Random N Units From Unit Group"
GetRandomSubGroup="Random ",~Count," units from ",~Unit Group
GetRandomSubGroupHint=
GetUnitsInRectAll="Units In Rect"
GetUnitsInRectAll="Units in ",~Rect
GetUnitsInRectAllHint=
GetUnitsInRectOfPlayer="Units In Rect Owned By Player"
GetUnitsInRectOfPlayer="Units in ",~Rect," owned by ",~Player
GetUnitsInRectOfPlayerHint=
GetUnitsInRectMatching="Units In Rect Matching Condition"
GetUnitsInRectMatching="Units in ",~Rect" matching ",~Condition
GetUnitsInRectMatchingHint="Use 'Matching Unit' to refer to the unit on whom the comparison is being performed."
GetUnitsInRangeOfLocAll="Units In Range"
GetUnitsInRangeOfLocAll="Units within ",~Radius," of ",~Point
GetUnitsInRangeOfLocAllHint=
GetUnitsInRangeOfLocMatching="Units In Range Matching Condition"
GetUnitsInRangeOfLocMatching="Units within ",~Radius," of ",~Point," matching ",~Condition
GetUnitsInRangeOfLocMatchingHint="Use 'Matching Unit' to refer to the unit on whom the comparison is being performed."
GetUnitsOfPlayerAll="Units Owned By Player"
GetUnitsOfPlayerAll="Units owned by ",~Player
GetUnitsOfPlayerAllHint=
GetUnitsOfPlayerAndTypeId="Units Owned By Player Of Type"
GetUnitsOfPlayerAndTypeId="Units owned by ",~Player," of type ",~Unit-Type
GetUnitsOfPlayerAndTypeIdHint=
GetUnitsOfPlayerMatching="Units Owned By Player Matching Condition"
GetUnitsOfPlayerMatching="Units owned by ",~Player," matching ",~Condition
GetUnitsOfPlayerMatchingHint="Use 'Matching Unit' to refer to the unit on whom the comparison is being performed."
GetUnitsOfTypeIdAll="Units Of Type"
GetUnitsOfTypeIdAll="Units of type ",~Unit-Type
GetUnitsOfTypeIdAllHint=
GetUnitsSelectedAll="Units Selected"
GetUnitsSelectedAll="Units currently selected by ",~Player
GetUnitsSelectedAllHint="This should not be used in trigger conditions."
GetPlayersAll="All Players"
GetPlayersAll="All players"
GetPlayersAllHint="Includes unused and neutral players."
GetPlayersByMapControl="All Players Of Control"
GetPlayersByMapControl="All players controlled by a ",~Control Type," player"
GetPlayersByMapControlHint=
GetPlayersMatching="All Players Matching Condition"
GetPlayersMatching="All players matching ",~Condition
GetPlayersMatchingHint="Use 'Matching Player' to refer to the player on whom the comparison is being performed. This includes unused and neutral players."
GetPlayersAllies="Allies Of Player"
GetPlayersAllies="All allies of ",~Player
GetPlayersAlliesHint="All allies of the specified player, including him/herself."
GetPlayersEnemies="Enemies Of Player"
GetPlayersEnemies="All enemies of ",~Player
GetPlayersEnemiesHint="All enemies of the specified player."
GetForceOfPlayer="Convert Player To Player Group"
GetForceOfPlayer="Player group(",~Player,")"
GetForceOfPlayerHint=
GetPlayerRace="Race Of Player"
GetPlayerRace="Race of ",~Player
GetPlayerRaceHint=
GetUnitRace="Race Of Unit"
GetUnitRace="Race of ",~Unit
GetUnitRaceHint=
GetCurrentCameraSetup="Current Camera"
GetCurrentCameraSetup="Current camera"
GetCurrentCameraSetupHint=
GetLastCreatedFogModifier="Last Created Visibility Modifier"
GetLastCreatedFogModifier="Last created visibility modifier"
GetLastCreatedFogModifierHint="This is the last visibility modifier created via a 'Visibility - Create Visibility Modifier' trigger action."
GetTriggeringTrigger="This Trigger"
GetTriggeringTrigger="This trigger"
GetTriggeringTriggerHint=
GetGameDifficulty="Difficulty Level"
GetGameDifficulty="Difficulty level"
GetGameDifficultyHint=
GetAIDifficulty="Melee AI Of Player"
GetAIDifficulty="Melee AI of ",~Player
GetAIDifficultyHint=
GetGameSpeed="Current Game Speed"
GetGameSpeed="Current game speed"
GetGameSpeedHint=
GetPlayerController="Player Controller"
GetPlayerController=~Player," controller"
GetPlayerControllerHint=
GetPlayerColor="Color Of Player"
GetPlayerColor="Color of ",~Player
GetPlayerColorHint=
GetPlayerSlotState="Player Slot Status"
GetPlayerSlotState=~Player," slot status"
GetPlayerSlotStateHint=
GetLastCreatedEffectBJ="Last Created Special Effect"
GetLastCreatedEffectBJ="Last created special effect"
GetLastCreatedEffectBJHint=
GetLastCreatedWeatherEffect="Last Created Weather Effect"
GetLastCreatedWeatherEffect="Last created weather effect"
GetLastCreatedWeatherEffectHint="This is the last weather effect created via an 'Environment - Create Weather Effect' trigger action."
GetLastCreatedTerrainDeformation="Last Created Terrain Deformation"
GetLastCreatedTerrainDeformation="Last created terrain deformation"
GetLastCreatedTerrainDeformationHint="This is the last terrain deformation created via any of the 'Environment - Create Terrain Deformation' trigger actions."
GetLastPlayedSound="Last Played Sound"
GetLastPlayedSound="Last played sound"
GetLastPlayedSoundHint="This is the last sound played via a 'Sound - Play Sound' or 'Cinematic - Transmission' trigger action."
GetLastPlayedMusic="Last Played Music"
GetLastPlayedMusic="Last played music"
GetLastPlayedMusicHint="This is the last music played via a 'Sound - Play Music' trigger action."
GetLastCreatedQuestBJ="Last Created Quest"
GetLastCreatedQuestBJ="Last created quest"
GetLastCreatedQuestBJHint="This is the last quest created via a 'Quest - Create Quest' trigger action."
GetLastCreatedQuestItemBJ="Last Created Quest Requirement"
GetLastCreatedQuestItemBJ="Last created quest requirement"
GetLastCreatedQuestItemBJHint="This is the last quest requirement created via a 'Quest - Create Quest Requirement' trigger action."
GetLastCreatedDefeatConditionBJ="Last Created Defeat Condition"
GetLastCreatedDefeatConditionBJ="Last created defeat condition"
GetLastCreatedDefeatConditionBJHint="This is the last defeat condition created via a 'Quest - Create Defeat Condition' trigger action."
GetClickedDialogBJ="Clicked Dialog"
GetClickedDialogBJ="Clicked dialog"
GetClickedDialogBJHint="When responding to a 'Dialog - Dialog Button Click' event, this refers to the dialog containing the clicked button."
GetLastCreatedButtonBJ="Last Created Dialog Button"
GetLastCreatedButtonBJ="Last created dialog Button"
GetLastCreatedButtonBJHint="This is the last dialog button created via a 'Dialog - Create Dialog Button' trigger action."
GetClickedButtonBJ="Clicked Dialog Button"
GetClickedButtonBJ="Clicked dialog button"
GetClickedButtonBJHint="When responding to a 'Dialog - Button Clicked' event, this refers to the dialog button that is being clicked."
GetLastCreatedLeaderboard="Last Created Leaderboard"
GetLastCreatedLeaderboard="Last created leaderboard"
GetLastCreatedLeaderboardHint="This is the last leaderboard created via a 'Leaderboard - Create Leaderboard' trigger action."
PlayerGetLeaderboardBJ="Leaderboard Of Player"
PlayerGetLeaderboardBJ="Leaderboard of ",~Player
PlayerGetLeaderboardBJHint="Each player can have at most one leaderboard."
GetLastCreatedMultiboard="Last Created Multiboard"
GetLastCreatedMultiboard="Last created multiboard"
GetLastCreatedMultiboardHint="This is the last multiboard created via a 'Multiboard - Create Multiboard' trigger action."
GetLastCreatedTimerBJ="Last Started Timer"
GetLastCreatedTimerBJ="Last started timer"
GetLastCreatedTimerBJHint="This is the last timer started via a 'Countdown Timer - Start Timer' trigger action."
GetExpiredTimer="Expiring Timer"
GetExpiredTimer="Expiring timer"
GetExpiredTimerHint="When responding to a 'Time - Timer Expires' event, this refers to the timer that is expiring."
GetLastCreatedTimerDialogBJ="Last Created Timer Window"
GetLastCreatedTimerDialogBJ="Last created timer window"
GetLastCreatedTimerDialogBJHint="This is the last timer window created via a 'Countdown Timer - Create Timer Window' trigger action."
GetLastCreatedGameCacheBJ="Last Created Game Cache"
GetLastCreatedGameCacheBJ="Last created game cache"
GetLastCreatedGameCacheBJHint="This is the last game cache created via a 'Game Cache - Create Game Cache' trigger action."
GetLastCreatedTextTag="Last Created Floating Text"
GetLastCreatedTextTag="Last created floating text"
GetLastCreatedTextTagHint="This is the last floating text created via a 'Floating Text - Create Floating Text' trigger action."
UnitInventorySizeBJ="Size of Inventory"
UnitInventorySizeBJ="Size of inventory for ",~Unit
UnitInventorySizeBJHint=
GetEventDamageSource="Damage Source"
GetEventDamageSource="Damage source"
GetEventDamageSourceHint="When responding to a 'Takes Damage' unit event, this refers to the source of damage being dealt."
GetAbilityEffectBJ="Ability Effect Art"
GetAbilityEffectBJ="",~Ability," effect ",~EffectType," ",~Index
GetAbilityEffectBJHint="This returns the model file path of an ability's effect art."
GetAbilitySoundBJ="Ability Effect Sound"
GetAbilitySoundBJ="",~Ability," sound ",~SoundType
GetAbilitySoundBJHint="This returns the sound file path of an ability's sound effect."
GetLastCreatedLightningBJ="Last Created Lightning Effect"
GetLastCreatedLightningBJ="Last created lightning effect"
GetLastCreatedLightningBJHint=
GetLightningColorRBJ="Red Color of Lightning"
GetLightningColorRBJ="Red color of ",~Lightning
GetLightningColorRBJHint="This returns a value between 0 and 1.  Use 'Lightning - Set Lightning Effect Color' to change the color of a Lightning Effect."
GetLightningColorGBJ="Green Color of Lightning"
GetLightningColorGBJ="Green color of ",~Lightning
GetLightningColorGBJHint="This returns a value between 0 and 1.  Use 'Lightning - Set Lightning Effect Color' to change the color of a Lightning Effect."
GetLightningColorBBJ="Blue Color of Lightning"
GetLightningColorBBJ="Blue color of ",~Lightning
GetLightningColorBBJHint="This returns a value between 0 and 1.  Use 'Lightning - Set Lightning Effect Color' to change the color of a Lightning Effect."
GetLightningColorABJ="Alpha Value of Lightning"
GetLightningColorABJ="Alpha value of ",~Lightning
GetLightningColorABJHint="This returns a value between 0 and 1.  A value of 0 corresponds to a completely invisible lightning effect.  Use 'Lightning - Set Lightning Effect Color' to change the alpha value of a Lightning Effect."
GetLastCreatedImage="Last Created Image"
GetLastCreatedImage="Last created image"
GetLastCreatedImageHint=
GetLastCreatedUbersplat="Last Created Ubersplat"
GetLastCreatedUbersplat="Last created ubersplat"
GetLastCreatedUbersplatHint=
FirstOfGroup="First Unit of Group"
FirstOfGroup="First unit of group ",~Group
FirstOfGroupHint="[WEU ADD-IN]"
GetAbilityEffectById="Buff Effect Art By Id"
GetAbilityEffectById="",~Buff," effect ",~EffectType," ",~Index
GetAbilityEffectByIdHint="[WEU ADD-IN]"
GetAbilitySoundById="Ability Effect Sound By Id"
GetAbilitySoundById="",~Ability," sound ",~SoundType
GetAbilitySoundByIdHint="[WEU ADD-IN]"
AddSpellEffectByIdLoc="Create Spell Effect At Point"
AddSpellEffectByIdLoc="Create a special effect using ",~Ability," 's ",~art," at ",~Point
AddSpellEffectByIdLocHint="Just here for COMPATIBILITY reasons. Better use the new 'Get Ability Effect' function. [WEU ADD-IN]"
AddSpellEffectById="Create Spell Effect At off-set"
AddSpellEffectById="Create a special effect using ",~Ability," 's ",~art," at ",~X," , ",~Y
AddSpellEffectByIdHint="Just here for COMPATIBILITY reasons. Better use the new 'Get Ability Effect' function. [WEU ADD-IN]"
AddSpellEffectTargetById="Create Spell Effect On Unit"
AddSpellEffectTargetById="Create a special effect using ",~Ability," 's ",~art," on ",~Unit," 's ",~Attachment Point
AddSpellEffectTargetByIdHint="Just here for COMPATIBILITY reasons. Better use the new 'Get Ability Effect' function. [WEU ADD-IN]"
GetUnitAbilityLevel="Level Of Buff For Unit"
GetUnitAbilityLevel="For "~Unit," the level of ",~Buff
GetUnitAbilityLevelHint="ust here for COMPATIBILITY reasons. Would return 1 if the unit has the buff [WEU ADD-IN]"
CreateMultiboard="Create Multiboard"
CreateMultiboard="Create new multiboard"
CreateMultiboardHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [WEU ADD-IN]"
GetLocalPlayer="Local Player"
GetLocalPlayer="Local player"
GetLocalPlayerHint="Use a player comparison with local player to do certain actions just for certain players on bnet. [WEU ADD-IN]"
MultiboardGetItem="Create Multiboard Item"
MultiboardGetItem="Create a new multiboard item for multiboard ",~board," in row ",~Row," and column ",~Column
MultiboardGetItemHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [WEU ADD-IN]"
TriggerRegisterVariableEvent="Add Variable Event"
TriggerRegisterVariableEvent="Add the following variable event to ",~Trigger,": ",~Variable," ",~Operator," ",~Value
TriggerRegisterVariableEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [WEU ADD-IN]"
TriggerRegisterTimerExpireEvent="Add Timer Expires Event"
TriggerRegisterTimerExpireEvent="Add the following timer expires event to ",~Trigger,": ",~Timer," expires"
TriggerRegisterTimerExpireEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [WEU ADD-IN]"
TriggerRegisterDialogEvent="Add Dialog Event"
TriggerRegisterDialogEvent="Add the following dialog event to ",~Trigger,": A button in ",~Dialog," was clicked"
TriggerRegisterDialogEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [WEU ADD-IN]"
TriggerRegisterDialogButtonEvent="Add Dialog Button Clicked Event"
TriggerRegisterDialogButtonEvent="Add the following dialog event to ",~Trigger,": ",~Button," was clicked"
TriggerRegisterDialogButtonEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [WEU ADD-IN]"
TriggerRegisterGameEvent="Add Game Event"
TriggerRegisterGameEvent="Add the following game event to ",~Trigger,": Game Event: ",~GameEventOption
TriggerRegisterGameEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [WEU ADD-IN]"
TriggerRegisterEnterRegion="Add Unit Enters Rect (Conditional) Event"
TriggerRegisterEnterRegion="Add the following unit enters rect (conditional) event to ",~Trigger,": A unit enters ",~Rect," Matching: ",~Condition
TriggerRegisterEnterRegionHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [WEU ADD-IN]"
TriggerRegisterLeaveRegion="Add Unit Leaves Rect (Conditional) Event"
TriggerRegisterLeaveRegion="Add the following unit leaves rect (conditional) event to ",~Trigger,": A unit leaves ",~Rect," Matching: ",~Condition
TriggerRegisterLeaveRegionHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [WEU ADD-IN]"
TriggerRegisterPlayerEvent="Add Player Event"
TriggerRegisterPlayerEvent="Add the following player event to ",~Trigger,": "~Player," "~PlayerEventOption
TriggerRegisterPlayerEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [WEU ADD-IN]"
TriggerRegisterPlayerUnitEventSimple="Add Player-Owned Unit Event"
TriggerRegisterPlayerUnitEventSimple="Add the following player-owned unit event to ",~Trigger,": A unit owned by ",~Player," ",~Event
TriggerRegisterPlayerUnitEventSimpleHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [WEU ADD-IN]"
TriggerRegisterPlayerUnitEvent="Add Player-Owned Unit Event (Conditional)"
TriggerRegisterPlayerUnitEvent="Add the following player-owned unit (conditional) event to ",~Trigger,": A unit owned by ",~Player," ",~Event," Matching: ",~Condition
TriggerRegisterPlayerUnitEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [WEU ADD-IN]"
TriggerRegisterPlayerStateEvent="Add Player Property Event"
TriggerRegisterPlayerStateEvent="Add the following player property event to ",~Trigger,": ",~Player," ",~PlayerState," ",~Operator," ",~Integer
TriggerRegisterPlayerStateEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [WEU ADD-IN]"
TriggerRegisterPlayerChatEvent="Add Chat Message Event"
TriggerRegisterPlayerChatEvent="Add the following chat message event to ",~Trigger,": ",~Player," sends a mesage containing ",~String," as ",~Match Type
TriggerRegisterPlayerChatEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [WEU ADD-IN]"
TriggerRegisterDeathEvent="Add Destructible Doodad Dies Event"
TriggerRegisterDeathEvent="Add the following destructible doodad event to ",~Trigger,": ",~Destructible Doodad," dies"
TriggerRegisterDeathEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [WEU ADD-IN]"
TriggerRegisterUnitStateEvent="Add Unit State Event"
TriggerRegisterUnitStateEvent="Add the following unit state event to ",~Trigger,": ",~Unit,"'s "~UnitState," ",~Operator," ",~Real
TriggerRegisterUnitStateEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [WEU ADD-IN]"
TriggerRegisterUnitEvent="Add Specific Unit Event"
TriggerRegisterUnitEvent="Add the following specific unit event event to ",~Trigger,": ",~Unit," ",~UnitEvent
TriggerRegisterUnitEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [WEU ADD-IN]"
TriggerRegisterUnitInRangeSimple="Add Unit In Range Event"
TriggerRegisterUnitInRangeSimple="Add the following unit in range event to ",~Trigger,": A unit comes within ",~Real," of ",~Unit
TriggerRegisterUnitInRangeSimpleHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [WEU ADD-IN]"
TriggerAddAction="Add Action"
TriggerAddAction="Take ",~Trigger," and add the action ",~Action
TriggerAddActionHint="Just here for COMPATIBILITY reasons. Better use the trigger action 'Add Action'. [WEU ADD-IN]"
TriggerAddCondition="Add Condtion"
TriggerAddCondition="Take ",~Trigger," and add the condition ",~Condition
TriggerAddConditionHint="Just here for COMPATIBILITY reasons. Better use the trigger action 'Add Condition'. [WEU ADD-IN]"
GetLastCreatedMultiboardBJ="Last Created Multiboard"
GetLastCreatedMultiboardBJ="Get last created multiboard"
GetLastCreatedMultiboardBJHint="This action is now OBSOLETE and won't do anything. Replaced by the new official multiboard functions."
GetLastCreatedMultiboardItemBJ="Last Created Multiboard Item"
GetLastCreatedMultiboardItemBJ="Get last created multiboard item"
GetLastCreatedMultiboardItemBJHint="This action is now OBSOLETE and won't do anything. Replaced by the new official multiboard functions."
GetUnitsSkillLevel="Get Hero Skill Level"
GetUnitsSkillLevel="Pick ",~Hero," and get his skill level for ",~Heroskill
GetUnitsSkillLevelHint="This action is now OBSOLETE and won't do anything. Replaced by the new 'Level Of Ability For Unit' function."
GetXOrder="Get Unit's Last Order"
GetXOrder="Get last order of ",~Unit
GetXOrderHint="This action is now OBSOLETE and won't do anything. Replaced by the new 'Current Order Of Unit' function."
GetXTargetLoc="Get Unit's Last Order Target Point"
GetXTargetLoc="Get last order target point of ",~Unit
GetXTargetLocHint="This action is now OBSOLETE and won't do anything. Replaced by the new 'Current Order Of Unit' function."
GetXTargetItem="Get Unit's Last Order Target Item"
GetXTargetItem="Get last order target item of ",~Unit
GetXTargetItemHint="This action is now OBSOLETE and won't do anything. Removed for better performance."
GetXTargetDest="Get Unit's Last Order Target Destructable"
GetXTargetDest="Get last order target destructable of ",~Unit
GetXTargetDestHint="This action is now OBSOLETE and won't do anything. Removed for better performance."
GetXTargetUnit="Get Unit's Last Order Target Unit"
GetXTargetUnit="Get last order target unit of ",~Unit
GetXTargetUnitHint="This action is now OBSOLETE and won't do anything. Removed for better performance."
GetXAttackedUnit="Get Unit's Last Attacked Unit"
GetXAttackedUnit="Get last attacked unit by ",~Unit
GetXAttackedUnitHint="This action is now OBSOLETE and won't do anything. Removed for better performance."
Lowercase="Lowercase String"
Lowercase="Lowercase this letter ",~letter
LowercaseHint="This action is now OBSOLETE. Replaced by the official 'Lowercase' function."
Uppercase="Uppercase String"
Uppercase="Uppercase this letter ",~letter
UppercaseHint="This action is now OBSOLETE. Replaced by the official 'Uppercase' function."
GetLength="Get Length Of String"
GetLength="Get the length of this string ",~string
GetLengthHint="This action is now OBSOLETE. Replaced by the official 'Length of String' function."
GetCurrentManaBonusOld="Get Mana Bonus"
GetCurrentManaBonusOld="Get current mana bonus of units of player ",~Player," that use the ",~UpgradeSet
GetCurrentManaBonusOld="This action is now OBSOLETE and won't do anything. Replaced by the new 'Get Mana Bonus' action."
GetCurrentLifeBonusOld="Get Life Bonus"
GetCurrentLifeBonusOld="Get current life bonus of units of player ",~Player," that use the ",~UpgradeSet
GetCurrentLifeBonusOldHint="This action is now OBSOLETE and won't do anything. Replaced by the new 'Get Life Bonus' action."
GetCurrentDamageBonusOld="Get Damage Bonus"
GetCurrentDamageBonusOld="Get current damage bonus of units of player ",~Player," that use the ",~UpgradeSet
GetCurrentDamageBonusOld="This action is now OBSOLETE and won't do anything. Replaced by the new 'Get Life Bonus' action."
GetCurrentLeechingBonus="Get Life Leeching Bonus"
GetCurrentLeechingBonus="Get current life leeching bonus of ",~Unit
GetCurrentLeechingBonusHint="This action is OBSOLETE because it doesn't work."
HasPlayerTPOpen="Has Player an Open Town Portal"
HasPlayerTPOpen="Has ",~Player," an open town portal"
HasPlayerTPOpenHint="This action is now OBSOLETE. For some reason it has been added twice."
IntegerTertiaryOp="Tertiary Integer Option"
IntegerTertiaryOp="If ",~Condition," is equal to true then use ",~Nr," else use ",~Nr
IntegerTertiaryOpHint="[WEU ADD-IN]"
CreateTrackable="Create Trackable Object"
CreateTrackable="Create trackable object using path ",~Path," at Location (",~X,",",~Y,") facing ",~Degrees
CreateTrackableHint="You can register mouseover and mouseclick events on the object but can't remove it anymore. [WEU ADD-IN]"
GetRescuer="Rescuing Unit"
GetRescuer="Get rescuing unit"
GetRescuerHint="For unis is rescued event [WEU ADD-IN]"
GetWinningPlayer="Winning Player"
GetWinningPlayer="Get winning player"
GetWinningPlayerHint="For victory event [WEU ADD-IN]"
GetEventUnitState="Get Triggering Unit State"
GetEventUnitState="Get triggering unit state"
GetEventUnitStateHint="To see, which unitstate event fired the trigger [WEU ADD-IN]"
GetEventPlayerState="Get Triggering Player State"
GetEventPlayerState="Get Triggering Player State"
GetEventPlayerStateHint="To see, which playerstate event fired the trigger [WEU ADD-IN]"
IsTimerDialogDisplayed="Timer Dialog Is Displayed"
IsTimerDialogDisplayed=~Timer Window," is displayed"
IsTimerDialogDisplayedHint="A timer window is showing [WEU ADD-IN]"
IsLeaderboardDisplayed="Leaderboard Is Displayed"
IsLeaderboardDisplayed=~Leaderboard," is displayed"
IsLeaderboardDisplayedHint="[WEU ADD-IN]"
CompareLocationsBJ="Location Matches Location"
CompareLocationsBJ=~Point," matches ",~Point
CompareLocationsBJHint="Use this to compare locations [WEU ADD-IN]"
CompareRectsBJ="Rect Matches Rect"
CompareRectsBJ=~Rect," matches ",~Rect
CompareRectsBJHint="Use this to compare rects [WEU ADD-IN]"
RectContainsCoords="Rect Contains Coordinates"
RectContainsCoords=~Rectangle," contains (",~Real,", ",~Real,")"
RectContainsCoordsHint="A rect contains the point (x,y) [WEU ADD-IN]"
IsPointInRegion="Region Contains Coordinates"
IsPointInRegion=~Region," contains offset (",~Real,", ",~Real,")"
IsPointInRegionHint="[WEU ADD-IN]"
QueuedTriggerRemoveByIndex="Remove Trigger From Trigger Queue by Index"
QueuedTriggerRemoveByIndex="Remove the trigger with index",~Index," from the trigger queue"
QueuedTriggerRemoveByIndexHint="Removes a trigger from the trigger queue, shifting other triggers down to fill the unused space. If the currently running trigger is removed in this manner, this function does NOT attempt to run the next trigger. [WEU ADD-IN]"
IsUnitRace="Unit Race Check"
IsUnitRace=~Unit," is a ",~Race,
IsUnitRaceHint="Checks what race a unit is [WEU ADD-IN]"
GetEventGameState="Get Triggering Game State"
GetEventGameState="Triggering Game State"
GetEventGameStateHint="To see, which gamestate event fired the trigger [WEU ADD-IN]"
GetIntegerGameState="Game State"
GetIntegerGameState=~Gamestate
GetIntegerGameStateHint="[WEU ADD-IN]"
IssueNeutralImmediateOrderById="Player Buy Unit from Store"
IssueNeutralImmediateOrderById="Successful: For ",~Player," order ",~Shop," to sell a unit of type ",~Type
IssueNeutralImmediateOrderByIdHint="[WEU ADD-IN]"
UnitAddItemByIdSwapped="Unit Create Item For Hero"
UnitAddItemByIdSwapped="Successful: Create ",~Item-Type," and give it to ",~Hero
UnitAddItemByIdSwappedHint="[WEU ADD-IN]"
IsUnitInForce="Unit In Player Group"
IsUnitInForce=~Unit," is in ",~Player Group
IsUnitInForceHint="[WEU ADD-IN]"
IsUnitOwnedByPlayer="Unit Is Owned by Player"
IsUnitOwnedByPlayer=~Unit," is owned by ",~Player
IsUnitOwnedByPlayerHint="[WEU ADD-IN]"
IsUnitInRange="Is Unit in Range of Unit"
IsUnitInRange="Is ",~Unit," near ",~Unit," and withing a range of ",~Range
IsUnitInRangeHint="[WEU ADD-IN]"
IsUnitInRangeLoc="Is Unit in Range of Point"
IsUnitInRangeLoc="Is ",~Unit," near ",~Point," and within a range of ",~Range
IsUnitInRangeLocHint="[WEU ADD-IN]"
LeaderboardGetItemCount="Player Count"
LeaderboardGetItemCount="Player count of ",~Leaderboard
LeaderboardGetItemCountHint="[WEU ADD-IN]"
QueuedTriggerGetIndex="Index Of Queued Trigger"
QueuedTriggerGetIndex="Index of ",~Trigger," in the trigger queue"
QueuedTriggerGetIndexHint="Searches the queue for a given trigger, returning the index of the trigger within the queue if it is found, or -1 if it is not found [WEU ADD-IN]"
LeaderboardGetLabelText="Title"
LeaderboardGetLabelText="Title of ",~Leaderboard
LeaderboardGetLabelTextHint="[WEU ADD-IN]"
CreateDestructableZ="Create with Z offset"
CreateDestructableZ="Create a ",~Destructible-Type," at offset(",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDestructableZHint="The facing angle is expected in degrees, with 0 being east and 90 being north. The offset is taken as (X, Y, Z) [WEU ADD-IN]"
CreateDeadDestructableZ="Create with Z offset (dead)"
CreateDeadDestructableZ="Create a dead ",~Destructible-Type," at offset (",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDeadDestructableZHint="The facing angle is expected in degrees, with 0 being east and 90 being north. The offset is taken as (X, Y, Z) [WEU ADD-IN]"
GetEventDetectingPlayer="Detecting Player"
GetEventDetectingPlayer="Detecting Player"
GetEventDetectingPlayerHint="When responding to a 'Unit Is detected' unit event, this refers to the player, who detects the unit [WEU ADD-IN]"
CreateTimer="Create Timer"
CreateTimer="Create Timer"
CreateTimerHint="Use this to initialize timer array items [WEU ADD-IN]"
CreateTrigger="Create Trigger"
CreateTrigger="Create Trigger"
CreateTriggerHint="Use this to initialize trigger arrays [WEU ADD-IN]"
CreateGroup="Create Unit Group"
CreateGroup="Create Unit Group"
CreateGroupHint="Use this to initialize unit group arrays [WEU ADD-IN]"
DialogCreate="New Dialog"
DialogCreate="New Dialog"
DialogCreateHint="Used to initialize a dialog array or clear a dialog variable [WEU ADD-IN]"
IsLocationInRegion="Is Point In Region"
IsLocationInRegion="Does ",~Region," contain point ",~Location
IsLocationInRegionHint="[WEU ADD-IN]"
IsUnitInRegion="Is Unit In Region"
IsUnitInRegion="Does ",~Region," contain unit ",~Unit
IsUnitInRegionHint="[WEU ADD-IN]"
CreateTimerBJ="Create Timer"
CreateTimerBJ="Create a periodic ",~Choose," timer lasting ",~time
CreateTimerBJHint="[WEU ADD-IN]"
CreateRegion="Create Region"
CreateRegion="Create a empty region"
CreateRegionHint="Used to create empty regions to which you can add cells [WEU ADD-IN]"
GetTriggeringTrackable="Triggering Trackable"
GetTriggeringTrackable="Triggering trackable"
GetTriggeringTrackableHint="[WEU ADD-IN]"
CreateItemLoc="Create Item At Location"
CreateItemLoc="Create ",~Item," at ",~Point
CreateItemLocHint="[WEU ADD-IN]"
CreateUnit="Create Unit At Offset"
CreateUnit="For ",~Player," create a unit of type ",~Type," at offset (",~X,", ",~Y,") facing ",~Direction," degrees"
CreateUnitHint="[WEU ADD-IN]"
CreateUnitAtLoc="Create Unit At Location"
CreateUnitAtLoc="For ",~Player," create a unit of type ",~Type," at location ",~Location," facing ",~Direction," degrees"
CreateUnitAtLocHint="[WEU ADD-IN]"
ReviveHeroLoc="Revive Hero (Instantly)"
ReviveHeroLoc="Successful: Instantly revive ",~Hero," at ",~Point,", ",~Show/Hide," revival graphics"
ReviveHeroLocHint="This revives a dead Hero at a spot on the map, even if the player has no altar.  You can also revive a Hero by issuing a 'Revive' order to an appropriate altar, targeting the hero you wish to revive. [WEU ADD-IN]"
UnitMakeAbilityPermanent="Unit Make Ability Permanent"
UnitMakeAbilityPermanent="Successful: For ",~whichUnit," set ability state to ",~permanent," for ability "~abilityId
UnitMakeAbilityPermanentHint="[WEU ADD-IN]"
UnitAddAbilityBJ="Unit Add Ability"
UnitAddAbilityBJ="Successful: Add ",~Ability," to ",~Unit
UnitAddAbilityBJHint="[WEU ADD-IN]"
UnitRemoveAbilityBJ="Unit Remove Ability"
UnitRemoveAbilityBJ="Successful: Remove ",~Ability," from ",~Unit
UnitRemoveAbilityBJHint="In most cases, removing an ability in this manner is permanent. [WEU ADD-IN]"
UnitRemoveBuffBJ="Unit Remove Specific Buff"
UnitRemoveBuffBJ="Successful: Remove ",~Buff," buff from ",~Unit
UnitRemoveBuffBJHint="[WEU ADD-IN]"
UnitAddItemSwapped="Give Item To Hero"
UnitAddItemSwapped="Successful: Give ",~Item," to ",~Hero
UnitAddItemSwappedHint="[WEU ADD-IN]"
UnitAddItemToSlotById="Create Item In Hero Inventory Slot"
UnitAddItemToSlotById="Successful: Give ",~Hero," a ",~Item," in slot ",~Index
UnitAddItemToSlotByIdHint="Creates an item in a specific item slot [WEU ADD-IN]"
UnitUseItem="Unit Use Item"
UnitUseItem="Successful: Order ",~Hero," to use ",~Item
UnitUseItemHint="[WEU ADD-IN]"
UnitUseItemTarget="Unit Use Item On A Unit"
UnitUseItemTarget="Successful: Order ",~Hero," to use ",~Item," on ",~Unit
UnitUseItemTargetHint="[WEU ADD-IN]"
UnitUseItemPointLoc="Unit Use Item On A Point"
UnitUseItemPointLoc="Successful: Order ",~Hero," to use ",~Item," on ",~Point
UnitUseItemPointLocHint="[WEU ADD-IN]"
UnitUseItemDestructable="Unit Use Item On A Destructible"
UnitUseItemDestructable="Successful: Order ",~Hero," to use ",~Item," on ",~Destructible
UnitUseItemDestructableHint="[WEU ADD-IN]"
IssueImmediateOrder="Unit Issue Order With No Target"
IssueImmediateOrder="Successful: Order ",~Unit," to ",~Order
IssueImmediateOrderHint="[WEU ADD-IN]"
IssuePointOrderLoc="Unit Issue Order Targeting A Point"
IssuePointOrderLoc="Successful: Order ",~Unit," to ",~Order," ",~Point
IssuePointOrderLocHint="[WEU ADD-IN]"
IssueTargetOrder="Unit Issue Order Targeting A Unit"
IssueTargetOrder="Successful: Order ",~Unit," to ",~Order," ",~Unit
IssueTargetOrderHint="[WEU ADD-IN]"
IssueInstantTargetOrder="Give Item from Hero to Hero"
IssueInstantTargetOrder="Successful: Order ",~Hero," to ",~Order," ",~Item," to ",~Hero
IssueInstantTargetOrderHint="The ordered hero will walk to the target hero to hand the item over. [WEU ADD-IN]"
IssueTargetDestructableOrder="Unit Issue Order Targeting A Destructible"
IssueTargetDestructableOrder="Successful: Order ",~Unit," to ",~Order," ",~Destructible
IssueTargetDestructableOrderHint="[WEU ADD-IN]"
IssueTargetOrderBJ="Unit Issue Order Targeting An Item"
IssueTargetOrderBJ="Successful: Order ",~Unit," to ",~Order," ",~Item
IssueTargetOrderBJHint="[WEU ADD-IN]"
IssueBuildOrderByIdLocBJ="Unit Issue Build Order"
IssueBuildOrderByIdLocBJ="Successful: Order ",~Unit," to build a ",~Unit-Type," at ",~Point
IssueBuildOrderByIdLocBJHint="[WEU ADD-IN]"
IssueTrainOrderByIdBJ="Unit Issue Train/Upgrade Order"
IssueTrainOrderByIdBJ="Successful: Order ",~Unit," to train/upgrade to a ",~Unit-Type
IssueTrainOrderByIdBJHint="This action can be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep. [WEU ADD-IN]"
IssueUpgradeOrderByIdBJ="Unit Issue Research Order"
IssueUpgradeOrderByIdBJ="Successful: Order ",~Unit," to research ",~Tech-Type
IssueUpgradeOrderByIdBJHint="Weapons and armor upgrades can be researched multiple times via this trigger action. [WEU ADD-IN]"
GroupTargetOrder="Group Issue Order Targeting A Unit"
GroupTargetOrder="Successful: Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderHint="This will issue an order to at most 12 units from the specified unit group.  Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [WEU ADD-IN]"
GroupTargetDestructableOrder="Group Issue Order Targeting A Destructible"
GroupTargetDestructableOrder="Successful: Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetDestructableOrderHint="This will issue an order to at most 12 units from the specified unit group. [WEU ADD-IN]"
GroupTargetOrderBJ="Group Issue Order Targeting An Item"
GroupTargetOrderBJ="Successful: Order ",~Unit Group," to ",~Order," ",~Item
GroupTargetOrderBJHint="This will issue an order to at most 12 units from the specified unit group.  Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [WEU ADD-IN]"
GroupPointOrderLoc="Group Issue Order Targeting A Point"
GroupPointOrderLoc="Successful: Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderLocHint="This will issue an order to at most 12 units from the specified unit group. [WEU ADD-IN]"
GroupImmediateOrder="Group Issue Order With No Target"
GroupImmediateOrder="Successful: Order ",~Unit Group," to ",~Order
GroupImmediateOrderHint="This will issue an order to at most 12 units from the specified unit group. [WEU ADD-IN]"
GroupTrainOrderByIdBJ="Group Issue Train Order"
GroupTrainOrderByIdBJ="Successful: Order ",~Unit Group," to train a ",~Unit-Type
GroupTrainOrderByIdBJHint="This action can also be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep.  This will issue an order to at most 12 units from the specified unit group. [WEU ADD-IN]"
RandomDistChoose="Get Random Item From Pool"
RandomDistChoose="Get a random item from your own item pool"
RandomDistChooseHint="Use 'Add Random Item to Pool' to create your own item pool [WEU ADD-IN]"
GetAnzahlSpieler="Get Number Of Players"
GetAnzahlSpieler="Get Number of actually playing players"
GetAnzahlSpielerHint=
TriggerName2Function="Trigger Name To Function"
TriggerName2Function="Convert the trigger name ",~name," to a function name"
TriggerName2FunctionHint="Use this with Execut Function to access the action part of a trigger"
WordParser="Get Word X Of String"
WordParser="Take string ",~String," and get word number ",~Nr
WordParserHint=
CountWords="Get Number Of Words"
CountWords="Get number of words of string ",~string
CountWordsHint=
Abilcode2Heroskillcode="Custom Ability"
Abilcode2Heroskillcode="Custom Ability ",~Abil
Abilcode2HeroskillcodeHint="Use this to get your custom hero skills"
Farbverlauf="Color Run String"
Farbverlauf="Make color run from ",~hexstring," to ",~hexstring," for string ",~string
FarbverlaufHint=
Integer2UnitId="Convert Integer To Unit-Type"
Integer2UnitId="Unit-type(",~4-Letter-Code,")"
Integer2UnitIdHint="To get custom units edited with an external unit editor"
Integer2DoodadId="Convert Integer To Destructable-Type"
Integer2DoodadId="Destructable-type(",~4-Letter-Code,")"
Integer2DoodadIdHint="To get custom destructables edited through slk editing"
Integer2ItemId="Convert Integer To Item-Type"
Integer2ItemId="Item-type(",~4-Letter-Code,")"
Integer2ItemIdHint="To get custom items edited with an external unit editor"
Integer2SpellId="Convert Integer To Spell-Type"
Integer2SpellId="Spell-type(",~4-Letter-Code,")"
Integer2SpellIdHint="To get custom spells edited with an external spell editor"
Integer2HeroSpellId="Convert Integer To Spell-Type"
Integer2HeroSpellId="Spell-type(",~4-Letter-Code,")"
Integer2HeroSpellIdHint="To get custom spells edited with an external spell editor"
GetTriggerEventId="Get Triggering Event"
GetTriggerEventId="Get the event that fired the trigger"
GetTriggerEventIdHint="[WEU ADD-IN]"
GetTheTriggerOrderString="Get Issued Order String"
GetTheTriggerOrderString="Get the issued order string"
GetTheTriggerOrderStringHint=
ColoredString="Colored String"
ColoredString="Use brightness ",~Brightness," and color ",~Color," and color this text: ",~Text
ColoredStringHint="For those who don't know how to color a string"
GetDetectedUnit="Get Detected Unit"
GetDetectedUnit="Get detected unit"
GetDetectedUnitHint="Event response for the unit detected event [WEU ADD-IN]"
GetTriggeringRegion="Get Triggering Region"
GetTriggeringRegion="Get triggering region"
GetTriggeringRegionHint="Event response for unit enters/leaves region events [WEU ADD-IN]"
CreateForce="Create Force"
CreateForce="Create new force"
CreateForceHint="Used to initialize force arrays [WEU ADD-IN]"
GetPlayerTypedUnitCount="Count Units of Player of Type"
GetPlayerTypedUnitCount="Count units of player ",~Player," of type ",~unitname," and include incomplete units ",~Include," and include currently upgrading buildings ",~Include
GetPlayerTypedUnitCountHint="Use the names of the 6th column of UnitUI.slk as unitnames [WEU ADD-IN]"
AngleDifference="Angle Difference"
AngleDifference="Difference between ",~Angle," and ",~Angle
AngleDifferenceHint=
String2Colorhex="Custom Color"
String2Colorhex="Convert hex ",~string," to color"
String2ColorhexHint="Valid characters: 0 - 9, a - f"
HasHeroItemOfClass="Has Hero Item of Class"
HasHeroItemOfClass="Has the hero ",~Hero," a item of class "~Class
HasHeroItemOfClassHint=
IsItemWorn="Is Item Worn"
IsItemWorn="Is item ",~Item," in the inventory of a hero"
IsItemWornHint=
ItemOfClassExistsInGame="Item Of Class Exists in Game"
ItemOfClassExistsInGame="Does Item of Class ",~class," exist in game"
ItemOfClassExistsInGameHint=
HasUnitAbility="Does Unit Have Ability"
HasUnitAbility="Does ",~Unit," have ",~Ability
HasUnitAbilityHint=
GetRelativeManaRegenBonus="Get Mana Regeneration Bonus"
GetRelativeManaRegenBonus="Get current mana regeneration bonus of units of player ",~Player," that use the ",~UpgradeSet
GetRelativeManaRegenBonusHint="(UPGR) Requires advanced upgrades."
GetRelativeLifeRegenBonus="Get Life Regeneration Bonus"
GetRelativeLifeRegenBonus="Get current life regeneration bonus of units of player ",~Player," that use the ",~UpgradeSet
GetRelativeLifeRegenBonusHint="(UPGR) Requires advanced upgrades."
GetRelativeAttackRateBonus="Get Attack Rate Bonus"
GetRelativeAttackRateBonus="Get current attack rate bonus of units of player ",~Player," that use the ",~UpgradeSet
GetRelativeAttackRateBonusHint="(UPGR) Requires advanced upgrades."
GetCurrentAttackDiceBonus="Get Attack Dice Bonus"
GetCurrentAttackDiceBonus="Get current attack dice bonus of units of player ",~Player," that use the ",~UpgradeSet
GetCurrentAttackDiceBonusHint="(UPGR) Requires advanced upgrades."
GetCurrentManaBonus="Get Mana Bonus"
GetCurrentManaBonus="Get current mana bonus of ",~Unit
GetCurrentManaBonusHint="(ABIL) Requires advanced abilities."
GetCurrentLifeBonus="Get Life Bonus"
GetCurrentLifeBonus="Get current life bonus of ",~Unit
GetCurrentLifeBonusHint="(ABIL) Requires advanced abilities."
GetCurrentDamageBonus="Get Damage Bonus"
GetCurrentDamageBonus="Get current damage bonus of ",~Unit
GetCurrentDamageBonusHint="(ABIL) Requires advanced abilities."
GetCurrentDefenseBonus="Get Defense Bonus"
GetCurrentDefenseBonus="Get current defense bonus of ",~Unit
GetCurrentDefenseBonusHint="(ABIL) Requires advanced abilities."
GetCurrentSightRangeBonus="Get Sight Range Bonus"
GetCurrentSightRangeBonus="Get current sight range bonus of ",~Unit
GetCurrentSightRangeBonusHint="(ABIL) Requires advanced abilities."
GetCurrentRangeBonus="Get Attack Range Bonus"
GetCurrentRangeBonus="Get current attack range bonus of units of player ",~Player," that use the ",~UpgradeSet
GetCurrentRangeBonus="(UPGR) Requires advanced upgrades."
GetCurrentMoveRateBonus="Get Move Rate Bonus"
GetCurrentMoveRateBonus="Get current move rate bonus of units of player ",~Player," that use the ",~UpgradeSet
GetCurrentMoveRateBonus="(UPGR) Requires advanced upgrades."
GetCurrentMissileBonus="Get Missile Bonus"
GetCurrentMissileBonus="Get current missile bonus of units of player ",~Player," that use the ",~UpgradeSet
GetCurrentMissileBonus="(UPGR) Requires advanced upgrades."
GetDialogOfTimer="Get Dialog of Timer"
GetDialogOfTimer="Get the timer dialog of the timer ",~Timer
GetDialogOfTimerHint="In order to be able to show/hide timer windows of advanced timers"
IstUnfertig="Is Unit Under Construction"
IstUnfertig="Is unit ",~Unit," currently under construction"
IstUnfertigHint=
WirdAusgebaut="Is Building Being Upgraded"
WirdAusgebaut="Is building ",~Building," currently being upgraded"
WirdAusgebautHint=
IstErweckt="Has Unit Been Summoned"
IstErweckt="Has unit ",~Unit," been summoned"
IstErwecktHint="Because the unit type Summoned check only finds out if the unit type is normally summoned and not if the unit has actually been summoned"
GetIndexOfLastMovingSFX="Get Last Created Moving Special Effect Number"
GetIndexOfLastMovingSFX="Get the index number of the last created moving special effect"
GetIndexOfLastMovingSFXHint=
FindNextUnit="Find Next Unit"
FindNextUnit="Find the unit next to ",~Loc
FindNextUnitHint=
FindNextUnitMatching="Find Next Unit Matching Condition"
FindNextUnitMatching="Find the first unit next to ",~Loc," that matches ",~Condition
FindNextUnitMatchingHint=
FindNextDoodad="Find Next Doodad"
FindNextDoodad="Find the doodad next to ",~Loc
FindNextDoodadHint=
FindNextItem="Find Next Item"
FindNextItem="Find the item next ot ",~Loc
FindNextItemHint=
MDLPath2Burnstyle="Use Own Model"
MDLPath2Burnstyle="Use model ",~Path
MDLPath2BurnstyleHint="To be able to choose your own special effect models"
Rect2Region="Convert Rect to Region"
Rect2Region="Convert ",~Rect," to a region"
Rect2RegionHint="To be able to use the advanced Region Events"
GetLastMultipleChoiceBJ="Last Chosen Multiple Choice Line"
GetLastMultipleChoiceBJ="Last chosen multiple choice line of ",~Player
GetLastMultipleChoiceBJHint="(SOUND) Requires the sound files. To get the line chosen in the last shown multiple choice dialog"
UnitIgnoreAlarmToggled="Does Unit Ignore Alarm"
UnitIgnoreAlarmToggled="Does unit ",~Unit," ignore alarm"
UnitIgnoreAlarmToggledHint="[WEU ADD-IN]"
HaveStoredInteger="Is Integer Stored"
HaveStoredInteger="Is Integer in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredIntegerHint="[WEU ADD-IN]"
HaveStoredBoolean="Is Boolean Stored"
HaveStoredBoolean="Is Boolean in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredBooleanHint="[WEU ADD-IN]"
HaveStoredReal="Is Real Stored"
HaveStoredReal="Is Real in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredRealHint="[WEU ADD-IN]"
HaveStoredUnit="Is Unit Stored"
HaveStoredUnit="Is Unit in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredUnitHint="[WEU ADD-IN]"
HaveStoredString="Is String Stored"
HaveStoredString="Is String in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredStringHint="[WEU ADD-IN]"
exitwhen="exitwhen"
exitwhen="exitwhen ",~Condition
exitwhenHint="use between loop and endloop, specifies when to exit the loop. (only works with the Custom Script action) [WEU ADD-IN]"
AddSpecialEffectLoc="Create Special Effect at Point"
AddSpecialEffectLoc="Create a special effect using ",~Model File," at ",~Point
AddSpecialEffectLocHint="[WEU ADD-IN]"
AddSpecialEffect="Create Special Effect at Off-set"
AddSpecialEffect="Crate a special effect using ",~Model File," at ",~X," , ",~Y
AddSpecialEffectHint="[WEU ADD-IN]"
AddSpecialEffectTarget="Create Special Effect at target unit"
AddSpecialEffectTarget="Create a special effect using ",~Model File," On ",~Unit," 's ",~Attachment Point
AddSpecialEffectTargetHint="[WEU ADD-IN]"
String2PointOrder="Convert String to Point Targeted Order"
String2PointOrder="Convert ",~String," to point targeted order"
String2PointOrderHint=
String2UnitOrder="Convert String to Unit Targeted Order"
String2UnitOrder="Convert ",~String," to unit targeted order"
String2UnitOrderHint=
String2DestOrder="Convert String to Destructable Targeted Order"
String2DestOrder="Convert ",~String," to destructable targeted order"
String2DestOrderHint=
String2NoOrder="Convert String to Untargeted Order"
String2NoOrder="Convert ",~String," to untargeted order"
String2NoOrderHint=
GetFollowOptions="Get Camera Follow Option"
GetFollowOptions="Get if ",~Player,"'s camera adjusts ",~field," following a unit"
GetFollowOptionsHint="Will only work if 'Camera - Follow Unit' has been used before"
GetFollowDetails="Get Camera Follow Details"
GetFollowDetails="Get ",~Player,"'s ",~field," of game camera following a unit"
GetFollowDetailsHint="Will only work correctly if 'Camera - Follow Unit' has been used before"
GetDimensionalIndex="Get 2 Dimensional Array Index"
GetDimensionalIndex="Get array index for an array with a size of ",~Nr," for the first dimension and the First Dimension Index ",~Index1," and the Second Dimension Index ",~Index2
GetDimensionalIndexHint="You could loop through the inventory slots of all units of an unit array"
JoinAnimationTags="Combine Animation Tags"
JoinAnimationTags="Combine ",~Anim," and ",~Tag
JoinAnimationTagsHint="Use this to combine Animationnames with Animation Tags. Use the previewer to find out other animation tag names. Some animation names don't work - use 'Set Animation by Index' in this case"
GetXLearnedSkill="Get Unit's Last Learned Skill"
GetXLearnedSkill="Get last learned skill of ",~Unit
GetXLearnedSkillHint="This function will only return hero skills"
GetXResearchedUpgrade="Get Unit's Last Researched Upgrade"
GetXResearchedUpgrade="Get last researched upgrade of ",~Unit
GetXResearchedUpgradeHint=
GetXSummonedItem="Get Unit's Last Summoned Unit"
GetXSummonedItem="Get last summoned unit by ",~Unit
GetXSummonedItemHint=
GetXAcquiredItem="Get Unit's Last Acquired Item"
GetXAcquiredItem="Get last acquired item of ",~Unit
GetXAcquiredItemHint=
GetXDroppedItem="Get Unit's Last Dropped Item"
GetXDroppedItem="Get last dropped item of ",~Unit
GetXDroppedItemHint=
GetXSoldUnit="Get Unit's Last Sold Unit"
GetXSoldUnit="Get last sold unit of ",~Unit
GetXSoldUnitHint=
GetXSoldItem="Get Unit's Last Sold Item"
GetXSoldItem="Get last sold item of ",~Unit
GetXSoldItemHint=
GetXTrainedUnit="Get Unit's Last Trained Unit"
GetXTrainedUnit="Get last trained unit by ",~Unit
GetXTrainedUnitHint=
GetXBuiltConstruction="Get Unit's Last Built Structure"
GetXBuiltConstruction="Get last built structure by ",~Unit
GetXBuiltConstructionHint=
GetWTSString="Get WTS String"
GetWTSString="Get string ",~Nr," from the wts file"
GetWTSStringHint="The number must be between 0 and 999"
Itemcode2Dummyitem="Use Custom Item"
Itemcode2Dummyitem="Custom item ",~Item
Itemcode2DummyitemHint="This will never work for existing blizzard items and is only supposed to be used with items based off of the 'Advanced - Dummy Items'"
Xor="Xored Boolean"
Xor="Xor ",~booleanA," and ",~booleanB
XorHint="Will return true if one of the 2 booleans is true and false if both are true or both are false"
PlayerHasPortalOpened="Has Player Opened a Town Portal"
PlayerHasPortalOpened="Has ",~Player," opened a town portal"
PlayerHasPortalOpenedHint="(ITEMS) (ABIL) Requries advanced items and abilities. For use with the 'Advanced - Town Portal System'"
GetCamFollowUnit="Get Unit Followed by Camera"
GetCamFollowUnit="Get the unit followed by the Camera of ",~Player
GetCamFollowUnitHint="Will only return a unit if 'Camera - Follow Unit' has been specified for that player"
GetKeyControlUnit="Get Key Control Unit"
GetKeyControlUnit="Get the unit controlled by ",~Player," with his arrow keys"
GetKeyControlUnitHint="Will only return a unit if arrow key control has been enabled for this player"
IsCamFollowEnabled="Does Camera Follow a Unit"
IsCamFollowEnabled="Does ",~Player,"'s camera follow a unit"
IsCamFollowEnabledHint=
IsKeyControlEnabledForPlayer="Is Arrow Key Control Enabled"
IsKeyControlEnabledForPlayer="Does ",~Player," control a unit with his arrow keys"
IsKeyControlEnabledForPlayerHint=
TertiaryStringOp="Tertiary String Option"
TertiaryStringOp="If ",~Condition," is equal to true then use ",~String," else use ",~String
TertiaryStringOpHint=
GetLastClickedDialogButtonNrOfPlayer="Last Clicked Dialog Button Index"
GetLastClickedDialogButtonNrOfPlayer="Last clicked dialog button number of ",~Player
GetLastClickedDialogButtonNrOfPlayerHint="This will only work with the advanced dialogs"
DeleteCharFromString="Delete Character From String"
DeleteCharFromString="Take ",~String," and delete all instances of ",~Character," from the string"
DeleteCharFromStringHint=
DeleteSubStringFromString="Delete Substring From String"
DeleteSubStringFromString="Take ",~String," and delete all instances of ",~Substring," from the string"
DeleteSubStringFromStringHint=
SyncInteger="Synchronize Integer"
SyncInteger="For ",~Player," synchronize the integer ",~Int
SyncIntegerHint="This will sync unsynced integers"
GetTPCenter="Town Portal Center"
GetTPCenter="Center of the town portal system"
GetTPCenterHint="(ITEMS) (ABIL) Requries advanced items and abilities."
GetCurrentTPTargetPointOfPlayer="Position Of Town Portal"
GetCurrentTPTargetPointOfPlayer="Position of the town portal currently opened by ",~Player
GetCurrentTPTargetPointOfPlayerHint="(ITEMS) (ABIL) Requries advanced items and abilities."
GetCustomStringValue="Unit's Custom String Value"
GetCustomStringValue=~Unit,"'s custom string value"
GetCustomStringValueHint=
GetCustomRealValue="Unit's Custom Real Value"
GetCustomRealValue=~Unit,"'s custom real value"
GetCustomRealValueHint=
GetCustomBooleanValue="Unit's Custom Boolean Value"
GetCustomBooleanValue=~Unit,"'s custom boolean value"
GetCustomBooleanValueHint=
IsPlayerCommandable="Is AI Player Commandable"
IsPlayerCommandable="Is ",~Player," a commandable AI player"
IsPlayerCommandableHint="(AI) Requires the AMAI scripts. If the player is not a commandable AI player all AI commands will obviously fail"
GetCommandablePlayers="Commandable AI Players"
GetCommandablePlayers="Commandable AI Players"
GetCommandablePlayersHint="(AI) Requires the AMAI scripts. Only commandable AI players can be commanded with the advanced AI trigger actions"
GetRandomSelectionHeroType="Random Hero Selection Type"
GetRandomSelectionHeroType="Choose a random hero-type"
GetRandomSelectionHeroTypeHint="(SEL) Requires Hero Selection files. This will only choose among all heros created with 'Advanced - Hero - Create Selectable Hero'. Use it together with the event 'A Hero is Selected (Random)'"
GetSelectableHeros="Selectable Heros"
GetSelectableHeros="All selectable heros"
GetSelectableHerosHint="(SEL) Requires Hero Selection files. This will return all heros created with the action 'Advanced - Hero - Create Selectable Hero'"
UnitTypeIsInUnitGroup="Unit Type is in Group"
UnitTypeIsInUnitGroup="Does ",~Group," contain a unit of Type ",~Type
UnitTypeIsInUnitGroupHint=
UnitTypeIsInRegion="Unit Type is in Rect"
UnitTypeIsInRegion="Does ",~Rect," contain a unit of Type ",~Type
UnitTypeIsInRegionHint=
CharIsNumber="Is Character a Number"
CharIsNumber="Is ",~Character," a number"
CharIsNumberHint=
PlayerGroupIsEmpty="Is Player Group Empty"
PlayerGroupIsEmpty="Is force ",~Force," empty"
PlayerGroupIsEmptyHint=
IsPrime="Is Number a Prime Number"
IsPrime="Is ",~Nr," a prime number"
IsPrimeHint=
AnzahlVorkommenImString="Count Instances of Character in String"
AnzahlVorkommenImString="Count how many times ",~String," contains ",~Character
AnzahlVorkommenImStringHint=
Unit2UnitGroup="Convert Unit To Unit Group"
Unit2UnitGroup="Convert ",~Unit," to a new unit group"
Unit2UnitGroupHint=
IsLocPathable="Is Point Pathable"
IsLocPathable="Is ",~Point," pathable"
IsLocPathableHint="This will detect deep water, cliffs and all other obstacles"
GetUnitGoldCostById="Get Gold Cost of Unit Type"
GetUnitGoldCostById="Gold cost of ",~Unit Type
GetUnitGoldCostByIdHint=
GetUnitWoodCostById="Get Wood Cost of Unit Type"
GetUnitWoodCostById="Wood cost of ",~Unit Type
GetUnitWoodCostByIdHint=
GetItemGoldCostById="Get Gold Cost of Item Type"
GetItemGoldCostById="Gold cost of ",~Item Type
GetItemGoldCostByIdHint=
GetItemWoodCostById="Get Wood Cost of Item Type"
GetItemWoodCostById="Wood cost of ",~Item Type
GetItemWoodCostByIdHint=
GetRandomLocInRectOfCliffHeight="Random Location in Rect with Specific Height"
GetRandomLocInRectOfCliffHeight="Random Location with cliffheight ",~Height," in ",~Rect
GetRandomLocInRectOfCliffHeightHint="If the function doesn't find a point of that height in the rect it will return null"
RandomPointInRange="Random Point In Range of Location"
RandomPointInRange="Random point in range of ",~Location,", with a maximum range of ",~Range
RandomPointInRangeHint=
GetUnitsXItemOfType="X Item Of Type in Inventory"
GetUnitsXItemOfType=~Nr,"th item of Type ",~Type," carried by ",~Unit
GetUnitsXItemOfTypeHint=
JoinAttachPoints="Combine Attach Points"
JoinAttachPoints="Combine ",~Attach Point," and ",~Attach Point Modifier
JoinAttachPointsHint=
IsRectUnbuildable="Is Rect Unbuildable"
IsRectUnbuildable="Is ",~Rect," unbuildable"
IsRectUnbuildableHint=
EvaluateBoolexpr="Evaluate Condition"
EvaluateBoolexpr="Evaluate ",~Condition
EvaluateBoolexprHint="Returns whether the condition is true or false"
AsciiCharToInteger="Character To ASCII Integer"
AsciiCharToInteger="ASCII Integer (",~Char,")"
AsciiCharToIntegerHint=
AsciiIntegerToChar="ASCII Integer To Character"
AsciiIntegerToChar="Character(",~ASCII,")"
AsciiIntegerToCharHint=
TeamColor2RGB="Color Percentage of Team Color"
TeamColor2RGB="Percentage of ",~Teamcolor," of the ",~Colorchannel
TeamColor2RGBHint=
AngleBetweenPointsXY="Angle Between Points (Takes Coordinates)"
AngleBetweenPointsXY="Angle from point (",~X,",",~Y,") to point (",~X,",",~Y,")"
AngleBetweenPointsXYHint="Prevents the location leak"
DistanceBetweenPointsXY="Distance Between Points (Takes Coordinates)"
DistanceBetweenPointsXY="Distance between point (",~X,",",~Y,") and point (",~X,",",~Y,")"
DistanceBetweenPointsXYHint="Prevents the location leak"
GetIssuedOrderItem="Get Item of Issued Use Order"
GetIssuedOrderItem="Get item of issued use order"
GetIssuedOrderItemHint="As an event response for the issue item order action"
GetIssuedOrderItemSlot="Get Item Slot of Issued Use Order"
GetIssuedOrderItemSlot="Get item slot of issued use order"
GetIssuedOrderItemSlotHint="As an event response for the issue item order action"
IsRectInRegion="Is Rect in Region"
IsRectInRegion="Is ",~Rect," in ",~Region
IsRectInRegionHint=
GetUnitX="X Of Unit"
GetUnitX="X of ",~Unit
GetUnitXHint="[WEU ADD-IN]"
GetUnitY="Y Of Unit"
GetUnitY="Y of ",~Unit
GetUnitYHint="[WEU ADD-IN]"
returnubersplat="JASS Code"
returnubersplat=~Script Code
returnubersplatHint="Enter JASS code that returns an ubersplat. Example: 'my_ubersplat()'"
returnimage="JASS Code"
returnimage=~Script Code
returnimageHint="Enter JASS code that returns an image. Example: 'my_image()'"
returnlightning="JASS Code"
returnlightning=~Script Code
returnlightningHint="Enter JASS code that returns a lightning. Example: 'my_lightning()'"
returntrackable="JASS Code"
returntrackable=~Script Code
returntrackableHint="Enter JASS code that returns a trackable object. Example: 'my_trackable()'"
returnabilcode="JASS Code"
returnabilcode=~Script Code
returnabilcodeHint="Enter JASS code that returns an ability (integer). Example: 'my_abilcode()'"
returnboolean="JASS Code"
returnboolean=~Script Code
returnbooleanHint="Enter JASS code that returns a boolean value. Example: 'my_boolean()'"
returndestructable="JASS Code"
returndestructable=~Script Code
returndestructableHint="Enter JASS code that returns a destructible (~=handle). Example: 'my_destructable()'"
returndestructablecode="JASS Code"
returndestructablecode=~Script Code
returndestructablecodeHint="Enter JASS code that returns a destructible type (integer). Example: 'my_destructablecode()'"
returndialog="JASS Code"
returndialog=~Script Code
returndialogHint="Enter JASS code that returns a dialog. Example: 'my_dialog()'"
returnbutton="JASS Code"
returnbutton=~Script Code
returnbuttonHint="Enter JASS code that returns a dialog button. Example: 'my_button()'"
returneventid="JASS Code"
returneventid=~Script Code
returneventidHint="Enter JASS code that returns an eventid value. Example: 'my_eventid()'"
returntexttag="JASS Code"
returntexttag=~Script Code
returntexttagHint="Enter JASS code that returns a Floating Text. Example: 'my_texttag()'"
returninteger="JASS Code"
returninteger=~Script Code
returnintegerHint="Enter JASS code that returns an integer value. Example: 'my_integer()'"
returnitem="JASS Code"
returnitem=~Script Code
returnitemHint="Enter JASS code that returns an item (~=handle). Example: 'my_item()'"
returnitemcode="JASS Code"
returnitemcode=~Script Code
returnitemcodeHint="Enter JASS code that returns an item type (integer). Example: 'my_itemcode()'"
returnleaderboard="JASS Code"
returnleaderboard=~Script Code
returnleaderboardHint="Enter JASS code that returns a leaderboard. Example: 'my_leaderboard()'"
returnmultiboard="JASS Code"
returnmultiboard=~Script Code
returnmultiboardHint="Enter JASS code that returns a multiboard value. Example: 'my_multiboard()'"
returnmultiboarditem="JASS Code"
returnmultiboarditem=~Script Code
returnmultiboarditemHint="Enter JASS code that returns a Multiboard Item. Example: 'my_multiboarditem()'"
returnordercode="JASS Code"
returnordercode=~Script Code
returnordercodeHint="Enter JASS code that returns an orderid value (integer). Example: 'my_ordercode()'"
returnplayer="JASS Code"
returnplayer=~Script Code
returnplayerHint="Enter JASS code that returns a Player. Example: 'my_player()'"
returnforce="JASS Code"
returnforce=~Script Code
returnforceHint="Enter JASS code that returns a Player Group. Example: 'my_force()'"
returnlocation="JASS Code"
returnlocation=~Script Code
returnlocationHint="Enter JASS code that returns a Point value. Example: 'my_location()'"
returnreal="JASS Code"
returnreal=~Script Code
returnrealHint="Enter JASS code that returns a Real value. Example: 'my_real()'"
returnrect="JASS Code"
returnrect=~Script Code
returnrectHint="Enter JASS code that returns a rect value. Example: 'my_rect()'"
returnregion="JASS Code"
returnregion=~Script Code
returnregionHint="Enter JASS code that returns a region value. Example: 'my_region()'"
returneffect="JASS Code"
returneffect=~Script Code
returneffectHint="Enter JASS code that returns a special effect. Example: 'my_effect()'"
returnstring="JASS Code"
returnstring=~Script Code
returnstringHint="Enter JASS code that returns a String. Example: 'my_string()'"
returnterraindeformation="JASS Code"
returnterraindeformation=~Script Code
returnterraindeformationHint="Enter JASS code that returns terrain deformation. Example: 'my_terraindeformation()'"
returntimer="JASS Code"
returntimer=~Script Code
returntimerHint="Enter JASS code that returns a Timer. Example: 'my_timer()'"
returntimerdialog="JASS Code"
returntimerdialog=~Script Code
returntimerdialogHint="Enter JASS code that returns a Timer Window value. Example: 'my_timerdialog()'"
returntrigger="JASS Code"
returntrigger=~Script Code
returntriggerHint="Enter JASS code that returns a Trigger. Example: 'my_trigger()'"
returntriggeraction="JASS Code"
returntriggeraction=~Script Code
returntriggeractionHint="Enter JASS code that returns a Trigger Action. Example: 'my_triggeraction()'"
returntriggercondition="JASS Code"
returntriggercondition=~Script Code
returntriggerconditionHint="Enter JASS code that returns a Trigger Condition. Example: 'my_triggercondition()'"
returnunit="JASS Code"
returnunit=~Script Code
returnunitHint="Enter JASS code that returns an unit (~=handle). Example: 'my_unit()'"
returngroup="JASS Code"
returngroup=~Script Code
returngroupHint="Enter JASS code that returns an Unit Group. Example: 'my_group()'"
returnunitcode="JASS Code"
returnunitcode=~Script Code
returnunitcodeHint="Enter JASS code that returns an Unit Type (integer). Example: 'my_unitcode()'"
returnmusicfile="JASS Code"
returnmusicfile=~Script Code
returnmusicfileHint="Enter JASS code that returns a Music file path (String) use ; to separate paths if you are reffering to a music list. Example: 'my_music()'"
returnheroskillcode="JASS Code"
returnheroskillcode=~Script Code
returnheroskillcodeHint="Enter JASS code that returns a Hero Skill (integer). Example: 'my_HeroSkill()'"
[AIFunctionStrings]
TownThreatened="Town Is Under Attack"
TownThreatened="Town is under attack"
TownThreatenedHint=""
TownHasMine="Town Has Mine"
TownHasMine="Town #",~Town," has an active gold mine"
TownHasHall="Town Has Hall"
TownHasHall="Town #",~Town," has a town hall building"
CaptainIsHome="Attack Captain Is At Home"
CaptainIsHome="Attack captain is at home"
CaptainIsFull="Attack Group Is Complete"
CaptainIsFull="Attack group is complete"
CaptainIsEmpty="Attack Group Is Empty"
CaptainIsEmpty="Attack group is empty"
CaptainRetreating="Attack Captain Is Retreating"
CaptainRetreating="Attack captain is retreating"
CaptainAtGoal="Attack Captain Is At Goal"
CaptainAtGoal="Attack captain is at goal"
CaptainInCombat="Captain Is In Combat"
CaptainInCombat=~Captain Type," captain is in combat"
CreepsOnMap="Creeps Exist Anywhere"
CreepsOnMap="Creeps exist anywhere on the map"
ExpansionNeeded="Expansion Spot Needed"
ExpansionNeeded="Expansion spot needed"
ExpansionNeededHint="Returns true if the AI needs to build an expansion but there are currently no open spots."
GetUnitCount="Total Units of Type"
GetUnitCount="Total number of ",~Unit Type," units"
GetUnitCountHint="This count includes units currently being trained or constructed."
GetUnitCountDone="Total Units of Type - Completed Only"
GetUnitCountDone="Total number of ",~Unit Type," units completed"
GetUnitCountDoneHint="This count does NOT include units currently being trained or constructed."
GetTownUnitCount="Total Units of Type - By Town"
GetTownUnitCount="Total number of ",~Unit Type," units in town #",~Town," (completed only: ",~Option,")"
GetTownUnitCountHint=""
GetMinesOwned="Number of Mines Owned"
GetMinesOwned="Number of mines owned"
GetMinesOwnedHint="The total number of mines currently in use by the AI player."
GetGoldOwned="Total Unmined Gold Owned"
GetGoldOwned="Total unmined gold owned"
GetGoldOwnedHint="The total amount of gold remaining in all mines currently in use."
TownWithMine="Town With Mine"
TownWithMine="Town with a gold mine"
TownWithMineHint="Returns the ID of the first town with an active gold mine"
GetGold="Current Gold Amount"
GetGold="Current gold amount"
GetGoldHint="The amount of gold currently owned by the AI player"
GetWood="Current Lumber Amount"
GetWood="Current lumber amount"
GetWoodHint="The amount of lumber currently owned by the AI player"
GetUnitGoldCost="Gold Cost of Unit"
GetUnitGoldCost="Gold cost of ",~Unit Type
GetUnitWoodCost="Lumber Cost of Unit"
GetUnitWoodCost="Lumber cost of ",~Unit Type
GetUnitBuildTime="Build Time of Unit"
GetUnitBuildTime="Build time of ",~Unit Type
GetUnitBuildTimeHint="Build time is in seconds."
GetUpgradeLevel="Current Upgrade Level"
GetUpgradeLevel="Upgrade level of ",~Upgrade Type
GetUpgradeGoldCost="Gold Cost of Upgrade"
GetUpgradeGoldCost="Gold cost of the next ",~Upgrade Type," upgrade"
GetUpgradeWoodCost="Lumber Cost of Upgrade"
GetUpgradeWoodCost="Lumber cost of the next ",~Upgrade Type," upgrade"
GetNextExpansion="Next Expansion Town"
GetNextExpansion="Next expansion town"
GetNextExpansionHint="Returns the town ID for the next expansion location"
FoodUsed="Food Used"
FoodUsed="Food used"
FoodUsedHint="The total amount of food currently being used by the AI player"
TotalFoodProduced="Food Produced"
TotalFoodProduced="Food produced"
TotalFoodProducedHint="The total amount of food currently produced by the AI player"
GetFoodMade="Food Produced By Unit"
GetFoodMade="Food produced by ",~Unit Type," units"
CommandsWaiting="Commands Waiting"
CommandsWaiting="Number of commands waiting"
CommandsWaitingHint="Commands can be sent from map triggers via the 'AI - Send AI Command' action."
CheckLastCommand="Last Command"
CheckLastCommand="Last command sent, ",~Option," the command"
CheckLastCommandHint="Commands can be sent from map triggers via the 'AI - Send AI Command' action."
CheckLastCommandData="Last Command Data"
CheckLastCommandData="Last command data sent, ",~Option," the command"
CheckLastCommandDataHint="Commands can be sent from map triggers via the 'AI - Send AI Command' action."
CaptainGroupSize="Attack Group Size"
CaptainGroupSize="Attack group size"
CaptainGroupSizeHint="The current number of units in the attack group."
CaptainReadinessHP="Attack Group Health Level"
CaptainReadinessHP="Attack group health level"
CaptainReadinessHPHint="The health level is an estimation of the average attack group health, with 100 being full."
CaptainReadinessMa="Attack Group Mana Level"
CaptainReadinessMa="Attack group mana level"
CaptainReadinessMaHint="The mana level is an estimation of the average attack group mana, with 100 being full."
CurrentAttackWave="Current Attack Wave"
CurrentAttackWave="Current attack wave"
CurrentAttackWaveHint="Attack waves are defined in the attack wave list in the Attacking tab."
MeleeDifficulty="Melee Difficulty Level"
MeleeDifficulty="Melee difficulty level"
